{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import{PureComponent}from'react';import Field from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/Field\";import Form from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/Form\";import{signInStateType}from\"/home/marketihor/scandipwa/packages/scandipwa/src/type/Account\";/** @namespace Component/MyAccountSignIn/Component */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _MyAccountSignIn=/*#__PURE__*/function(_Extensible){_inherits(_MyAccountSignIn,_Extensible);var _super=_createSuper(_MyAccountSignIn);function _MyAccountSignIn(){_classCallCheck(this,_MyAccountSignIn);return _super.apply(this,arguments);}_createClass(_MyAccountSignIn,[{key:\"renderSignInForm\",value:function renderSignInForm(){var _this$props=this.props,onSignInAttempt=_this$props.onSignInAttempt,onSignInSuccess=_this$props.onSignInSuccess,onFormError=_this$props.onFormError,handleForgotPassword=_this$props.handleForgotPassword,emailValue=_this$props.emailValue,handleEmailInput=_this$props.handleEmailInput,isCheckout=_this$props.isCheckout;return/*#__PURE__*/_checkBEM(React,Form,{key:\"sign-in\",onSubmit:onSignInAttempt,onSubmitSuccess:onSignInSuccess,onSubmitError:onFormError},/*#__PURE__*/_checkBEM(React,Field,{type:\"text\",label:__('Email'),id:\"email\",name:\"email\",value:emailValue,autocomplete:isCheckout?'off':'email',validation:['notEmpty','email'],onChange:handleEmailInput}),/*#__PURE__*/_checkBEM(React,Field,{type:\"password\",label:__('Password'),id:\"password\",name:\"password\",autocomplete:\"current-password\",validation:['notEmpty','password']}),/*#__PURE__*/_checkBEM(React,\"div\",{block:\"MyAccountOverlay\",elem:\"Buttons\"},/*#__PURE__*/_checkBEM(React,\"button\",{block:\"Button\"},__('Sign in'))),/*#__PURE__*/_checkBEM(React,\"button\",{block:\"Button\",mods:{likeLink:true},onClick:handleForgotPassword},__('Forgot password?')));}},{key:\"renderAdditionalField\",value:function renderAdditionalField(){var _this$props2=this.props,isCheckout=_this$props2.isCheckout,handleCreateAccount=_this$props2.handleCreateAccount,state=_this$props2.state;if(isCheckout){return null;}return/*#__PURE__*/_checkBEM(React,\"article\",{block:\"MyAccountOverlay\",elem:\"Additional\",mods:{state:state}},/*#__PURE__*/_checkBEM(React,\"section\",null,/*#__PURE__*/_checkBEM(React,\"h4\",{id:\"forgot-password-label\"},__('Don`t have an account?')),/*#__PURE__*/_checkBEM(React,\"button\",{block:\"Button\",mods:{isHollow:true},onClick:handleCreateAccount},__('Create an account'))));}},{key:\"render\",value:function render(){return/*#__PURE__*/_checkBEM(React,React.Fragment,null,this.renderSignInForm(),this.renderAdditionalField());}}]);return _MyAccountSignIn;}(Extensible(PureComponent));_MyAccountSignIn.defaultProps={handleEmailInput:function handleEmailInput(){}};Object.defineProperty(_MyAccountSignIn,'name',{value:'MyAccountSignIn'});export var MyAccountSignIn=middleware(_MyAccountSignIn,\"Component/MyAccountSignIn/Component\");export default MyAccountSignIn;","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountSignIn/MyAccountSignIn.component.js"],"names":["PureComponent","Field","Form","signInStateType","MyAccountSignIn","props","onSignInAttempt","onSignInSuccess","onFormError","handleForgotPassword","emailValue","handleEmailInput","isCheckout","__","likeLink","handleCreateAccount","state","isHollow","renderSignInForm","renderAdditionalField","defaultProps","Object","defineProperty","_MyAccountSignIn","value"],"mappings":"ojBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,OAASA,aAAT,KAA8B,OAA9B,CAEA,MAAOC,CAAAA,KAAP,yEACA,MAAOC,CAAAA,IAAP,wEACA,OAASC,eAAT,sEAEA,qD,wEACA,UAAaC,CAAAA,gBAAb,2RAiBI,2BAAmB,iBASX,KAAKC,KATM,CAEXC,eAFW,aAEXA,eAFW,CAGXC,eAHW,aAGXA,eAHW,CAIXC,WAJW,aAIXA,WAJW,CAKXC,oBALW,aAKXA,oBALW,CAMXC,UANW,aAMXA,UANW,CAOXC,gBAPW,aAOXA,gBAPW,CAQXC,UARW,aAQXA,UARW,CAWf,mCACK,IADL,EAEM,GAAG,CAAC,SAFV,CAGM,QAAQ,CAAGN,eAHjB,CAIM,eAAe,CAAGC,eAJxB,CAKM,aAAa,CAAGC,WALtB,+BAOS,KAPT,EAQU,IAAI,CAAC,MARf,CASU,KAAK,CAAGK,EAAE,CAAC,OAAD,CATpB,CAUU,EAAE,CAAC,OAVb,CAWU,IAAI,CAAC,OAXf,CAYU,KAAK,CAAGH,UAZlB,CAaU,YAAY,CAAGE,UAAU,CAAG,KAAH,CAAW,OAb9C,CAcU,UAAU,CAAG,CAAC,UAAD,CAAa,OAAb,CAdvB,CAeU,QAAQ,CAAGD,gBAfrB,gCAiBS,KAjBT,EAkBU,IAAI,CAAC,UAlBf,CAmBU,KAAK,CAAGE,EAAE,CAAC,UAAD,CAnBpB,CAoBU,EAAE,CAAC,UApBb,CAqBU,IAAI,CAAC,UArBf,CAsBU,YAAY,CAAC,kBAtBvB,CAuBU,UAAU,CAAG,CAAC,UAAD,CAAa,UAAb,CAvBvB,uCAyBa,KAAK,CAAC,kBAzBnB,CAyBsC,IAAI,CAAC,SAzB3C,yCA0BoB,KAAK,CAAC,QA1B1B,EA0BqCA,EAAE,CAAC,SAAD,CA1BvC,0CA6BU,KAAK,CAAC,QA7BhB,CA8BU,IAAI,CAAG,CAAEC,QAAQ,CAAE,IAAZ,CA9BjB,CA+BU,OAAO,CAAGL,oBA/BpB,EAiCcI,EAAE,CAAC,kBAAD,CAjChB,GAqCH,CAjEL,qCAmEI,gCAAwB,kBAKhB,KAAKR,KALW,CAEhBO,UAFgB,cAEhBA,UAFgB,CAGhBG,mBAHgB,cAGhBA,mBAHgB,CAIhBC,KAJgB,cAIhBA,KAJgB,CAOpB,GAAIJ,UAAJ,CAAgB,CACZ,MAAO,KAAP,CACH,CAED,8CACa,KAAK,CAAC,kBADnB,CACsC,IAAI,CAAC,YAD3C,CACwD,IAAI,CAAG,CAAEI,KAAK,CAALA,KAAF,CAD/D,iFAGgB,EAAE,CAAC,uBAHnB,EAG6CH,EAAE,CAAC,wBAAD,CAH/C,yCAKc,KAAK,CAAC,QALpB,CAMc,IAAI,CAAG,CAAEI,QAAQ,CAAE,IAAZ,CANrB,CAOc,OAAO,CAAGF,mBAPxB,EASkBF,EAAE,CAAC,mBAAD,CATpB,IAcH,CA5FL,sBA8FI,iBAAS,CACL,uDAEU,KAAKK,gBAAL,EAFV,CAGU,KAAKC,qBAAL,EAHV,EAMH,CArGL,yDAAaf,gB,CAaFgB,Y,CAAe,CAClBT,gBAAgB,CAAE,2BAAM,CAAE,CADR,C,CA/B1BU,MAAM,CAACC,cAAP,CAAsBC,gBAAtB,CAAwC,MAAxC,CAAgD,CAAEC,KAAK,CAAE,iBAAT,CAAhD,E,8FA0HA,cAAepB,CAAAA,eAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Field from 'Component/Field';\nimport Form from 'Component/Form';\nimport { signInStateType } from 'Type/Account';\n\n/** @namespace Component/MyAccountSignIn/Component */\nexport class MyAccountSignIn extends PureComponent {\n    static propTypes = {\n        onSignInSuccess: PropTypes.func.isRequired,\n        onSignInAttempt: PropTypes.func.isRequired,\n        onFormError: PropTypes.func.isRequired,\n        handleForgotPassword: PropTypes.func.isRequired,\n        handleCreateAccount: PropTypes.func.isRequired,\n        isCheckout: PropTypes.bool.isRequired,\n        state: signInStateType.isRequired,\n        emailValue: PropTypes.string.isRequired,\n        handleEmailInput: PropTypes.func\n    };\n\n    static defaultProps = {\n        handleEmailInput: () => {}\n    };\n\n    renderSignInForm() {\n        const {\n            onSignInAttempt,\n            onSignInSuccess,\n            onFormError,\n            handleForgotPassword,\n            emailValue,\n            handleEmailInput,\n            isCheckout\n        } = this.props;\n\n        return (\n            <Form\n              key=\"sign-in\"\n              onSubmit={ onSignInAttempt }\n              onSubmitSuccess={ onSignInSuccess }\n              onSubmitError={ onFormError }\n            >\n                <Field\n                  type=\"text\"\n                  label={ __('Email') }\n                  id=\"email\"\n                  name=\"email\"\n                  value={ emailValue }\n                  autocomplete={ isCheckout ? 'off' : 'email' }\n                  validation={ ['notEmpty', 'email'] }\n                  onChange={ handleEmailInput }\n                />\n                <Field\n                  type=\"password\"\n                  label={ __('Password') }\n                  id=\"password\"\n                  name=\"password\"\n                  autocomplete=\"current-password\"\n                  validation={ ['notEmpty', 'password'] }\n                />\n                <div block=\"MyAccountOverlay\" elem=\"Buttons\">\n                    <button block=\"Button\">{ __('Sign in') }</button>\n                </div>\n                <button\n                  block=\"Button\"\n                  mods={ { likeLink: true } }\n                  onClick={ handleForgotPassword }\n                >\n                    { __('Forgot password?') }\n                </button>\n            </Form>\n        );\n    }\n\n    renderAdditionalField() {\n        const {\n            isCheckout,\n            handleCreateAccount,\n            state\n        } = this.props;\n\n        if (isCheckout) {\n            return null;\n        }\n\n        return (\n            <article block=\"MyAccountOverlay\" elem=\"Additional\" mods={ { state } }>\n                <section>\n                    <h4 id=\"forgot-password-label\">{ __('Don`t have an account?') }</h4>\n                    <button\n                      block=\"Button\"\n                      mods={ { isHollow: true } }\n                      onClick={ handleCreateAccount }\n                    >\n                        { __('Create an account') }\n                    </button>\n                </section>\n            </article>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                { this.renderSignInForm() }\n                { this.renderAdditionalField() }\n            </>\n        );\n    }\n}\n\nexport default MyAccountSignIn;\n"]},"metadata":{},"sourceType":"module"}