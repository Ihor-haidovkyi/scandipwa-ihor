{"ast":null,"code":"import _regeneratorRuntime from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/import{assert}from'workbox-core/_private/assert.js';import{cacheNames}from'workbox-core/_private/cacheNames.js';import{cacheWrapper}from'workbox-core/_private/cacheWrapper.js';import{logger}from'workbox-core/_private/logger.js';import{WorkboxError}from'workbox-core/_private/WorkboxError.js';import{messages}from\"./utils/messages.js\";import\"./_version.js\";/**\n * An implementation of a\n * [cache-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */var CacheOnly=/*#__PURE__*/function(){/**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */function CacheOnly(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,CacheOnly);this._cacheName=cacheNames.getRuntimeName(options.cacheName);this._plugins=options.plugins||[];this._matchOptions=options.matchOptions;}/**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */_createClass(CacheOnly,[{key:\"handle\",value:function(){var _handle=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var event,request,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event=_ref.event,request=_ref.request;if(typeof request==='string'){request=new Request(request);}if(process.env.NODE_ENV!=='production'){assert.isInstance(request,Request,{moduleName:'workbox-strategies',className:'CacheOnly',funcName:'makeRequest',paramName:'request'});}_context.next=5;return cacheWrapper.match({cacheName:this._cacheName,request:request,event:event,matchOptions:this._matchOptions,plugins:this._plugins});case 5:response=_context.sent;if(process.env.NODE_ENV!=='production'){logger.groupCollapsed(messages.strategyStart('CacheOnly',request));if(response){logger.log(\"Found a cached response in the '\".concat(this._cacheName,\"'\")+\" cache.\");messages.printFinalResponse(response);}else{logger.log(\"No response found in the '\".concat(this._cacheName,\"' cache.\"));}logger.groupEnd();}if(response){_context.next=9;break;}throw new WorkboxError('no-response',{url:request.url});case 9:return _context.abrupt(\"return\",response);case 10:case\"end\":return _context.stop();}}},_callee,this);}));function handle(_x){return _handle.apply(this,arguments);}return handle;}()}]);return CacheOnly;}();export{CacheOnly};","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/workbox-strategies/CacheOnly.js"],"names":["assert","cacheNames","cacheWrapper","logger","WorkboxError","messages","CacheOnly","options","_cacheName","getRuntimeName","cacheName","_plugins","plugins","_matchOptions","matchOptions","event","request","Request","process","env","NODE_ENV","isInstance","moduleName","className","funcName","paramName","match","response","groupCollapsed","strategyStart","log","printFinalResponse","groupEnd","url"],"mappings":"+jBAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,OAASA,MAAT,KAAuB,iCAAvB,CACA,OAASC,UAAT,KAA2B,qCAA3B,CACA,OAASC,YAAT,KAA6B,uCAA7B,CACA,OAASC,MAAT,KAAuB,iCAAvB,CACA,OAASC,YAAT,KAA6B,uCAA7B,CACA,OAASC,QAAT,2BACA,sBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,GACMC,CAAAA,S,yBACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACI,oBAA0B,IAAdC,CAAAA,OAAc,2DAAJ,EAAI,iCACtB,KAAKC,UAAL,CAAkBP,UAAU,CAACQ,cAAX,CAA0BF,OAAO,CAACG,SAAlC,CAAlB,CACA,KAAKC,QAAL,CAAgBJ,OAAO,CAACK,OAAR,EAAmB,EAAnC,CACA,KAAKC,aAAL,CAAqBN,OAAO,CAACO,YAA7B,CACH,CACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,O,2HACI,kKAAeC,KAAf,MAAeA,KAAf,CAAsBC,OAAtB,MAAsBA,OAAtB,CACI,GAAI,MAAOA,CAAAA,OAAP,GAAmB,QAAvB,CAAiC,CAC7BA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAYD,OAAZ,CAAV,CACH,CACD,GAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvCpB,MAAM,CAACqB,UAAP,CAAkBL,OAAlB,CAA2BC,OAA3B,CAAoC,CAChCK,UAAU,CAAE,oBADoB,CAEhCC,SAAS,CAAE,WAFqB,CAGhCC,QAAQ,CAAE,aAHsB,CAIhCC,SAAS,CAAE,SAJqB,CAApC,EAMH,CAXL,sBAY2BvB,CAAAA,YAAY,CAACwB,KAAb,CAAmB,CACtChB,SAAS,CAAE,KAAKF,UADsB,CAEtCQ,OAAO,CAAPA,OAFsC,CAGtCD,KAAK,CAALA,KAHsC,CAItCD,YAAY,CAAE,KAAKD,aAJmB,CAKtCD,OAAO,CAAE,KAAKD,QALwB,CAAnB,CAZ3B,QAYUgB,QAZV,eAmBI,GAAIT,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvCjB,MAAM,CAACyB,cAAP,CAAsBvB,QAAQ,CAACwB,aAAT,CAAuB,WAAvB,CAAoCb,OAApC,CAAtB,EACA,GAAIW,QAAJ,CAAc,CACVxB,MAAM,CAAC2B,GAAP,CAAW,0CAAmC,KAAKtB,UAAxC,eAAX,EAEAH,QAAQ,CAAC0B,kBAAT,CAA4BJ,QAA5B,EACH,CAJD,IAKK,CACDxB,MAAM,CAAC2B,GAAP,qCAAwC,KAAKtB,UAA7C,cACH,CACDL,MAAM,CAAC6B,QAAP,GACH,CA9BL,GA+BSL,QA/BT,8BAgCc,IAAIvB,CAAAA,YAAJ,CAAiB,aAAjB,CAAgC,CAAE6B,GAAG,CAAEjB,OAAO,CAACiB,GAAf,CAAhC,CAhCd,wCAkCWN,QAlCX,8D,uGAqCJ,OAASrB,SAAT","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [cache-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass CacheOnly {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'CacheOnly',\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        const response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('CacheOnly', request));\n            if (response) {\n                logger.log(`Found a cached response in the '${this._cacheName}'` +\n                    ` cache.`);\n                messages.printFinalResponse(response);\n            }\n            else {\n                logger.log(`No response found in the '${this._cacheName}' cache.`);\n            }\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n}\nexport { CacheOnly };\n"]},"metadata":{},"sourceType":"module"}