{"ast":null,"code":"var _jsxFileName = \"/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountTabList/MyAccountTabList.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport ExpandableContent from \"/home/marketihor/scandipwa/packages/scandipwa/src/component/ExpandableContent\";\nimport MyAccountTabListItem from \"/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountTabListItem\";\nimport { activeTabType, tabMapType } from \"/home/marketihor/scandipwa/packages/scandipwa/src/type/Account\";\nimport { isSignedIn } from \"/home/marketihor/scandipwa/packages/scandipwa/src/util/Auth\";\nimport \"./MyAccountTabList.style\";\n/** @namespace Component/MyAccountTabList/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _MyAccountTabList extends Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      isContentExpanded: false\n    };\n\n    this.toggleExpandableContent = function () {\n      _this.setState(function ({\n        isContentExpanded\n      }) {\n        return {\n          isContentExpanded: !isContentExpanded\n        };\n      });\n    };\n\n    this.onTabClick = function (key) {\n      const {\n        changeActiveTab\n      } = _this.props;\n\n      if (!isSignedIn()) {\n        return;\n      }\n\n      _this.toggleExpandableContent();\n\n      changeActiveTab(key);\n    };\n\n    this.renderTabListItem = function (tabEntry) {\n      const {\n        activeTab\n      } = _this.props;\n      const [key] = tabEntry;\n      return /*#__PURE__*/_checkBEM(React, MyAccountTabListItem, {\n        key: key,\n        isActive: activeTab === key,\n        changeActiveTab: _this.onTabClick,\n        tabEntry: tabEntry,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      });\n    };\n  }\n\n  renderLogoutTab() {\n    const {\n      handleLogout\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"li\", {\n      key: \"logout\",\n      block: \"MyAccountTabListItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"button\", {\n      block: \"MyAccountTabListItem\",\n      elem: \"Button\",\n      onClick: handleLogout,\n      role: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, __('Logout')));\n  }\n\n  render() {\n    const {\n      tabMap,\n      activeTab\n    } = this.props;\n    const {\n      isContentExpanded\n    } = this.state;\n    const {\n      name\n    } = tabMap[activeTab];\n    const tabs = [...Object.entries(tabMap).map(this.renderTabListItem), this.renderLogoutTab()];\n    return /*#__PURE__*/_checkBEM(React, ExpandableContent, {\n      heading: name,\n      isContentExpanded: isContentExpanded,\n      onClick: this.toggleExpandableContent,\n      mix: {\n        block: 'MyAccountTabList'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, tabs));\n  }\n\n}\n_MyAccountTabList.propTypes = {\n  tabMap: tabMapType.isRequired,\n  activeTab: activeTabType.isRequired,\n  handleLogout: PropTypes.func.isRequired,\n  changeActiveTab: PropTypes.func.isRequired\n};\nObject.defineProperty(_MyAccountTabList, 'name', {\n  value: 'MyAccountTabList'\n});\n\nexport const MyAccountTabList = middleware(_MyAccountTabList, \"Component/MyAccountTabList/Component\");\nexport default MyAccountTabList;","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountTabList/MyAccountTabList.component.js"],"names":["PropTypes","PureComponent","ExpandableContent","MyAccountTabListItem","activeTabType","tabMapType","isSignedIn","MyAccountTabList","state","isContentExpanded","toggleExpandableContent","setState","onTabClick","key","changeActiveTab","props","renderTabListItem","tabEntry","activeTab","renderLogoutTab","handleLogout","__","render","tabMap","name","tabs","Object","entries","map","block","propTypes","isRequired","func","defineProperty","_MyAccountTabList","value"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,OAAOC,iBAAP;AACA,OAAOC,oBAAP;AACA,SAASC,aAAT,EAAwBC,UAAxB;AACA,SAASC,UAAT;AAEA;AAEA;;;;AACA,OAAO,MAAMC,iBAAN,mCAA6C;AAAA;AAAA;;AAAA;AAAA;AAAA,SAQhDC,KARgD,GAQxC;AACJC,MAAAA,iBAAiB,EAAE;AADf,KARwC;;AAAA,SAYhDC,uBAZgD,GAYtB,YAAM;AAC5B,MAAA,KAAI,CAACC,QAAL,CAAc,UAAC;AAAEF,QAAAA;AAAF,OAAD;AAAA,eAA4B;AAAEA,UAAAA,iBAAiB,EAAE,CAACA;AAAtB,SAA5B;AAAA,OAAd;AACH,KAd+C;;AAAA,SAgBhDG,UAhBgD,GAgBnC,UAACC,GAAD,EAAS;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAsB,KAAI,CAACC,KAAjC;;AACA,UAAI,CAACT,UAAU,EAAf,EAAmB;AACf;AACH;;AACD,MAAA,KAAI,CAACI,uBAAL;;AACAI,MAAAA,eAAe,CAACD,GAAD,CAAf;AACH,KAvB+C;;AAAA,SAyBhDG,iBAzBgD,GAyB5B,UAACC,QAAD,EAAc;AAC9B,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAI,CAACH,KAA3B;AACA,YAAM,CAACF,GAAD,IAAQI,QAAd;AAEA,2CACK,oBADL;AAEM,QAAA,GAAG,EAAGJ,GAFZ;AAGM,QAAA,QAAQ,EAAGK,SAAS,KAAKL,GAH/B;AAIM,QAAA,eAAe,EAAG,KAAI,CAACD,UAJ7B;AAKM,QAAA,QAAQ,EAAGK,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQH,KArC+C;AAAA;;AAuChDE,EAAAA,eAAe,GAAG;AACd,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKL,KAA9B;AAEA;AAEM,MAAA,GAAG,EAAC,QAFV;AAGM,MAAA,KAAK,EAAC,sBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMU,MAAA,KAAK,EAAC,sBANhB;AAOU,MAAA,IAAI,EAAC,QAPf;AAQU,MAAA,OAAO,EAAGK,YARpB;AASU,MAAA,IAAI,EAAC,MATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWcC,EAAE,CAAC,QAAD,CAXhB;AAeH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,MAAF;AAAUL,MAAAA;AAAV,QAAwB,KAAKH,KAAnC;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAwB,KAAKD,KAAnC;AACA,UAAM;AAAEgB,MAAAA;AAAF,QAAWD,MAAM,CAACL,SAAD,CAAvB;AAEA,UAAMO,IAAI,GAAG,CACT,GAAGC,MAAM,CAACC,OAAP,CAAeJ,MAAf,EAAuBK,GAAvB,CAA2B,KAAKZ,iBAAhC,CADM,EAET,KAAKG,eAAL,EAFS,CAAb;AAKA,yCACK,iBADL;AAEM,MAAA,OAAO,EAAGK,IAFhB;AAGM,MAAA,iBAAiB,EAAGf,iBAH1B;AAIM,MAAA,OAAO,EAAG,KAAKC,uBAJrB;AAKM,MAAA,GAAG,EAAG;AAAEmB,QAAAA,KAAK,EAAE;AAAT,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQcJ,IARd;AAYH;;AAjF+C;AAAvClB,iB,CACFuB,S,GAAY;AACfP,EAAAA,MAAM,EAAElB,UAAU,CAAC0B,UADJ;AAEfb,EAAAA,SAAS,EAAEd,aAAa,CAAC2B,UAFV;AAGfX,EAAAA,YAAY,EAAEpB,SAAS,CAACgC,IAAV,CAAeD,UAHd;AAIfjB,EAAAA,eAAe,EAAEd,SAAS,CAACgC,IAAV,CAAeD;AAJjB,C;AAvBvBL,MAAM,CAACO,cAAP,CAAsBC,iBAAtB,EAAyC,MAAzC,EAAiD;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAjD;;;AA0GA,eAAe5B,gBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport ExpandableContent from 'Component/ExpandableContent';\nimport MyAccountTabListItem from 'Component/MyAccountTabListItem';\nimport { activeTabType, tabMapType } from 'Type/Account';\nimport { isSignedIn } from 'Util/Auth';\n\nimport './MyAccountTabList.style';\n\n/** @namespace Component/MyAccountTabList/Component */\nexport class MyAccountTabList extends PureComponent {\n    static propTypes = {\n        tabMap: tabMapType.isRequired,\n        activeTab: activeTabType.isRequired,\n        handleLogout: PropTypes.func.isRequired,\n        changeActiveTab: PropTypes.func.isRequired\n    };\n\n    state = {\n        isContentExpanded: false\n    };\n\n    toggleExpandableContent = () => {\n        this.setState(({ isContentExpanded }) => ({ isContentExpanded: !isContentExpanded }));\n    };\n\n    onTabClick = (key) => {\n        const { changeActiveTab } = this.props;\n        if (!isSignedIn()) {\n            return;\n        }\n        this.toggleExpandableContent();\n        changeActiveTab(key);\n    };\n\n    renderTabListItem = (tabEntry) => {\n        const { activeTab } = this.props;\n        const [key] = tabEntry;\n\n        return (\n            <MyAccountTabListItem\n              key={ key }\n              isActive={ activeTab === key }\n              changeActiveTab={ this.onTabClick }\n              tabEntry={ tabEntry }\n            />\n        );\n    };\n\n    renderLogoutTab() {\n        const { handleLogout } = this.props;\n\n        return (\n            <li\n              key=\"logout\"\n              block=\"MyAccountTabListItem\"\n            >\n                <button\n                  block=\"MyAccountTabListItem\"\n                  elem=\"Button\"\n                  onClick={ handleLogout }\n                  role=\"link\"\n                >\n                    { __('Logout') }\n                </button>\n            </li>\n        );\n    }\n\n    render() {\n        const { tabMap, activeTab } = this.props;\n        const { isContentExpanded } = this.state;\n        const { name } = tabMap[activeTab];\n\n        const tabs = [\n            ...Object.entries(tabMap).map(this.renderTabListItem),\n            this.renderLogoutTab()\n        ];\n\n        return (\n            <ExpandableContent\n              heading={ name }\n              isContentExpanded={ isContentExpanded }\n              onClick={ this.toggleExpandableContent }\n              mix={ { block: 'MyAccountTabList' } }\n            >\n                <ul>\n                    { tabs }\n                </ul>\n            </ExpandableContent>\n        );\n    }\n}\n\nexport default MyAccountTabList;\n"]},"metadata":{},"sourceType":"module"}