{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/import{getOrCreatePrecacheController}from\"./utils/getOrCreatePrecacheController.js\";import\"./_version.js\";/**\n * Helper function that calls\n * {@link PrecacheController#createHandler} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandler} on that instance,\n * instead of using this function.\n *\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {module:workbox-routing~handlerCallback}\n *\n * @memberof module:workbox-precaching\n */function createHandler(){var fallbackToNetwork=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;var precacheController=getOrCreatePrecacheController();return precacheController.createHandler(fallbackToNetwork);}export{createHandler};","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/workbox-precaching/createHandler.js"],"names":["getOrCreatePrecacheController","createHandler","fallbackToNetwork","precacheController"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,OAASA,6BAAT,gDACA,sBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,aAAT,EAAiD,IAA1BC,CAAAA,iBAA0B,2DAAN,IAAM,CAC7C,GAAMC,CAAAA,kBAAkB,CAAGH,6BAA6B,EAAxD,CACA,MAAOG,CAAAA,kBAAkB,CAACF,aAAnB,CAAiCC,iBAAjC,CAAP,CACH,CACD,OAASD,aAAT","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandler} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandler} on that instance,\n * instead of using this function.\n *\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {module:workbox-routing~handlerCallback}\n *\n * @memberof module:workbox-precaching\n */\nfunction createHandler(fallbackToNetwork = true) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandler(fallbackToNetwork);\n}\nexport { createHandler };\n"]},"metadata":{},"sourceType":"module"}