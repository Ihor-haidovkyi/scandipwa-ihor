{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import React,{PureComponent}from'react';import{connect}from'react-redux';import Loader from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/Loader\";import MyAccountQuery from\"/home/marketihor/scandipwa/packages/scandipwa/src/query/MyAccount.query\";import{updateCustomerDetails}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/MyAccount/MyAccount.action\";import{CUSTOMER}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/MyAccount/MyAccount.dispatcher\";import{showNotification}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";import{customerType}from\"/home/marketihor/scandipwa/packages/scandipwa/src/type/Account\";import{isSignedIn}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Auth\";import BrowserDatabase from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/BrowserDatabase/BrowserDatabase\";import{fetchMutation,getErrorMessage}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request\";import{ONE_MONTH_IN_SECONDS}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request/QueryDispatcher\";import MyAccountNewsletterSubscription from\"./MyAccountNewsletterSubscription.component\";/** @namespace Component/MyAccountNewsletterSubscription/Container/mapStateToProps */export var mapStateToProps=middleware(function(state){return{customer:state.MyAccountReducer.customer,newsletterConfirmStatus:state.ConfigReducer.newsletter_subscription_confirm};},\"Component/MyAccountNewsletterSubscription/Container/mapStateToProps\");/** @namespace Component/MyAccountNewsletterSubscription/Container/mapDispatchToProps */export var mapDispatchToProps=middleware(function(dispatch){return{updateCustomer:function updateCustomer(customer){return dispatch(updateCustomerDetails(customer));},showErrorNotification:function showErrorNotification(error){return dispatch(showNotification('error',getErrorMessage(error)));},showSuccessNotification:function showSuccessNotification(message){return dispatch(showNotification('success',message));}};},\"Component/MyAccountNewsletterSubscription/Container/mapDispatchToProps\");/** @namespace Component/MyAccountNewsletterSubscription/Container */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _MyAccountNewsletterSubscriptionContainer=/*#__PURE__*/function(_Extensible){_inherits(_MyAccountNewsletterSubscriptionContainer,_Extensible);var _super=_createSuper(_MyAccountNewsletterSubscriptionContainer);function _MyAccountNewsletterSubscriptionContainer(){var _this;_classCallCheck(this,_MyAccountNewsletterSubscriptionContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.containerFunctions={onCustomerSave:_this.onCustomerSave.bind(_assertThisInitialized(_this))};_this.state={isLoading:false};_this.onError=function(){var showErrorNotification=_this.props.showErrorNotification;_this.setState({isLoading:false},function(){showErrorNotification(__('We are experiencing issues, please try again later'));});};return _this;}_createClass(_MyAccountNewsletterSubscriptionContainer,[{key:\"showSubscriptionUpdateNotification\",value:function showSubscriptionUpdateNotification(isSubscribed,wasSubscribed){var _this$props=this.props,showSuccessNotification=_this$props.showSuccessNotification,newsletterConfirmStatus=_this$props.newsletterConfirmStatus;if(!isSubscribed&&wasSubscribed){showSuccessNotification(__('We have removed your newsletter subscription.'));}else if(isSubscribed&&!newsletterConfirmStatus&&!wasSubscribed){showSuccessNotification(__('We have saved your subscription'));}else if(!isSubscribed&&newsletterConfirmStatus){showSuccessNotification(__('A subscription confirmation email has been sent!'));}else{showSuccessNotification(__('We have updated your subscription.'));}}},{key:\"onCustomerSave\",value:function onCustomerSave(customer){var _this2=this;var _this$props2=this.props,updateCustomer=_this$props2.updateCustomer,wasSubscribed=_this$props2.customer.is_subscribed;var mutation=MyAccountQuery.getUpdateInformationMutation(customer);if(!isSignedIn()){return null;}this.setState({isLoading:true});return fetchMutation(mutation).then(/** @namespace Component/MyAccountNewsletterSubscription/Container/fetchMutationThen */middleware(function(_ref){var customer=_ref.updateCustomer.customer;BrowserDatabase.setItem(customer,CUSTOMER,ONE_MONTH_IN_SECONDS);var is_subscribed=customer.is_subscribed;_this2.setState({isLoading:false},function(){updateCustomer(customer);_this2.showSubscriptionUpdateNotification(is_subscribed,wasSubscribed);});},\"Component/MyAccountNewsletterSubscription/Container/fetchMutationThen\"),this.onError);}},{key:\"render\",value:function render(){var isLoading=this.state.isLoading;return/*#__PURE__*/_checkBEM(React,React.Fragment,null,/*#__PURE__*/_checkBEM(React,Loader,{isLoading:isLoading}),/*#__PURE__*/_checkBEM(React,MyAccountNewsletterSubscription,Object.assign({},this.props,this.containerFunctions)));}}]);return _MyAccountNewsletterSubscriptionContainer;}(Extensible(PureComponent));Object.defineProperty(_MyAccountNewsletterSubscriptionContainer,'name',{value:'MyAccountNewsletterSubscriptionContainer'});export var MyAccountNewsletterSubscriptionContainer=middleware(_MyAccountNewsletterSubscriptionContainer,\"Component/MyAccountNewsletterSubscription/Container\");export default connect(mapStateToProps,mapDispatchToProps)(MyAccountNewsletterSubscriptionContainer);","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountNewsletterSubscription/MyAccountNewsletterSubscription.container.js"],"names":["React","PureComponent","connect","Loader","MyAccountQuery","updateCustomerDetails","CUSTOMER","showNotification","customerType","isSignedIn","BrowserDatabase","fetchMutation","getErrorMessage","ONE_MONTH_IN_SECONDS","MyAccountNewsletterSubscription","mapStateToProps","state","customer","MyAccountReducer","newsletterConfirmStatus","ConfigReducer","newsletter_subscription_confirm","mapDispatchToProps","dispatch","updateCustomer","showErrorNotification","error","showSuccessNotification","message","MyAccountNewsletterSubscriptionContainer","containerFunctions","onCustomerSave","bind","isLoading","onError","props","setState","__","isSubscribed","wasSubscribed","is_subscribed","mutation","getUpdateInformationMutation","then","setItem","showSubscriptionUpdateNotification","Object","defineProperty","_MyAccountNewsletterSubscriptionContainer","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport Loader from 'Component/Loader';\nimport MyAccountQuery from 'Query/MyAccount.query';\nimport { updateCustomerDetails } from 'Store/MyAccount/MyAccount.action';\nimport { CUSTOMER } from 'Store/MyAccount/MyAccount.dispatcher';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { customerType } from 'Type/Account';\nimport { isSignedIn } from 'Util/Auth';\nimport BrowserDatabase from 'Util/BrowserDatabase/BrowserDatabase';\nimport { fetchMutation, getErrorMessage } from 'Util/Request';\nimport { ONE_MONTH_IN_SECONDS } from 'Util/Request/QueryDispatcher';\n\nimport MyAccountNewsletterSubscription from './MyAccountNewsletterSubscription.component';\n\n/** @namespace Component/MyAccountNewsletterSubscription/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    customer: state.MyAccountReducer.customer,\n    newsletterConfirmStatus: state.ConfigReducer.newsletter_subscription_confirm\n});\n\n/** @namespace Component/MyAccountNewsletterSubscription/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    updateCustomer: (customer) => dispatch(updateCustomerDetails(customer)),\n    showErrorNotification: (error) => dispatch(showNotification('error', getErrorMessage(error))),\n    showSuccessNotification: (message) => dispatch(showNotification('success', message))\n});\n\n/** @namespace Component/MyAccountNewsletterSubscription/Container */\nexport class MyAccountNewsletterSubscriptionContainer extends PureComponent {\n    static propTypes = {\n        customer: customerType.isRequired,\n        updateCustomer: PropTypes.func.isRequired,\n        showErrorNotification: PropTypes.func.isRequired,\n        showSuccessNotification: PropTypes.func.isRequired,\n        newsletterConfirmStatus: PropTypes.bool.isRequired\n    };\n\n    containerFunctions = {\n        onCustomerSave: this.onCustomerSave.bind(this)\n    };\n\n    state = {\n        isLoading: false\n    };\n\n    showSubscriptionUpdateNotification(isSubscribed, wasSubscribed) {\n        const {\n            showSuccessNotification,\n            newsletterConfirmStatus\n        } = this.props;\n\n        if (!isSubscribed && wasSubscribed) {\n            showSuccessNotification(__('We have removed your newsletter subscription.'));\n        } else if (isSubscribed && !newsletterConfirmStatus && !wasSubscribed) {\n            showSuccessNotification(__('We have saved your subscription'));\n        } else if (!isSubscribed && newsletterConfirmStatus) {\n            showSuccessNotification(__('A subscription confirmation email has been sent!'));\n        } else {\n            showSuccessNotification(__('We have updated your subscription.'));\n        }\n    }\n\n    onError = () => {\n        const { showErrorNotification } = this.props;\n\n        this.setState({ isLoading: false }, () => {\n            showErrorNotification(__('We are experiencing issues, please try again later'));\n        });\n    };\n\n    onCustomerSave(customer) {\n        const {\n            updateCustomer,\n            customer: {\n                is_subscribed: wasSubscribed\n            }\n        } = this.props;\n\n        const mutation = MyAccountQuery.getUpdateInformationMutation(customer);\n\n        if (!isSignedIn()) {\n            return null;\n        }\n\n        this.setState({ isLoading: true });\n\n        return fetchMutation(mutation).then(\n            /** @namespace Component/MyAccountNewsletterSubscription/Container/fetchMutationThen */\n            ({ updateCustomer: { customer } }) => {\n                BrowserDatabase.setItem(customer, CUSTOMER, ONE_MONTH_IN_SECONDS);\n                const { is_subscribed } = customer;\n\n                this.setState({ isLoading: false }, () => {\n                    updateCustomer(customer);\n                    this.showSubscriptionUpdateNotification(is_subscribed, wasSubscribed);\n                });\n            },\n            this.onError\n        );\n    }\n\n    render() {\n        const { isLoading } = this.state;\n\n        return (\n            <>\n                <Loader isLoading={ isLoading } />\n                <MyAccountNewsletterSubscription\n                  { ...this.props }\n                  { ...this.containerFunctions }\n                />\n            </>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountNewsletterSubscriptionContainer);\n"]},"metadata":{},"sourceType":"module"}