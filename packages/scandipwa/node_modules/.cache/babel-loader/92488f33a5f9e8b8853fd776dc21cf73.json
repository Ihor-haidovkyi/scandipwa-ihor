{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});var _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};var _sister=require('sister');var _sister2=_interopRequireDefault(_sister);var _loadYouTubeIframeApi=require(\"./loadYouTubeIframeApi\");var _loadYouTubeIframeApi2=_interopRequireDefault(_loadYouTubeIframeApi);var _YouTubePlayer=require(\"./YouTubePlayer\");var _YouTubePlayer2=_interopRequireDefault(_YouTubePlayer);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**\n * @typedef YT.Player\n * @see https://developers.google.com/youtube/iframe_api_reference\n * */ /**\n * @see https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\n */var youtubeIframeAPI=void 0;/**\n * A factory function used to produce an instance of YT.Player and queue function calls and proxy events of the resulting object.\n *\n * @param maybeElementId Either An existing YT.Player instance,\n * the DOM element or the id of the HTML element where the API will insert an <iframe>.\n * @param options See `options` (Ignored when using an existing YT.Player instance).\n * @param strictState A flag designating whether or not to wait for\n * an acceptable state when calling supported functions. Default: `false`.\n * See `FunctionStateMap.js` for supported functions and acceptable states.\n */exports.default=function(maybeElementId){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var strictState=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var emitter=(0,_sister2.default)();if(!youtubeIframeAPI){youtubeIframeAPI=(0,_loadYouTubeIframeApi2.default)(emitter);}if(options.events){throw new Error('Event handlers cannot be overwritten.');}if(typeof maybeElementId==='string'&&!document.getElementById(maybeElementId)){throw new Error('Element \"'+maybeElementId+'\" does not exist.');}options.events=_YouTubePlayer2.default.proxyEvents(emitter);var playerAPIReady=new Promise(function(resolve){if((typeof maybeElementId==='undefined'?'undefined':_typeof(maybeElementId))==='object'&&maybeElementId.playVideo instanceof Function){var player=maybeElementId;resolve(player);}else{// asume maybeElementId can be rendered inside\n// eslint-disable-next-line promise/catch-or-return\nyoutubeIframeAPI.then(function(YT){// eslint-disable-line promise/prefer-await-to-then\nvar player=new YT.Player(maybeElementId,options);emitter.on('ready',function(){resolve(player);});return null;});}});var playerApi=_YouTubePlayer2.default.promisifyPlayer(playerAPIReady,strictState);playerApi.on=emitter.on;playerApi.off=emitter.off;return playerApi;};module.exports=exports['default'];","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/youtube-player/dist/index.js"],"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","_sister","require","_sister2","_interopRequireDefault","_loadYouTubeIframeApi","_loadYouTubeIframeApi2","_YouTubePlayer","_YouTubePlayer2","__esModule","default","youtubeIframeAPI","maybeElementId","options","arguments","length","undefined","strictState","emitter","events","Error","document","getElementById","proxyEvents","playerAPIReady","Promise","resolve","playVideo","Function","player","then","YT","Player","on","playerApi","promisifyPlayer","off","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _sister = require('sister');\n\nvar _sister2 = _interopRequireDefault(_sister);\n\nvar _loadYouTubeIframeApi = require('./loadYouTubeIframeApi');\n\nvar _loadYouTubeIframeApi2 = _interopRequireDefault(_loadYouTubeIframeApi);\n\nvar _YouTubePlayer = require('./YouTubePlayer');\n\nvar _YouTubePlayer2 = _interopRequireDefault(_YouTubePlayer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @typedef YT.Player\n * @see https://developers.google.com/youtube/iframe_api_reference\n * */\n\n/**\n * @see https://developers.google.com/youtube/iframe_api_reference#Loading_a_Video_Player\n */\nvar youtubeIframeAPI = void 0;\n\n/**\n * A factory function used to produce an instance of YT.Player and queue function calls and proxy events of the resulting object.\n *\n * @param maybeElementId Either An existing YT.Player instance,\n * the DOM element or the id of the HTML element where the API will insert an <iframe>.\n * @param options See `options` (Ignored when using an existing YT.Player instance).\n * @param strictState A flag designating whether or not to wait for\n * an acceptable state when calling supported functions. Default: `false`.\n * See `FunctionStateMap.js` for supported functions and acceptable states.\n */\n\nexports.default = function (maybeElementId) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var strictState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var emitter = (0, _sister2.default)();\n\n  if (!youtubeIframeAPI) {\n    youtubeIframeAPI = (0, _loadYouTubeIframeApi2.default)(emitter);\n  }\n\n  if (options.events) {\n    throw new Error('Event handlers cannot be overwritten.');\n  }\n\n  if (typeof maybeElementId === 'string' && !document.getElementById(maybeElementId)) {\n    throw new Error('Element \"' + maybeElementId + '\" does not exist.');\n  }\n\n  options.events = _YouTubePlayer2.default.proxyEvents(emitter);\n\n  var playerAPIReady = new Promise(function (resolve) {\n    if ((typeof maybeElementId === 'undefined' ? 'undefined' : _typeof(maybeElementId)) === 'object' && maybeElementId.playVideo instanceof Function) {\n      var player = maybeElementId;\n\n      resolve(player);\n    } else {\n      // asume maybeElementId can be rendered inside\n      // eslint-disable-next-line promise/catch-or-return\n      youtubeIframeAPI.then(function (YT) {\n        // eslint-disable-line promise/prefer-await-to-then\n        var player = new YT.Player(maybeElementId, options);\n\n        emitter.on('ready', function () {\n          resolve(player);\n        });\n\n        return null;\n      });\n    }\n  });\n\n  var playerApi = _YouTubePlayer2.default.promisifyPlayer(playerAPIReady, strictState);\n\n  playerApi.on = emitter.on;\n  playerApi.off = emitter.off;\n\n  return playerApi;\n};\n\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"module"}