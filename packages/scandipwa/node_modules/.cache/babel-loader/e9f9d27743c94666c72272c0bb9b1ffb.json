{"ast":null,"code":"import _regeneratorRuntime from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/import{assert}from'workbox-core/_private/assert.js';import{fetchWrapper}from'workbox-core/_private/fetchWrapper.js';import{logger}from'workbox-core/_private/logger.js';import{WorkboxError}from'workbox-core/_private/WorkboxError.js';import{messages}from\"./utils/messages.js\";import\"./_version.js\";/**\n * An implementation of a\n * [network-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */var NetworkOnly=/*#__PURE__*/function(){/**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     */function NetworkOnly(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,NetworkOnly);this._plugins=options.plugins||[];this._fetchOptions=options.fetchOptions;}/**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request The request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */_createClass(NetworkOnly,[{key:\"handle\",value:function(){var _handle=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var event,request,error,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event=_ref.event,request=_ref.request;if(typeof request==='string'){request=new Request(request);}if(process.env.NODE_ENV!=='production'){assert.isInstance(request,Request,{moduleName:'workbox-strategies',className:'NetworkOnly',funcName:'handle',paramName:'request'});}_context.prev=3;_context.next=6;return fetchWrapper.fetch({request:request,event:event,fetchOptions:this._fetchOptions,plugins:this._plugins});case 6:response=_context.sent;_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](3);error=_context.t0;case 12:if(process.env.NODE_ENV!=='production'){logger.groupCollapsed(messages.strategyStart('NetworkOnly',request));if(response){logger.log(\"Got response from network.\");}else{logger.log(\"Unable to get a response from the network.\");}messages.printFinalResponse(response);logger.groupEnd();}if(response){_context.next=15;break;}throw new WorkboxError('no-response',{url:request.url,error:error});case 15:return _context.abrupt(\"return\",response);case 16:case\"end\":return _context.stop();}}},_callee,this,[[3,9]]);}));function handle(_x){return _handle.apply(this,arguments);}return handle;}()}]);return NetworkOnly;}();export{NetworkOnly};","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/workbox-strategies/NetworkOnly.js"],"names":["assert","fetchWrapper","logger","WorkboxError","messages","NetworkOnly","options","_plugins","plugins","_fetchOptions","fetchOptions","event","request","Request","process","env","NODE_ENV","isInstance","moduleName","className","funcName","paramName","fetch","response","error","groupCollapsed","strategyStart","log","printFinalResponse","groupEnd","url"],"mappings":"+jBAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,OAASA,MAAT,KAAuB,iCAAvB,CACA,OAASC,YAAT,KAA6B,uCAA7B,CACA,OAASC,MAAT,KAAuB,iCAAvB,CACA,OAASC,YAAT,KAA6B,uCAA7B,CACA,OAASC,QAAT,2BACA,sBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,GACMC,CAAAA,W,yBACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACI,sBAA0B,IAAdC,CAAAA,OAAc,2DAAJ,EAAI,mCACtB,KAAKC,QAAL,CAAgBD,OAAO,CAACE,OAAR,EAAmB,EAAnC,CACA,KAAKC,aAAL,CAAqBH,OAAO,CAACI,YAA7B,CACH,CACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,O,6HACI,wKAAeC,KAAf,MAAeA,KAAf,CAAsBC,OAAtB,MAAsBA,OAAtB,CACI,GAAI,MAAOA,CAAAA,OAAP,GAAmB,QAAvB,CAAiC,CAC7BA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAYD,OAAZ,CAAV,CACH,CACD,GAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvChB,MAAM,CAACiB,UAAP,CAAkBL,OAAlB,CAA2BC,OAA3B,CAAoC,CAChCK,UAAU,CAAE,oBADoB,CAEhCC,SAAS,CAAE,aAFqB,CAGhCC,QAAQ,CAAE,QAHsB,CAIhCC,SAAS,CAAE,SAJqB,CAApC,EAMH,CAXL,sCAeyBpB,CAAAA,YAAY,CAACqB,KAAb,CAAmB,CAChCV,OAAO,CAAPA,OADgC,CAEhCD,KAAK,CAALA,KAFgC,CAGhCD,YAAY,CAAE,KAAKD,aAHa,CAIhCD,OAAO,CAAE,KAAKD,QAJkB,CAAnB,CAfzB,QAeQgB,QAfR,8FAuBQC,KAAK,YAAL,CAvBR,QAyBI,GAAIV,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvCd,MAAM,CAACuB,cAAP,CAAsBrB,QAAQ,CAACsB,aAAT,CAAuB,aAAvB,CAAsCd,OAAtC,CAAtB,EACA,GAAIW,QAAJ,CAAc,CACVrB,MAAM,CAACyB,GAAP,+BACH,CAFD,IAGK,CACDzB,MAAM,CAACyB,GAAP,+CACH,CACDvB,QAAQ,CAACwB,kBAAT,CAA4BL,QAA5B,EACArB,MAAM,CAAC2B,QAAP,GACH,CAnCL,GAoCSN,QApCT,+BAqCc,IAAIpB,CAAAA,YAAJ,CAAiB,aAAjB,CAAgC,CAAE2B,GAAG,CAAElB,OAAO,CAACkB,GAAf,CAAoBN,KAAK,CAALA,KAApB,CAAhC,CArCd,yCAuCWD,QAvCX,sE,yGA0CJ,OAASlB,WAAT","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-only}\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}.\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass NetworkOnly {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     */\n    constructor(options = {}) {\n        this._plugins = options.plugins || [];\n        this._fetchOptions = options.fetchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request The request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'NetworkOnly',\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        let error;\n        let response;\n        try {\n            response = await fetchWrapper.fetch({\n                request,\n                event,\n                fetchOptions: this._fetchOptions,\n                plugins: this._plugins,\n            });\n        }\n        catch (err) {\n            error = err;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('NetworkOnly', request));\n            if (response) {\n                logger.log(`Got response from network.`);\n            }\n            else {\n                logger.log(`Unable to get a response from the network.`);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { NetworkOnly };\n"]},"metadata":{},"sourceType":"module"}