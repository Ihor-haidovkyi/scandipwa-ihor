{"ast":null,"code":"// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX=/\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;var NEWLINE_REGEX=/\\n/g;var WHITESPACE_REGEX=/^\\s*/;// declaration\nvar PROPERTY_REGEX=/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;var COLON_REGEX=/^:\\s*/;var VALUE_REGEX=/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;var SEMICOLON_REGEX=/^[;\\s]*/;// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX=/^\\s+|\\s+$/g;// strings\nvar NEWLINE='\\n';var FORWARD_SLASH='/';var ASTERISK='*';var EMPTY_STRING='';// types\nvar TYPE_COMMENT='comment';var TYPE_DECLARATION='declaration';/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */module.exports=function(style,options){if(typeof style!=='string'){throw new TypeError('First argument must be a string');}if(!style)return[];options=options||{};/**\n   * Positional.\n   */var lineno=1;var column=1;/**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */function updatePosition(str){var lines=str.match(NEWLINE_REGEX);if(lines)lineno+=lines.length;var i=str.lastIndexOf(NEWLINE);column=~i?str.length-i:column+str.length;}/**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */function position(){var start={line:lineno,column:column};return function(node){node.position=new Position(start);whitespace();return node;};}/**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */function Position(start){this.start=start;this.end={line:lineno,column:column};this.source=options.source;}/**\n   * Non-enumerable source string.\n   */Position.prototype.content=style;var errorsList=[];/**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */function error(msg){var err=new Error(options.source+':'+lineno+':'+column+': '+msg);err.reason=msg;err.filename=options.source;err.line=lineno;err.column=column;err.source=style;if(options.silent){errorsList.push(err);}else{throw err;}}/**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */function match(re){var m=re.exec(style);if(!m)return;var str=m[0];updatePosition(str);style=style.slice(str.length);return m;}/**\n   * Parse whitespace.\n   */function whitespace(){match(WHITESPACE_REGEX);}/**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */function comments(rules){var c;rules=rules||[];while(c=comment()){if(c!==false){rules.push(c);}}return rules;}/**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */function comment(){var pos=position();if(FORWARD_SLASH!=style.charAt(0)||ASTERISK!=style.charAt(1))return;var i=2;while(EMPTY_STRING!=style.charAt(i)&&(ASTERISK!=style.charAt(i)||FORWARD_SLASH!=style.charAt(i+1))){++i;}i+=2;if(EMPTY_STRING===style.charAt(i-1)){return error('End of comment missing');}var str=style.slice(2,i-2);column+=2;updatePosition(str);style=style.slice(i);column+=2;return pos({type:TYPE_COMMENT,comment:str});}/**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */function declaration(){var pos=position();// prop\nvar prop=match(PROPERTY_REGEX);if(!prop)return;comment();// :\nif(!match(COLON_REGEX))return error(\"property missing ':'\");// val\nvar val=match(VALUE_REGEX);var ret=pos({type:TYPE_DECLARATION,property:trim(prop[0].replace(COMMENT_REGEX,EMPTY_STRING)),value:val?trim(val[0].replace(COMMENT_REGEX,EMPTY_STRING)):EMPTY_STRING});// ;\nmatch(SEMICOLON_REGEX);return ret;}/**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */function declarations(){var decls=[];comments(decls);// declarations\nvar decl;while(decl=declaration()){if(decl!==false){decls.push(decl);comments(decls);}}return decls;}whitespace();return declarations();};/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */function trim(str){return str?str.replace(TRIM_REGEX,EMPTY_STRING):EMPTY_STRING;}","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/inline-style-parser/index.js"],"names":["COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","module","exports","style","options","TypeError","lineno","column","updatePosition","str","lines","match","length","i","lastIndexOf","position","start","line","node","Position","whitespace","end","source","prototype","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","trim","replace","value","declarations","decls","decl"],"mappings":"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","sourcesContent":["// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n"]},"metadata":{},"sourceType":"module"}