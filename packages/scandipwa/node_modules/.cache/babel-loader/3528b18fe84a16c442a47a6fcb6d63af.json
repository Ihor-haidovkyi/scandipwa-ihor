{"ast":null,"code":"import _slicedToArray from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable guard-for-in */ /**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n *\n * The purpose of this functionality is to generate the runtime plugin configuration object\n * All the default exports of the .plugin.js files of enabled extensions must get processed by this algorithm\n */ /*\n    eslint-disable\n    no-param-reassign,\n    no-restricted-syntax,\n    no-continue\n*/ // Allowed handler types\nvar handlerTypes=['member-function','member-property','static-member','function','class'];/**\n * Handlers which don't require member name specification\n */var handlersWithReducedSections=['function','class'];/**\n * Check if supplied handler type is expected\n * @param {string} handlerType\n */function validateHandlerType(handlerType,namespace){if(!handlerTypes.includes(handlerType)){throw Error(\"Unexpected handler type '\".concat(handlerType,\"' for namespace '\").concat(namespace,\"', expected one of [\").concat(handlerTypes.join(', '),\"]\"));}}/**\n * Wrap param in array if it is not array already\n */var arrayize=function arrayize(x){return Array.isArray(x)?x:[x];};/**\n * Push at once to handler section, separation by member names not expected\n * @param {Object} overallConfig\n * @param {string} namespace\n * @param {string} handlerType\n * @param {Array} membersPlugins\n */var handleReducedSection=function handleReducedSection(overallConfig,namespace,handlerType,membersPlugins){if(!overallConfig[namespace][handlerType]){overallConfig[namespace][handlerType]=[];}arrayize(membersPlugins).forEach(function(memberPlugin){overallConfig[namespace][handlerType].push(memberPlugin);});};/**\n * Separate namespace plugins by member names\n * @param {Object} overallConfig\n * @param {string} namespace\n * @param {string} handlerType\n * @param {Array} membersPlugins\n */var handleRegularSection=function handleRegularSection(overallConfig,namespace,handlerType,membersPlugins){if(!overallConfig[namespace][handlerType]){overallConfig[namespace][handlerType]={};}Object.entries(membersPlugins).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),memberName=_ref2[0],memberPlugins=_ref2[1];if(!overallConfig[namespace][handlerType][memberName]){overallConfig[namespace][handlerType][memberName]=[];}arrayize(memberPlugins).forEach(function(memberPlugin){overallConfig[namespace][handlerType][memberName].push(memberPlugin);});});};var DEFAULT_POSITION=100;var sortPluginArray=function sortPluginArray(plugins){return plugins.sort(function(_ref3,_ref4){var _ref3$position=_ref3.position,a=_ref3$position===void 0?DEFAULT_POSITION:_ref3$position;var _ref4$position=_ref4.position,b=_ref4$position===void 0?DEFAULT_POSITION:_ref4$position;return a-b;});};/**\n * Sort the configuration so that plugins with higher priority (lower \"posititon\" value)\n * Go before the ones with lower priority (higher \"position\" value).\n * @param {Object} config\n */var sortConfig=function sortConfig(config){// Process each namespace\nfor(var namespace in config){// Each handler type of a namespace\nfor(var handlerType in config[namespace]){// Handle reduced sections\nif(handlersWithReducedSections.includes(handlerType)){config[namespace][handlerType]=sortPluginArray(config[namespace][handlerType]);continue;}// Handle regular sections\nfor(var memberName in config[namespace][handlerType]){config[namespace][handlerType][memberName]=sortPluginArray(config[namespace][handlerType][memberName]);}}}};/**\n * Entry point\n */var generateConfig=function generateConfig(extensions){var config=extensions.reduce(function(overallConfig,extension){Object.entries(extension).forEach(function(_ref5){var _ref6=_slicedToArray(_ref5,2),namespace=_ref6[0],plugins=_ref6[1];if(!overallConfig[namespace]){overallConfig[namespace]={};}Object.entries(plugins).forEach(function(_ref7){var _ref8=_slicedToArray(_ref7,2),handlerType=_ref8[0],membersPlugins=_ref8[1];validateHandlerType(handlerType,namespace);if(handlersWithReducedSections.includes(handlerType)){handleReducedSection(overallConfig,namespace,handlerType,membersPlugins);}else{handleRegularSection(overallConfig,namespace,handlerType,membersPlugins);}});});return overallConfig;},{});sortConfig(config);return config;};export default generateConfig;","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/@scandipwa/scandipwa-extensibility/runtime-helpers/generateConfig.js"],"names":["handlerTypes","handlersWithReducedSections","validateHandlerType","handlerType","namespace","includes","Error","join","arrayize","x","Array","isArray","handleReducedSection","overallConfig","membersPlugins","forEach","memberPlugin","push","handleRegularSection","Object","entries","memberName","memberPlugins","DEFAULT_POSITION","sortPluginArray","plugins","sort","position","a","b","sortConfig","config","generateConfig","extensions","reduce","extension"],"mappings":"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","sourcesContent":["/* eslint-disable guard-for-in */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n *\n * The purpose of this functionality is to generate the runtime plugin configuration object\n * All the default exports of the .plugin.js files of enabled extensions must get processed by this algorithm\n */\n\n/*\n    eslint-disable\n    no-param-reassign,\n    no-restricted-syntax,\n    no-continue\n*/\n\n// Allowed handler types\nconst handlerTypes = [\n    'member-function',\n    'member-property',\n    'static-member',\n    'function',\n    'class'\n];\n\n/**\n * Handlers which don't require member name specification\n */\nconst handlersWithReducedSections = [\n    'function',\n    'class'\n];\n\n/**\n * Check if supplied handler type is expected\n * @param {string} handlerType\n */\nfunction validateHandlerType(handlerType, namespace) {\n    if (!handlerTypes.includes(handlerType)) {\n        throw Error(`Unexpected handler type '${handlerType}' for namespace '${namespace}', expected one of [${\n            handlerTypes.join(', ')\n        }]`);\n    }\n}\n\n/**\n * Wrap param in array if it is not array already\n */\nconst arrayize = (x) => (Array.isArray(x) ? x : [x]);\n\n/**\n * Push at once to handler section, separation by member names not expected\n * @param {Object} overallConfig\n * @param {string} namespace\n * @param {string} handlerType\n * @param {Array} membersPlugins\n */\nconst handleReducedSection = (overallConfig, namespace, handlerType, membersPlugins) => {\n    if (!overallConfig[namespace][handlerType]) {\n        overallConfig[namespace][handlerType] = [];\n    }\n\n    arrayize(membersPlugins).forEach((memberPlugin) => {\n        overallConfig[namespace][handlerType].push(memberPlugin);\n    });\n};\n\n/**\n * Separate namespace plugins by member names\n * @param {Object} overallConfig\n * @param {string} namespace\n * @param {string} handlerType\n * @param {Array} membersPlugins\n */\nconst handleRegularSection = (overallConfig, namespace, handlerType, membersPlugins) => {\n    if (!overallConfig[namespace][handlerType]) {\n        overallConfig[namespace][handlerType] = {};\n    }\n\n    Object.entries(membersPlugins).forEach(([memberName, memberPlugins]) => {\n        if (!overallConfig[namespace][handlerType][memberName]) {\n            overallConfig[namespace][handlerType][memberName] = [];\n        }\n        arrayize(memberPlugins).forEach((memberPlugin) => {\n            overallConfig[namespace][handlerType][memberName].push(memberPlugin);\n        });\n    });\n};\n\nconst DEFAULT_POSITION = 100;\nconst sortPluginArray = (plugins) => plugins.sort(\n    ({ position: a = DEFAULT_POSITION }, { position: b = DEFAULT_POSITION }) => a - b\n);\n\n/**\n * Sort the configuration so that plugins with higher priority (lower \"posititon\" value)\n * Go before the ones with lower priority (higher \"position\" value).\n * @param {Object} config\n */\nconst sortConfig = (config) => {\n    // Process each namespace\n    for (const namespace in config) {\n        // Each handler type of a namespace\n        for (const handlerType in config[namespace]) {\n            // Handle reduced sections\n            if (handlersWithReducedSections.includes(handlerType)) {\n                config[namespace][handlerType] = sortPluginArray(config[namespace][handlerType]);\n                continue;\n            }\n\n            // Handle regular sections\n            for (const memberName in config[namespace][handlerType]) {\n                config[namespace][handlerType][memberName] = sortPluginArray(\n                    config[namespace][handlerType][memberName]\n                );\n            }\n        }\n    }\n};\n\n/**\n * Entry point\n */\nconst generateConfig = (extensions) => {\n    const config = extensions.reduce(\n        (overallConfig, extension) => {\n            Object.entries(extension).forEach(([namespace, plugins]) => {\n                if (!overallConfig[namespace]) {\n                    overallConfig[namespace] = {};\n                }\n                Object.entries(plugins).forEach(([handlerType, membersPlugins]) => {\n                    validateHandlerType(handlerType, namespace);\n                    if (handlersWithReducedSections.includes(handlerType)) {\n                        handleReducedSection(overallConfig, namespace, handlerType, membersPlugins);\n                    } else {\n                        handleRegularSection(overallConfig, namespace, handlerType, membersPlugins);\n                    }\n                });\n            });\n\n            return overallConfig;\n        }, {}\n    );\n\n    sortConfig(config);\n    return config;\n};\n\nexport default generateConfig;\n"]},"metadata":{},"sourceType":"module"}