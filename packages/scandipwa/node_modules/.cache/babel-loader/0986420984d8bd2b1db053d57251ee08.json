{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import{PureComponent}from'react';import{connect}from'react-redux';import{withRouter}from'react-router';import{setBigOfflineNotice as _setBigOfflineNotice,showOfflineNotice as _showOfflineNotice}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Offline/Offline.action\";import{LocationType}from\"/home/marketihor/scandipwa/packages/scandipwa/src/type/Common\";import OfflineNotice from\"./OfflineNotice.component\";/** @namespace Component/OfflineNotice/Container/mapStateToProps */export var mapStateToProps=middleware(function(state){return{isOffline:state.OfflineReducer.isOffline,isBig:state.OfflineReducer.isBig};},\"Component/OfflineNotice/Container/mapStateToProps\");/** @namespace Component/OfflineNotice/Container/mapDispatchToProps */export var mapDispatchToProps=middleware(function(dispatch){return{showOfflineNotice:function showOfflineNotice(isOffline){return dispatch(_showOfflineNotice(isOffline));},setBigOfflineNotice:function setBigOfflineNotice(isBig){return dispatch(_setBigOfflineNotice(isBig));}};},\"Component/OfflineNotice/Container/mapDispatchToProps\");/** @namespace Component/OfflineNotice/Container */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _OfflineNoticeContainer=/*#__PURE__*/function(_Extensible){_inherits(_OfflineNoticeContainer,_Extensible);var _super=_createSuper(_OfflineNoticeContainer);function _OfflineNoticeContainer(){var _this;_classCallCheck(this,_OfflineNoticeContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.handleNetworkChange=function(){var _this$props=_this.props,isBig=_this$props.isBig,showOfflineNotice=_this$props.showOfflineNotice,setBigOfflineNotice=_this$props.setBigOfflineNotice;if(navigator.onLine){document.documentElement.classList.remove('offline');showOfflineNotice(false);}else{document.documentElement.classList.add('offline');showOfflineNotice(true);if(isBig){setBigOfflineNotice(false);}}};return _this;}_createClass(_OfflineNoticeContainer,[{key:\"componentDidMount\",value:function componentDidMount(){var isPage=this.props.isPage;if(!isPage){this.handleNetworkChange();window.addEventListener('online',this.handleNetworkChange);window.addEventListener('offline',this.handleNetworkChange);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props2=this.props,pathname=_this$props2.location.pathname,isBig=_this$props2.isBig,setBigOfflineNotice=_this$props2.setBigOfflineNotice;var prevIsBig=prevProps.isBig,prevPathname=prevProps.location.pathname;if(isBig!==prevIsBig&&!navigator.onLine){if(isBig){document.documentElement.classList.add('bigOffline');}else{document.documentElement.classList.remove('bigOffline');}}if(pathname!==prevPathname){if(isBig){setBigOfflineNotice(false);}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var isPage=this.props.isPage;if(!isPage){window.removeEventListener('online',this.handleNetworkChange);window.removeEventListener('offline',this.handleNetworkChange);}}},{key:\"render\",value:function render(){return/*#__PURE__*/_checkBEM(React,OfflineNotice,Object.assign({},this.props,this.containerFunctions));}}]);return _OfflineNoticeContainer;}(Extensible(PureComponent));_OfflineNoticeContainer.defaultProps={isPage:false};Object.defineProperty(_OfflineNoticeContainer,'name',{value:'OfflineNoticeContainer'});export var OfflineNoticeContainer=middleware(_OfflineNoticeContainer,\"Component/OfflineNotice/Container\");export default withRouter(connect(mapStateToProps,mapDispatchToProps)(OfflineNoticeContainer));","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/OfflineNotice/OfflineNotice.container.js"],"names":["PureComponent","connect","withRouter","setBigOfflineNotice","showOfflineNotice","LocationType","OfflineNotice","mapStateToProps","state","isOffline","OfflineReducer","isBig","mapDispatchToProps","dispatch","OfflineNoticeContainer","handleNetworkChange","props","navigator","onLine","document","documentElement","classList","remove","add","isPage","window","addEventListener","prevProps","pathname","location","prevIsBig","prevPathname","removeEventListener","containerFunctions","defaultProps","Object","defineProperty","_OfflineNoticeContainer","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport { setBigOfflineNotice, showOfflineNotice } from 'Store/Offline/Offline.action';\nimport { LocationType } from 'Type/Common';\n\nimport OfflineNotice from './OfflineNotice.component';\n\n/** @namespace Component/OfflineNotice/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    isOffline: state.OfflineReducer.isOffline,\n    isBig: state.OfflineReducer.isBig\n});\n\n/** @namespace Component/OfflineNotice/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showOfflineNotice: (isOffline) => dispatch(showOfflineNotice(isOffline)),\n    setBigOfflineNotice: (isBig) => dispatch(setBigOfflineNotice(isBig))\n});\n\n/** @namespace Component/OfflineNotice/Container */\nexport class OfflineNoticeContainer extends PureComponent {\n    static propTypes = {\n        setBigOfflineNotice: PropTypes.func.isRequired,\n        showOfflineNotice: PropTypes.func.isRequired,\n        location: LocationType.isRequired,\n        isBig: PropTypes.bool.isRequired,\n        isPage: PropTypes.bool\n    };\n\n    static defaultProps = {\n        isPage: false\n    };\n\n    componentDidMount() {\n        const { isPage } = this.props;\n\n        if (!isPage) {\n            this.handleNetworkChange();\n            window.addEventListener('online', this.handleNetworkChange);\n            window.addEventListener('offline', this.handleNetworkChange);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const {\n            location: { pathname },\n            isBig,\n            setBigOfflineNotice\n        } = this.props;\n\n        const {\n            isBig: prevIsBig,\n            location: { pathname: prevPathname }\n        } = prevProps;\n\n        if (isBig !== prevIsBig && !navigator.onLine) {\n            if (isBig) {\n                document.documentElement.classList.add('bigOffline');\n            } else {\n                document.documentElement.classList.remove('bigOffline');\n            }\n        }\n\n        if (pathname !== prevPathname) {\n            if (isBig) {\n                setBigOfflineNotice(false);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        const { isPage } = this.props;\n\n        if (!isPage) {\n            window.removeEventListener('online', this.handleNetworkChange);\n            window.removeEventListener('offline', this.handleNetworkChange);\n        }\n    }\n\n    handleNetworkChange = () => {\n        const {\n            isBig,\n            showOfflineNotice,\n            setBigOfflineNotice\n        } = this.props;\n\n        if (navigator.onLine) {\n            document.documentElement.classList.remove('offline');\n            showOfflineNotice(false);\n        } else {\n            document.documentElement.classList.add('offline');\n            showOfflineNotice(true);\n            if (isBig) {\n                setBigOfflineNotice(false);\n            }\n        }\n    };\n\n    render() {\n        return (\n            <OfflineNotice\n              { ...this.props }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default withRouter(\n    connect(mapStateToProps, mapDispatchToProps)(OfflineNoticeContainer)\n);\n"]},"metadata":{},"sourceType":"module"}