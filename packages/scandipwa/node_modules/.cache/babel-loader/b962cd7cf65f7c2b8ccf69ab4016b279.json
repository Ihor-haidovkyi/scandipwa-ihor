{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component\\\\Link\\\\Link.container.js\";\n\n/* eslint-disable react/prop-types */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { appendWithStoreCode } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Url\";\nimport Link from \"./Link.component\";\n/** @namespace Component/Link/Container/mapStateToProps */\n\nexport const mapStateToProps = middleware(function (state) {\n  return {\n    baseLinkUrl: state.ConfigReducer.base_link_url || ''\n  };\n}, \"Component/Link/Container/mapStateToProps\");\n/** @namespace Component/Link/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _LinkContainer extends Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.containerProps = function () {\n      const {\n        block,\n        elem,\n        mods,\n        mix,\n        baseLinkUrl,\n        // remove this prop\n        dispatch,\n        // remove this prop\n        ...restProps\n      } = _this.props;\n      return { ...restProps,\n        to: _this.getTo(),\n        bemProps: {\n          block,\n          elem,\n          mods,\n          mix\n        }\n      };\n    };\n  }\n\n  getTo() {\n    const {\n      to\n    } = this.props;\n\n    if (typeof to === 'string') {\n      // in case this URL is absolute, do not append store\n      if (/^https?:\\/\\//.test(to)) {\n        return to;\n      }\n\n      return appendWithStoreCode(to);\n    }\n\n    const {\n      pathname\n    } = to;\n    return {\n      pathname: appendWithStoreCode(pathname),\n      ...to\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, Link, Object.assign({}, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n/** @namespace Component/Link/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\n\n_LinkContainer.propTypes = {\n  baseLinkUrl: PropTypes.string.isRequired,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n};\nObject.defineProperty(_LinkContainer, 'name', {\n  value: 'LinkContainer'\n});\n\nexport const LinkContainer = middleware(_LinkContainer, \"Component/Link/Container\");\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {};\n}, \"Component/Link/Container/mapDispatchToProps\");\nexport default connect(mapStateToProps, mapDispatchToProps)(LinkContainer);","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/packages/scandipwa/src/component/Link/Link.container.js"],"names":["PropTypes","PureComponent","connect","appendWithStoreCode","Link","mapStateToProps","state","baseLinkUrl","ConfigReducer","base_link_url","LinkContainer","containerProps","block","elem","mods","mix","dispatch","restProps","props","to","getTo","bemProps","test","pathname","render","propTypes","string","isRequired","oneOfType","object","Object","defineProperty","_LinkContainer","value","mapDispatchToProps"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,mBAAT;AAEA,OAAOC,IAAP;AAEA;;AACA,OAAO,MAAMC,eAAe,cAAG,UAACC,KAAD;AAAA,SAAY;AACvCC,IAAAA,WAAW,EAAED,KAAK,CAACE,aAAN,CAAoBC,aAApB,IAAqC;AADX,GAAZ;AAAA,CAAH,6CAArB;AAIP;;;;AACA,OAAO,MAAMC,cAAN,mCAA0C;AAAA;AAAA;;AAAA;AAAA;;AAAA,SAS7CC,cAT6C,GAS5B,YAAM;AACnB,YAAM;AACFC,QAAAA,KADE;AAEFC,QAAAA,IAFE;AAGFC,QAAAA,IAHE;AAIFC,QAAAA,GAJE;AAKFR,QAAAA,WALE;AAKW;AACbS,QAAAA,QANE;AAMQ;AACV,WAAGC;AAPD,UAQF,KAAI,CAACC,KART;AAUA,aAAO,EACH,GAAGD,SADA;AAEHE,QAAAA,EAAE,EAAE,KAAI,CAACC,KAAL,EAFD;AAGHC,QAAAA,QAAQ,EAAE;AACNT,UAAAA,KADM;AAENC,UAAAA,IAFM;AAGNC,UAAAA,IAHM;AAINC,UAAAA;AAJM;AAHP,OAAP;AAUH,KA9B4C;AAAA;;AAgC7CK,EAAAA,KAAK,GAAG;AACJ,UAAM;AAAED,MAAAA;AAAF,QAAS,KAAKD,KAApB;;AAEA,QAAI,OAAOC,EAAP,KAAc,QAAlB,EAA4B;AACxB;AACA,UAAI,eAAeG,IAAf,CAAoBH,EAApB,CAAJ,EAA6B;AACzB,eAAOA,EAAP;AACH;;AAED,aAAOhB,mBAAmB,CAACgB,EAAD,CAA1B;AACH;;AAED,UAAM;AAAEI,MAAAA;AAAF,QAAeJ,EAArB;AAEA,WAAO;AACHI,MAAAA,QAAQ,EAAEpB,mBAAmB,CAACoB,QAAD,CAD1B;AAEH,SAAGJ;AAFA,KAAP;AAIH;;AAEDK,EAAAA,MAAM,GAAG;AACL,yCACK,IADL,oBAEW,KAAKb,cAAL,EAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH;;AA1D4C;AA6DjD;AACA;;AA9DaD,c,CACFe,S,GAAY;AACflB,EAAAA,WAAW,EAAEP,SAAS,CAAC0B,MAAV,CAAiBC,UADf;AAEfR,EAAAA,EAAE,EAAEnB,SAAS,CAAC4B,SAAV,CAAoB,CACpB5B,SAAS,CAAC0B,MADU,EAEpB1B,SAAS,CAAC6B,MAFU,CAApB,EAGDF;AALY,C;AA5BvBG,MAAM,CAACC,cAAP,CAAsBC,cAAtB,EAAsC,MAAtC,EAA8C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA9C;;;AA0FA,OAAO,MAAMC,kBAAkB,cAAG,UAAClB,QAAD;AAAA,SAAe,EAAf;AAAA,CAAH,gDAAxB;AAEP,eAAed,OAAO,CAACG,eAAD,EAAkB6B,kBAAlB,CAAP,CAA6CxB,aAA7C,CAAf","sourcesContent":["/* eslint-disable react/prop-types */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { appendWithStoreCode } from 'Util/Url';\n\nimport Link from './Link.component';\n\n/** @namespace Component/Link/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    baseLinkUrl: state.ConfigReducer.base_link_url || ''\n});\n\n/** @namespace Component/Link/Container */\nexport class LinkContainer extends PureComponent {\n    static propTypes = {\n        baseLinkUrl: PropTypes.string.isRequired,\n        to: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.object\n        ]).isRequired\n    };\n\n    containerProps = () => {\n        const {\n            block,\n            elem,\n            mods,\n            mix,\n            baseLinkUrl, // remove this prop\n            dispatch, // remove this prop\n            ...restProps\n        } = this.props;\n\n        return {\n            ...restProps,\n            to: this.getTo(),\n            bemProps: {\n                block,\n                elem,\n                mods,\n                mix\n            }\n        };\n    };\n\n    getTo() {\n        const { to } = this.props;\n\n        if (typeof to === 'string') {\n            // in case this URL is absolute, do not append store\n            if (/^https?:\\/\\//.test(to)) {\n                return to;\n            }\n\n            return appendWithStoreCode(to);\n        }\n\n        const { pathname } = to;\n\n        return {\n            pathname: appendWithStoreCode(pathname),\n            ...to\n        };\n    }\n\n    render() {\n        return (\n            <Link\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\n/** @namespace Component/Link/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LinkContainer);\n"]},"metadata":{},"sourceType":"module"}