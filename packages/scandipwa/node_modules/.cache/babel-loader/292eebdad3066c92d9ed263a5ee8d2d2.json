{"ast":null,"code":"import _objectSpread from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _get from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";import _getPrototypeOf from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import ProductListQuery from\"/home/marketihor/scandipwa/packages/scandipwa/src/query/ProductList.query\";import{updateNoMatch}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/NoMatch/NoMatch.action\";import{showNotification}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";import{updateInfoLoadStatus,updateProductListInfo}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/ProductListInfo/ProductListInfo.action\";import{QueryDispatcher}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request\";/**\n * Product List Info Dispatcher\n * @class ProductListInfoDispatcher\n * @extends QueryDispatcher\n * @namespace Store/ProductListInfo/Dispatcher\n */export var _ProductListInfoDispatcher=/*#__PURE__*/function(_Extensible){_inherits(_ProductListInfoDispatcher,_Extensible);var _super=_createSuper(_ProductListInfoDispatcher);function _ProductListInfoDispatcher(){_classCallCheck(this,_ProductListInfoDispatcher);return _super.apply(this,arguments);}_createClass(_ProductListInfoDispatcher,[{key:\"__construct\",value:function __construct(){_get(_getPrototypeOf(_ProductListInfoDispatcher.prototype),\"__construct\",this).call(this,'ProductListInfo');}},{key:\"onSuccess\",value:function onSuccess(_ref,dispatch,options){var products=_ref.products;var filter=options.args.filter;dispatch(updateProductListInfo(products,filter));}},{key:\"onError\",value:function onError(error,dispatch){dispatch(showNotification('error',__('Error fetching Product List Information!'),error));dispatch(updateNoMatch(true));}},{key:\"prepareRequest\",value:function prepareRequest(options,dispatch){dispatch(updateInfoLoadStatus(true));return ProductListQuery.getQuery(_objectSpread(_objectSpread({},options),{},{requireInfo:true}));}}]);return _ProductListInfoDispatcher;}(Extensible(QueryDispatcher));Object.defineProperty(_ProductListInfoDispatcher,'name',{value:'ProductListInfoDispatcher'});export var ProductListInfoDispatcher=middleware(_ProductListInfoDispatcher,\"Store/ProductListInfo/Dispatcher\");export default new ProductListInfoDispatcher();","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/store/ProductListInfo/ProductListInfo.dispatcher.js"],"names":["ProductListQuery","updateNoMatch","showNotification","updateInfoLoadStatus","updateProductListInfo","QueryDispatcher","ProductListInfoDispatcher","dispatch","options","products","filter","args","error","__","getQuery","requireInfo","Object","defineProperty","_ProductListInfoDispatcher","value"],"mappings":"o9BAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAOA,CAAAA,gBAAP,iFACA,OAASC,aAAT,sFACA,OAASC,gBAAT,gGACA,OACIC,oBADJ,CAEIC,qBAFJ,sGAIA,OAASC,eAAT,sEAEA;AACA;AACA;AACA;AACA;AACA,GACA,UAAaC,CAAAA,0BAAb,wUACI,sBAAc,CACV,yFAAkB,iBAAlB,EACH,CAHL,yBAKI,wBAAwBC,QAAxB,CAAkCC,OAAlC,CAA2C,IAA/BC,CAAAA,QAA+B,MAA/BA,QAA+B,IAG/BC,CAAAA,MAH+B,CAKnCF,OALmC,CAEnCG,IAFmC,CAG/BD,MAH+B,CAOvCH,QAAQ,CAACH,qBAAqB,CAACK,QAAD,CAAWC,MAAX,CAAtB,CAAR,CACH,CAbL,uBAeI,iBAAQE,KAAR,CAAeL,QAAf,CAAyB,CACrBA,QAAQ,CAACL,gBAAgB,CAAC,OAAD,CAAUW,EAAE,CAAC,0CAAD,CAAZ,CAA0DD,KAA1D,CAAjB,CAAR,CACAL,QAAQ,CAACN,aAAa,CAAC,IAAD,CAAd,CAAR,CACH,CAlBL,8BAoBI,wBAAeO,OAAf,CAAwBD,QAAxB,CAAkC,CAC9BA,QAAQ,CAACJ,oBAAoB,CAAC,IAAD,CAArB,CAAR,CAEA,MAAOH,CAAAA,gBAAgB,CAACc,QAAjB,gCACAN,OADA,MAEHO,WAAW,CAAE,IAFV,GAAP,CAIH,CA3BL,qEA1BAC,MAAM,CAACC,cAAP,CAAsBC,0BAAtB,CAAkD,MAAlD,CAA0D,CAAEC,KAAK,CAAE,2BAAT,CAA1D,E,+GAwDA,cAAe,IAAIb,CAAAA,yBAAJ,EAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport ProductListQuery from 'Query/ProductList.query';\nimport { updateNoMatch } from 'Store/NoMatch/NoMatch.action';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport {\n    updateInfoLoadStatus,\n    updateProductListInfo\n} from 'Store/ProductListInfo/ProductListInfo.action';\nimport { QueryDispatcher } from 'Util/Request';\n\n/**\n * Product List Info Dispatcher\n * @class ProductListInfoDispatcher\n * @extends QueryDispatcher\n * @namespace Store/ProductListInfo/Dispatcher\n */\nexport class ProductListInfoDispatcher extends QueryDispatcher {\n    __construct() {\n        super.__construct('ProductListInfo');\n    }\n\n    onSuccess({ products }, dispatch, options) {\n        const {\n            args: {\n                filter\n            }\n        } = options;\n\n        dispatch(updateProductListInfo(products, filter));\n    }\n\n    onError(error, dispatch) {\n        dispatch(showNotification('error', __('Error fetching Product List Information!'), error));\n        dispatch(updateNoMatch(true));\n    }\n\n    prepareRequest(options, dispatch) {\n        dispatch(updateInfoLoadStatus(true));\n\n        return ProductListQuery.getQuery({\n            ...options,\n            requireInfo: true\n        });\n    }\n}\n\nexport default new ProductListInfoDispatcher();\n"]},"metadata":{},"sourceType":"module"}