{"ast":null,"code":"import _regeneratorRuntime from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/import\"../_version.js\";/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */export var deleteDatabase=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(name){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(resolve,reject){var request=indexedDB.deleteDatabase(name);request.onerror=function(){reject(request.error);};request.onblocked=function(){reject(new Error('Delete blocked'));};request.onsuccess=function(){resolve();};});case 2:case\"end\":return _context.stop();}}},_callee);}));return function deleteDatabase(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/workbox-core/_private/deleteDatabase.js"],"names":["deleteDatabase","name","Promise","resolve","reject","request","indexedDB","onerror","error","onblocked","Error","onsuccess"],"mappings":"+RAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,uBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMA,CAAAA,cAAc,0FAAG,iBAAOC,IAAP,wIACpB,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACnC,GAAMC,CAAAA,OAAO,CAAGC,SAAS,CAACN,cAAV,CAAyBC,IAAzB,CAAhB,CACAI,OAAO,CAACE,OAAR,CAAkB,UAAM,CACpBH,MAAM,CAACC,OAAO,CAACG,KAAT,CAAN,CACH,CAFD,CAGAH,OAAO,CAACI,SAAR,CAAoB,UAAM,CACtBL,MAAM,CAAC,GAAIM,CAAAA,KAAJ,CAAU,gBAAV,CAAD,CAAN,CACH,CAFD,CAGAL,OAAO,CAACM,SAAR,CAAoB,UAAM,CACtBR,OAAO,GACV,CAFD,CAGH,CAXK,CADoB,uDAAH,kBAAdH,CAAAA,cAAc,4CAApB","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n"]},"metadata":{},"sourceType":"module"}