{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import{PureComponent}from'react';import ContentWrapper from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/ContentWrapper\";import Field from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/Field\";import Form from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/Form\";import Loader from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/Loader\";import\"./PasswordChangePage.style\";/** @namespace Route/PasswordChangePage/Component */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _PasswordChangePage=/*#__PURE__*/function(_Extensible){_inherits(_PasswordChangePage,_Extensible);var _super=_createSuper(_PasswordChangePage);function _PasswordChangePage(){_classCallCheck(this,_PasswordChangePage);return _super.apply(this,arguments);}_createClass(_PasswordChangePage,[{key:\"renderForm\",value:function renderForm(){var _this$props=this.props,onPasswordAttempt=_this$props.onPasswordAttempt,onPasswordSuccess=_this$props.onPasswordSuccess,onError=_this$props.onError;// TODO: use FieldForm instead!!!\nreturn/*#__PURE__*/_checkBEM(React,Form,{key:\"reset-password\",onSubmit:onPasswordAttempt,onSubmitSuccess:onPasswordSuccess,onSubmitError:onError},/*#__PURE__*/_checkBEM(React,Field,{type:\"password\",label:__('New password'),id:\"password\",name:\"password\",autocomplete:\"new-password\",validation:['notEmpty','password']}),/*#__PURE__*/_checkBEM(React,Field,{type:\"password\",label:__('Confirm password'),id:\"password_confirmation\",name:\"password_confirmation\",autocomplete:\"new-password\",validation:['notEmpty','password','password_match']}),/*#__PURE__*/_checkBEM(React,\"div\",{block:\"MyAccount\",elem:\"Buttons\"},/*#__PURE__*/_checkBEM(React,\"button\",{type:\"submit\",block:\"PasswordChangePage\",elem:\"Button\",mix:{block:'Button'}},__('Update Password'))));}},{key:\"render\",value:function render(){var isLoading=this.props.isLoading;return/*#__PURE__*/_checkBEM(React,\"main\",{block:\"PasswordChangePage\",\"aria-label\":__('Password Change Page')},/*#__PURE__*/_checkBEM(React,ContentWrapper,{mix:{block:'PasswordChangePage'},wrapperMix:{block:'PasswordChangePage',elem:'Wrapper'},label:__('Password Change Actions')},/*#__PURE__*/_checkBEM(React,Loader,{isLoading:isLoading}),/*#__PURE__*/_checkBEM(React,\"h1\",null,__('Change My Password')),this.renderForm()));}}]);return _PasswordChangePage;}(Extensible(PureComponent));Object.defineProperty(_PasswordChangePage,'name',{value:'PasswordChangePage'});export var PasswordChangePage=middleware(_PasswordChangePage,\"Route/PasswordChangePage/Component\");export default PasswordChangePage;","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/route/PasswordChangePage/PasswordChangePage.component.js"],"names":["PureComponent","ContentWrapper","Field","Form","Loader","PasswordChangePage","props","onPasswordAttempt","onPasswordSuccess","onError","__","block","isLoading","elem","renderForm","Object","defineProperty","_PasswordChangePage","value"],"mappings":"ojBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAGA,OAASA,aAAT,KAA8B,OAA9B,CAEA,MAAOC,CAAAA,cAAP,kFACA,MAAOC,CAAAA,KAAP,yEACA,MAAOC,CAAAA,IAAP,wEACA,MAAOC,CAAAA,MAAP,0EAEA,mCAEA,oD,wEACA,UAAaC,CAAAA,mBAAb,oSAQI,qBAAa,iBAKL,KAAKC,KALA,CAELC,iBAFK,aAELA,iBAFK,CAGLC,iBAHK,aAGLA,iBAHK,CAILC,OAJK,aAILA,OAJK,CAOT;AAEA,mCACK,IADL,EAEM,GAAG,CAAC,gBAFV,CAGM,QAAQ,CAAGF,iBAHjB,CAIM,eAAe,CAAGC,iBAJxB,CAKM,aAAa,CAAGC,OALtB,+BAOS,KAPT,EAQU,IAAI,CAAC,UARf,CASU,KAAK,CAAGC,EAAE,CAAC,cAAD,CATpB,CAUU,EAAE,CAAC,UAVb,CAWU,IAAI,CAAC,UAXf,CAYU,YAAY,CAAC,cAZvB,CAaU,UAAU,CAAG,CAAC,UAAD,CAAa,UAAb,CAbvB,gCAeS,KAfT,EAgBU,IAAI,CAAC,UAhBf,CAiBU,KAAK,CAAGA,EAAE,CAAC,kBAAD,CAjBpB,CAkBU,EAAE,CAAC,uBAlBb,CAmBU,IAAI,CAAC,uBAnBf,CAoBU,YAAY,CAAC,cApBvB,CAqBU,UAAU,CAAG,CAAC,UAAD,CAAa,UAAb,CAAyB,gBAAzB,CArBvB,uCAuBa,KAAK,CAAC,WAvBnB,CAuB+B,IAAI,CAAC,SAvBpC,yCAyBc,IAAI,CAAC,QAzBnB,CA0Bc,KAAK,CAAC,oBA1BpB,CA2Bc,IAAI,CAAC,QA3BnB,CA4Bc,GAAG,CAAG,CAAEC,KAAK,CAAE,QAAT,CA5BpB,EA8BkBD,EAAE,CAAC,iBAAD,CA9BpB,IAmCH,CApDL,sBAsDI,iBAAS,IACGE,CAAAA,SADH,CACiB,KAAKN,KADtB,CACGM,SADH,CAGL,2CACU,KAAK,CAAC,oBADhB,CACqC,aAAaF,EAAE,CAAC,sBAAD,CADpD,+BAES,cAFT,EAGU,GAAG,CAAG,CAAEC,KAAK,CAAE,oBAAT,CAHhB,CAIU,UAAU,CAAG,CAAEA,KAAK,CAAE,oBAAT,CAA+BE,IAAI,CAAE,SAArC,CAJvB,CAKU,KAAK,CAAGH,EAAE,CAAC,yBAAD,CALpB,+BAOa,MAPb,EAOoB,SAAS,CAAGE,SAPhC,0CAQkBF,EAAE,CAAC,oBAAD,CARpB,EASc,KAAKI,UAAL,EATd,GAaH,CAtEL,4DAtBAC,MAAM,CAACC,cAAP,CAAsBC,mBAAtB,CAA2C,MAA3C,CAAmD,CAAEC,KAAK,CAAE,oBAAT,CAAnD,E,mGA+FA,cAAeb,CAAAA,kBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport ContentWrapper from 'Component/ContentWrapper';\nimport Field from 'Component/Field';\nimport Form from 'Component/Form';\nimport Loader from 'Component/Loader';\n\nimport './PasswordChangePage.style';\n\n/** @namespace Route/PasswordChangePage/Component */\nexport class PasswordChangePage extends PureComponent {\n    static propTypes = {\n        isLoading: PropTypes.bool.isRequired,\n        onPasswordAttempt: PropTypes.func.isRequired,\n        onPasswordSuccess: PropTypes.func.isRequired,\n        onError: PropTypes.func.isRequired\n    };\n\n    renderForm() {\n        const {\n            onPasswordAttempt,\n            onPasswordSuccess,\n            onError\n        } = this.props;\n\n        // TODO: use FieldForm instead!!!\n\n        return (\n            <Form\n              key=\"reset-password\"\n              onSubmit={ onPasswordAttempt }\n              onSubmitSuccess={ onPasswordSuccess }\n              onSubmitError={ onError }\n            >\n                <Field\n                  type=\"password\"\n                  label={ __('New password') }\n                  id=\"password\"\n                  name=\"password\"\n                  autocomplete=\"new-password\"\n                  validation={ ['notEmpty', 'password'] }\n                />\n                <Field\n                  type=\"password\"\n                  label={ __('Confirm password') }\n                  id=\"password_confirmation\"\n                  name=\"password_confirmation\"\n                  autocomplete=\"new-password\"\n                  validation={ ['notEmpty', 'password', 'password_match'] }\n                />\n                <div block=\"MyAccount\" elem=\"Buttons\">\n                    <button\n                      type=\"submit\"\n                      block=\"PasswordChangePage\"\n                      elem=\"Button\"\n                      mix={ { block: 'Button' } }\n                    >\n                        { __('Update Password') }\n                    </button>\n                </div>\n            </Form>\n        );\n    }\n\n    render() {\n        const { isLoading } = this.props;\n\n        return (\n            <main block=\"PasswordChangePage\" aria-label={ __('Password Change Page') }>\n                <ContentWrapper\n                  mix={ { block: 'PasswordChangePage' } }\n                  wrapperMix={ { block: 'PasswordChangePage', elem: 'Wrapper' } }\n                  label={ __('Password Change Actions') }\n                >\n                    <Loader isLoading={ isLoading } />\n                    <h1>{ __('Change My Password') }</h1>\n                    { this.renderForm() }\n                </ContentWrapper>\n            </main>\n        );\n    }\n}\n\nexport default PasswordChangePage;\n"]},"metadata":{},"sourceType":"module"}