{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport { Field } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Query\";\n/** @namespace Query/Klarna */\n\nexport class _KlarnaQuery extends Extensible() {\n  getCreateKlarnaTokenMutation(input) {\n    return new Field('createKlarnaToken').addArgument('input', 'KlarnaTokenInput!', input).setAlias('klarnaToken');\n  }\n\n}\nObject.defineProperty(_KlarnaQuery, 'name', {\n  value: 'KlarnaQuery'\n});\n\nexport const KlarnaQuery = middleware(_KlarnaQuery, \"Query/Klarna\");\nexport default new KlarnaQuery();","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/packages/scandipwa/src/query/Klarna.query.js"],"names":["Field","KlarnaQuery","getCreateKlarnaTokenMutation","input","addArgument","setAlias","Object","defineProperty","_KlarnaQuery","value"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,KAAT;AAEA;;AACA,OAAO,MAAMC,YAAN,sBAAkB;AACrBC,EAAAA,4BAA4B,CAACC,KAAD,EAAQ;AAChC,WAAO,IAAIH,KAAJ,CAAU,mBAAV,EACFI,WADE,CACU,OADV,EACmB,mBADnB,EACwCD,KADxC,EAEFE,QAFE,CAEO,aAFP,CAAP;AAGH;;AALoB;AAdzBC,MAAM,CAACC,cAAP,CAAsBC,YAAtB,EAAoC,MAApC,EAA4C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA5C;;;AAsBA,eAAe,IAAIR,WAAJ,EAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { Field } from 'Util/Query';\n\n/** @namespace Query/Klarna */\nexport class KlarnaQuery {\n    getCreateKlarnaTokenMutation(input) {\n        return new Field('createKlarnaToken')\n            .addArgument('input', 'KlarnaTokenInput!', input)\n            .setAlias('klarnaToken');\n    }\n}\n\nexport default new KlarnaQuery();\n"]},"metadata":{},"sourceType":"module"}