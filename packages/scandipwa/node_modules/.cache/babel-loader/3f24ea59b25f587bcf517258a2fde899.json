{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\route\\\\MenuPage\\\\MenuPage.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { MENU } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component/Header/Header.config\";\nimport Menu from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component/Menu\";\nimport { updateMeta } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Meta/Meta.action\";\nimport { changeNavigationState } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Navigation/Navigation.action\";\nimport { TOP_NAVIGATION_TYPE } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Navigation/Navigation.reducer\";\nimport { HistoryType } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\type/Common\";\nimport { DeviceType } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\type/Device\";\nimport { appendWithStoreCode } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Url\";\nimport \"./MenuPage.style\";\n/** @namespace Route/MenuPage/Container/mapStateToProps */\n\nexport const mapStateToProps = middleware(function (state) {\n  return {\n    device: state.ConfigReducer.device\n  };\n}, \"Route/MenuPage/Container/mapStateToProps\");\n/** @namespace Route/MenuPage/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {\n    updateMeta: function (meta) {\n      return dispatch(updateMeta(meta));\n    },\n    changeHeaderState: function (state) {\n      return dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, state));\n    }\n  };\n}, \"Route/MenuPage/Container/mapDispatchToProps\");\n/** @namespace Route/MenuPage/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _MenuPageContainer extends Extensible(PureComponent) {\n  componentDidMount() {\n    const {\n      updateMeta,\n      changeHeaderState\n    } = this.props;\n    updateMeta({\n      title: __('Menu')\n    });\n    this.redirectIfNotOnMobile();\n    changeHeaderState({\n      name: MENU,\n      onBackClick: function () {\n        return history.goBack();\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    this.redirectIfNotOnMobile();\n  }\n\n  redirectIfNotOnMobile() {\n    const {\n      history,\n      device\n    } = this.props;\n\n    if (!device.isMobile) {\n      history.push(appendWithStoreCode('/'));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, \"main\", {\n      block: \"MenuPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n_MenuPageContainer.propTypes = {\n  updateMeta: PropTypes.func.isRequired,\n  history: HistoryType.isRequired,\n  changeHeaderState: PropTypes.func.isRequired,\n  device: DeviceType.isRequired\n};\nObject.defineProperty(_MenuPageContainer, 'name', {\n  value: 'MenuPageContainer'\n});\n\nexport const MenuPageContainer = middleware(_MenuPageContainer, \"Route/MenuPage/Container\");\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MenuPageContainer));","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/packages/scandipwa/src/route/MenuPage/MenuPage.container.js"],"names":["PropTypes","PureComponent","connect","withRouter","MENU","Menu","updateMeta","changeNavigationState","TOP_NAVIGATION_TYPE","HistoryType","DeviceType","appendWithStoreCode","mapStateToProps","state","device","ConfigReducer","mapDispatchToProps","dispatch","meta","changeHeaderState","MenuPageContainer","componentDidMount","props","title","__","redirectIfNotOnMobile","name","onBackClick","history","goBack","componentDidUpdate","isMobile","push","render","propTypes","func","isRequired","Object","defineProperty","_MenuPageContainer","value"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,IAAT;AACA,OAAOC,IAAP;AACA,SAASC,UAAT;AACA,SAASC,qBAAT;AACA,SAASC,mBAAT;AACA,SAASC,WAAT;AACA,SAASC,UAAT;AACA,SAASC,mBAAT;AAEA;AAEA;;AACA,OAAO,MAAMC,eAAe,cAAG,UAACC,KAAD;AAAA,SAAY;AACvCC,IAAAA,MAAM,EAAED,KAAK,CAACE,aAAN,CAAoBD;AADW,GAAZ;AAAA,CAAH,6CAArB;AAIP;;AACA,OAAO,MAAME,kBAAkB,cAAG,UAACC,QAAD;AAAA,SAAe;AAC7CX,IAAAA,UAAU,EAAE,UAACY,IAAD;AAAA,aAAUD,QAAQ,CAACX,UAAU,CAACY,IAAD,CAAX,CAAlB;AAAA,KADiC;AAE7CC,IAAAA,iBAAiB,EAAE,UAACN,KAAD;AAAA,aAAWI,QAAQ,CAACV,qBAAqB,CAACC,mBAAD,EAAsBK,KAAtB,CAAtB,CAAnB;AAAA;AAF0B,GAAf;AAAA,CAAH,gDAAxB;AAKP;;;;AACA,OAAO,MAAMO,kBAAN,mCAA8C;AAQjDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEf,MAAAA,UAAF;AAAca,MAAAA;AAAd,QAAoC,KAAKG,KAA/C;AACAhB,IAAAA,UAAU,CAAC;AAAEiB,MAAAA,KAAK,EAAEC,EAAE,CAAC,MAAD;AAAX,KAAD,CAAV;AACA,SAAKC,qBAAL;AACAN,IAAAA,iBAAiB,CAAC;AACdO,MAAAA,IAAI,EAAEtB,IADQ;AAEduB,MAAAA,WAAW,EAAE;AAAA,eAAMC,OAAO,CAACC,MAAR,EAAN;AAAA;AAFC,KAAD,CAAjB;AAIH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKL,qBAAL;AACH;;AAEDA,EAAAA,qBAAqB,GAAG;AACpB,UAAM;AAAEG,MAAAA,OAAF;AAAWd,MAAAA;AAAX,QAAsB,KAAKQ,KAAjC;;AAEA,QAAI,CAACR,MAAM,CAACiB,QAAZ,EAAsB;AAClBH,MAAAA,OAAO,CAACI,IAAR,CAAarB,mBAAmB,CAAC,GAAD,CAAhC;AACH;AACJ;;AAEDsB,EAAAA,MAAM,GAAG;AACL;AACU,MAAA,KAAK,EAAC,UADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAES,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH;;AApCgD;AAAxCb,kB,CACFc,S,GAAY;AACf5B,EAAAA,UAAU,EAAEN,SAAS,CAACmC,IAAV,CAAeC,UADZ;AAEfR,EAAAA,OAAO,EAAEnB,WAAW,CAAC2B,UAFN;AAGfjB,EAAAA,iBAAiB,EAAEnB,SAAS,CAACmC,IAAV,CAAeC,UAHnB;AAIftB,EAAAA,MAAM,EAAEJ,UAAU,CAAC0B;AAJJ,C;AAxCvBC,MAAM,CAACC,cAAP,CAAsBC,kBAAtB,EAA0C,MAA1C,EAAkD;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAlD;;;AA8EA,eAAerC,UAAU,CACrBD,OAAO,CAACU,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CI,iBAA7C,CADqB,CAAzB","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport { MENU } from 'Component/Header/Header.config';\nimport Menu from 'Component/Menu';\nimport { updateMeta } from 'Store/Meta/Meta.action';\nimport { changeNavigationState } from 'Store/Navigation/Navigation.action';\nimport { TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { HistoryType } from 'Type/Common';\nimport { DeviceType } from 'Type/Device';\nimport { appendWithStoreCode } from 'Util/Url';\n\nimport './MenuPage.style';\n\n/** @namespace Route/MenuPage/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    device: state.ConfigReducer.device\n});\n\n/** @namespace Route/MenuPage/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    updateMeta: (meta) => dispatch(updateMeta(meta)),\n    changeHeaderState: (state) => dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, state))\n});\n\n/** @namespace Route/MenuPage/Container */\nexport class MenuPageContainer extends PureComponent {\n    static propTypes = {\n        updateMeta: PropTypes.func.isRequired,\n        history: HistoryType.isRequired,\n        changeHeaderState: PropTypes.func.isRequired,\n        device: DeviceType.isRequired\n    };\n\n    componentDidMount() {\n        const { updateMeta, changeHeaderState } = this.props;\n        updateMeta({ title: __('Menu') });\n        this.redirectIfNotOnMobile();\n        changeHeaderState({\n            name: MENU,\n            onBackClick: () => history.goBack()\n        });\n    }\n\n    componentDidUpdate() {\n        this.redirectIfNotOnMobile();\n    }\n\n    redirectIfNotOnMobile() {\n        const { history, device } = this.props;\n\n        if (!device.isMobile) {\n            history.push(appendWithStoreCode('/'));\n        }\n    }\n\n    render() {\n        return (\n            <main block=\"MenuPage\">\n                <Menu />\n            </main>\n        );\n    }\n}\n\nexport default withRouter(\n    connect(mapStateToProps, mapDispatchToProps)(MenuPageContainer)\n);\n"]},"metadata":{},"sourceType":"module"}