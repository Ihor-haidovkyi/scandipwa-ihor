{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/import{logger}from\"./_private/logger.js\";import{assert}from\"./_private/assert.js\";import{quotaErrorCallbacks}from\"./models/quotaErrorCallbacks.js\";import\"./_version.js\";/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */function registerQuotaErrorCallback(callback){if(process.env.NODE_ENV!=='production'){assert.isType(callback,'function',{moduleName:'workbox-core',funcName:'register',paramName:'callback'});}quotaErrorCallbacks.add(callback);if(process.env.NODE_ENV!=='production'){logger.log('Registered a callback to respond to quota errors.',callback);}}export{registerQuotaErrorCallback};","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/workbox-core/registerQuotaErrorCallback.js"],"names":["logger","assert","quotaErrorCallbacks","registerQuotaErrorCallback","callback","process","env","NODE_ENV","isType","moduleName","funcName","paramName","add","log"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,OAASA,MAAT,4BACA,OAASC,MAAT,4BACA,OAASC,mBAAT,uCACA,sBACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,0BAAT,CAAoCC,QAApC,CAA8C,CAC1C,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvCN,MAAM,CAACO,MAAP,CAAcJ,QAAd,CAAwB,UAAxB,CAAoC,CAChCK,UAAU,CAAE,cADoB,CAEhCC,QAAQ,CAAE,UAFsB,CAGhCC,SAAS,CAAE,UAHqB,CAApC,EAKH,CACDT,mBAAmB,CAACU,GAApB,CAAwBR,QAAxB,EACA,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvCP,MAAM,CAACa,GAAP,CAAW,mDAAX,CAAgET,QAAhE,EACH,CACJ,CACD,OAASD,0BAAT","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n"]},"metadata":{},"sourceType":"module"}