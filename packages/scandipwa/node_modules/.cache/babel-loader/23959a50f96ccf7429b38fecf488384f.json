{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/import{assert}from'workbox-core/_private/assert.js';import{logger}from'workbox-core/_private/logger.js';import{Route}from\"./Route.js\";import\"./_version.js\";/**\n * NavigationRoute makes it easy to create a\n * [Route]{@link module:workbox-routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * [`mode`]{@link https://fetch.spec.whatwg.org/#concept-request-mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `denylist` and `allowlist` parameters.\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */var NavigationRoute=/*#__PURE__*/function(_Route){_inherits(NavigationRoute,_Route);var _super=_createSuper(NavigationRoute);/**\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\n     * take precedence and the request will not match this route.\n     *\n     * The regular expressions in `allowlist` and `denylist`\n     * are matched against the concatenated\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n     * portions of the requested URL.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {Object} options\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\n     * the route will not handle the request (even if a allowlist RegExp matches).\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\n     * match the URL's pathname and search parameter, the route will handle the\n     * request (assuming the denylist doesn't match).\n     */function NavigationRoute(handler){var _this;var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},_ref$allowlist=_ref.allowlist,allowlist=_ref$allowlist===void 0?[/./]:_ref$allowlist,_ref$denylist=_ref.denylist,denylist=_ref$denylist===void 0?[]:_ref$denylist;_classCallCheck(this,NavigationRoute);if(process.env.NODE_ENV!=='production'){assert.isArrayOfClass(allowlist,RegExp,{moduleName:'workbox-routing',className:'NavigationRoute',funcName:'constructor',paramName:'options.allowlist'});assert.isArrayOfClass(denylist,RegExp,{moduleName:'workbox-routing',className:'NavigationRoute',funcName:'constructor',paramName:'options.denylist'});}_this=_super.call(this,function(options){return _this._match(options);},handler);_this._allowlist=allowlist;_this._denylist=denylist;return _this;}/**\n     * Routes match handler.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request\n     * @return {boolean}\n     *\n     * @private\n     */_createClass(NavigationRoute,[{key:\"_match\",value:function _match(_ref2){var url=_ref2.url,request=_ref2.request;if(request&&request.mode!=='navigate'){return false;}var pathnameAndSearch=url.pathname+url.search;var _iterator=_createForOfIteratorHelper(this._denylist),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var regExp=_step.value;if(regExp.test(pathnameAndSearch)){if(process.env.NODE_ENV!=='production'){logger.log(\"The navigation route \".concat(pathnameAndSearch,\" is not \")+\"being used, since the URL matches this denylist pattern: \"+\"\".concat(regExp));}return false;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(this._allowlist.some(function(regExp){return regExp.test(pathnameAndSearch);})){if(process.env.NODE_ENV!=='production'){logger.debug(\"The navigation route \".concat(pathnameAndSearch,\" \")+\"is being used.\");}return true;}if(process.env.NODE_ENV!=='production'){logger.log(\"The navigation route \".concat(pathnameAndSearch,\" is not \")+\"being used, since the URL being navigated to doesn't \"+\"match the allowlist.\");}return false;}}]);return NavigationRoute;}(Route);export{NavigationRoute};","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/workbox-routing/NavigationRoute.js"],"names":["assert","logger","Route","NavigationRoute","handler","allowlist","denylist","process","env","NODE_ENV","isArrayOfClass","RegExp","moduleName","className","funcName","paramName","options","_match","_allowlist","_denylist","url","request","mode","pathnameAndSearch","pathname","search","regExp","test","log","some","debug"],"mappings":"6tBAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,OAASA,MAAT,KAAuB,iCAAvB,CACA,OAASC,MAAT,KAAuB,iCAAvB,CACA,OAASC,KAAT,kBACA,sBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,GACMC,CAAAA,e,0GACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACI,yBAAYC,OAAZ,CAAgE,8EAAJ,EAAI,qBAAzCC,SAAyC,CAAzCA,SAAyC,yBAA7B,CAAC,GAAD,CAA6B,mCAAtBC,QAAsB,CAAtBA,QAAsB,wBAAX,EAAW,qDAC5D,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvCT,MAAM,CAACU,cAAP,CAAsBL,SAAtB,CAAiCM,MAAjC,CAAyC,CACrCC,UAAU,CAAE,iBADyB,CAErCC,SAAS,CAAE,iBAF0B,CAGrCC,QAAQ,CAAE,aAH2B,CAIrCC,SAAS,CAAE,mBAJ0B,CAAzC,EAMAf,MAAM,CAACU,cAAP,CAAsBJ,QAAtB,CAAgCK,MAAhC,CAAwC,CACpCC,UAAU,CAAE,iBADwB,CAEpCC,SAAS,CAAE,iBAFyB,CAGpCC,QAAQ,CAAE,aAH0B,CAIpCC,SAAS,CAAE,kBAJyB,CAAxC,EAMH,CACD,uBAAM,SAACC,OAAD,QAAa,OAAKC,MAAL,CAAYD,OAAZ,CAAb,EAAN,CAAyCZ,OAAzC,EACA,MAAKc,UAAL,CAAkBb,SAAlB,CACA,MAAKc,SAAL,CAAiBb,QAAjB,CAjB4D,aAkB/D,CACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,O,kDACI,sBAAyB,IAAhBc,CAAAA,GAAgB,OAAhBA,GAAgB,CAAXC,OAAW,OAAXA,OAAW,CACrB,GAAIA,OAAO,EAAIA,OAAO,CAACC,IAAR,GAAiB,UAAhC,CAA4C,CACxC,MAAO,MAAP,CACH,CACD,GAAMC,CAAAA,iBAAiB,CAAGH,GAAG,CAACI,QAAJ,CAAeJ,GAAG,CAACK,MAA7C,CAJqB,yCAKA,KAAKN,SALL,YAKrB,+CAAqC,IAA1BO,CAAAA,MAA0B,aACjC,GAAIA,MAAM,CAACC,IAAP,CAAYJ,iBAAZ,CAAJ,CAAoC,CAChC,GAAIhB,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvCR,MAAM,CAAC2B,GAAP,CAAW,+BAAwBL,iBAAxB,mFAEJG,MAFI,CAAX,EAGH,CACD,MAAO,MAAP,CACH,CACJ,CAdoB,qDAerB,GAAI,KAAKR,UAAL,CAAgBW,IAAhB,CAAqB,SAACH,MAAD,QAAYA,CAAAA,MAAM,CAACC,IAAP,CAAYJ,iBAAZ,CAAZ,EAArB,CAAJ,CAAsE,CAClE,GAAIhB,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvCR,MAAM,CAAC6B,KAAP,CAAa,+BAAwBP,iBAAxB,sBAAb,EAEH,CACD,MAAO,KAAP,CACH,CACD,GAAIhB,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvCR,MAAM,CAAC2B,GAAP,CAAW,+BAAwBL,iBAAxB,2FAAX,EAGH,CACD,MAAO,MAAP,CACH,C,6BA7EyBrB,K,EA+E9B,OAASC,eAAT","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * NavigationRoute makes it easy to create a\n * [Route]{@link module:workbox-routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * [`mode`]{@link https://fetch.spec.whatwg.org/#concept-request-mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `denylist` and `allowlist` parameters.\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass NavigationRoute extends Route {\n    /**\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\n     * take precedence and the request will not match this route.\n     *\n     * The regular expressions in `allowlist` and `denylist`\n     * are matched against the concatenated\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n     * portions of the requested URL.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {Object} options\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\n     * the route will not handle the request (even if a allowlist RegExp matches).\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\n     * match the URL's pathname and search parameter, the route will handle the\n     * request (assuming the denylist doesn't match).\n     */\n    constructor(handler, { allowlist = [/./], denylist = [] } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArrayOfClass(allowlist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.allowlist',\n            });\n            assert.isArrayOfClass(denylist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.denylist',\n            });\n        }\n        super((options) => this._match(options), handler);\n        this._allowlist = allowlist;\n        this._denylist = denylist;\n    }\n    /**\n     * Routes match handler.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request\n     * @return {boolean}\n     *\n     * @private\n     */\n    _match({ url, request }) {\n        if (request && request.mode !== 'navigate') {\n            return false;\n        }\n        const pathnameAndSearch = url.pathname + url.search;\n        for (const regExp of this._denylist) {\n            if (regExp.test(pathnameAndSearch)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                        `being used, since the URL matches this denylist pattern: ` +\n                        `${regExp}`);\n                }\n                return false;\n            }\n        }\n        if (this._allowlist.some((regExp) => regExp.test(pathnameAndSearch))) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`The navigation route ${pathnameAndSearch} ` +\n                    `is being used.`);\n            }\n            return true;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                `being used, since the URL being navigated to doesn't ` +\n                `match the allowlist.`);\n        }\n        return false;\n    }\n}\nexport { NavigationRoute };\n"]},"metadata":{},"sourceType":"module"}