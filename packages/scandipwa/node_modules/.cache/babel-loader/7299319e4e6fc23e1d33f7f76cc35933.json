{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/import{logger}from'workbox-core/_private/logger.js';import\"../_version.js\";/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */function _nestedGroup(groupTitle,urls){if(urls.length===0){return;}logger.groupCollapsed(groupTitle);var _iterator=_createForOfIteratorHelper(urls),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var url=_step.value;logger.log(url);}}catch(err){_iterator.e(err);}finally{_iterator.f();}logger.groupEnd();}/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */export function printInstallDetails(urlsToPrecache,urlsAlreadyPrecached){var precachedCount=urlsToPrecache.length;var alreadyPrecachedCount=urlsAlreadyPrecached.length;if(precachedCount||alreadyPrecachedCount){var message=\"Precaching \".concat(precachedCount,\" file\").concat(precachedCount===1?'':'s',\".\");if(alreadyPrecachedCount>0){message+=\" \".concat(alreadyPrecachedCount,\" \")+\"file\".concat(alreadyPrecachedCount===1?' is':'s are',\" already cached.\");}logger.groupCollapsed(message);_nestedGroup(\"View newly precached URLs.\",urlsToPrecache);_nestedGroup(\"View previously precached URLs.\",urlsAlreadyPrecached);logger.groupEnd();}}","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/workbox-precaching/utils/printInstallDetails.js"],"names":["logger","_nestedGroup","groupTitle","urls","length","groupCollapsed","url","log","groupEnd","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","message"],"mappings":"yKAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,OAASA,MAAT,KAAuB,iCAAvB,CACA,uBACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,YAAT,CAAsBC,UAAtB,CAAkCC,IAAlC,CAAwC,CACpC,GAAIA,IAAI,CAACC,MAAL,GAAgB,CAApB,CAAuB,CACnB,OACH,CACDJ,MAAM,CAACK,cAAP,CAAsBH,UAAtB,EAJoC,yCAKlBC,IALkB,YAKpC,+CAAwB,IAAbG,CAAAA,GAAa,aACpBN,MAAM,CAACO,GAAP,CAAWD,GAAX,EACH,CAPmC,qDAQpCN,MAAM,CAACQ,QAAP,GACH,CACD;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAASC,CAAAA,mBAAT,CAA6BC,cAA7B,CAA6CC,oBAA7C,CAAmE,CACtE,GAAMC,CAAAA,cAAc,CAAGF,cAAc,CAACN,MAAtC,CACA,GAAMS,CAAAA,qBAAqB,CAAGF,oBAAoB,CAACP,MAAnD,CACA,GAAIQ,cAAc,EAAIC,qBAAtB,CAA6C,CACzC,GAAIC,CAAAA,OAAO,sBAAiBF,cAAjB,iBAAuCA,cAAc,GAAK,CAAnB,CAAuB,EAAvB,CAA4B,GAAnE,KAAX,CACA,GAAIC,qBAAqB,CAAG,CAA5B,CAA+B,CAC3BC,OAAO,EAAI,WAAID,qBAAJ,oBACAA,qBAAqB,GAAK,CAA1B,CAA8B,KAA9B,CAAsC,OADtC,oBAAX,CAEH,CACDb,MAAM,CAACK,cAAP,CAAsBS,OAAtB,EACAb,YAAY,8BAA+BS,cAA/B,CAAZ,CACAT,YAAY,mCAAoCU,oBAApC,CAAZ,CACAX,MAAM,CAACQ,QAAP,GACH,CACJ","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}