{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */export var UPDATE_URL_REWRITE='UPDATE_URL_REWRITE';export var IS_LOADING_URL_REWRITE='IS_LOADING_URL_REWRITE';/** @namespace Store/UrlRewrites/Action/updateUrlRewrite */export var updateUrlRewrite=middleware(function(urlRewrite,requestedUrl){return{type:UPDATE_URL_REWRITE,urlRewrite:urlRewrite,requestedUrl:requestedUrl};},\"Store/UrlRewrites/Action/updateUrlRewrite\");/** @namespace Store/UrlRewrites/Action/clearUrlRewrite */export var setIsUrlRewritesLoading=middleware(function(isLoading){return{type:IS_LOADING_URL_REWRITE,isLoading:isLoading};},\"Store/UrlRewrites/Action/clearUrlRewrite\");","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/store/UrlRewrites/UrlRewrites.action.js"],"names":["UPDATE_URL_REWRITE","IS_LOADING_URL_REWRITE","updateUrlRewrite","urlRewrite","requestedUrl","type","setIsUrlRewritesLoading","isLoading"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,IAAMA,CAAAA,kBAAkB,CAAG,oBAA3B,CACP,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,wBAA/B,CAEP,2DACA,MAAO,IAAMC,CAAAA,gBAAgB,YAAG,SAACC,UAAD,CAAaC,YAAb,QAA+B,CAC3DC,IAAI,CAAEL,kBADqD,CAE3DG,UAAU,CAAVA,UAF2D,CAG3DC,YAAY,CAAZA,YAH2D,CAA/B,EAAH,6CAAtB,CAMP,0DACA,MAAO,IAAME,CAAAA,uBAAuB,YAAG,SAACC,SAAD,QAAgB,CACnDF,IAAI,CAAEJ,sBAD6C,CAEnDM,SAAS,CAATA,SAFmD,CAAhB,EAAH,4CAA7B","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport const UPDATE_URL_REWRITE = 'UPDATE_URL_REWRITE';\nexport const IS_LOADING_URL_REWRITE = 'IS_LOADING_URL_REWRITE';\n\n/** @namespace Store/UrlRewrites/Action/updateUrlRewrite */\nexport const updateUrlRewrite = (urlRewrite, requestedUrl) => ({\n    type: UPDATE_URL_REWRITE,\n    urlRewrite,\n    requestedUrl\n});\n\n/** @namespace Store/UrlRewrites/Action/clearUrlRewrite */\nexport const setIsUrlRewritesLoading = (isLoading) => ({\n    type: IS_LOADING_URL_REWRITE,\n    isLoading\n});\n"]},"metadata":{},"sourceType":"module"}