{"ast":null,"code":"var _jsxFileName = \"/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountOrderPopup/MyAccountOrderPopup.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport OrderQuery from \"/home/marketihor/scandipwa/packages/scandipwa/src/query/Order.query\";\nimport { showNotification } from \"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";\nimport { orderType } from \"/home/marketihor/scandipwa/packages/scandipwa/src/type/Account\";\nimport { isSignedIn } from \"/home/marketihor/scandipwa/packages/scandipwa/src/util/Auth\";\nimport { getIndexedProducts } from \"/home/marketihor/scandipwa/packages/scandipwa/src/util/Product\";\nimport { fetchQuery } from \"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request\";\nimport MyAccountOrderPopup from \"./MyAccountOrderPopup.component\";\nimport { ORDER_POPUP_ID } from \"./MyAccountOrderPopup.config\";\nexport const OrderDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Order/Order.dispatcher\");\n/** @namespace Component/MyAccountOrderPopup/Container/mapStateToProps */\n\nexport const mapStateToProps = middleware(function (state) {\n  return {\n    order: state.OrderReducer.order,\n    payload: state.PopupReducer.popupPayload[ORDER_POPUP_ID] || {},\n    display_tax_in_shipping_amount: state.ConfigReducer.cartDisplayConfig.display_tax_in_shipping_amount\n  };\n}, \"Component/MyAccountOrderPopup/Container/mapStateToProps\");\n/** @namespace Component/MyAccountOrderPopup/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {\n    showNotification: function (type, message) {\n      return dispatch(showNotification(type, message));\n    },\n    getOrder: function (orderId) {\n      return OrderDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.getOrderById(dispatch, orderId);\n      });\n    }\n  };\n}, \"Component/MyAccountOrderPopup/Container/mapDispatchToProps\");\n/** @namespace Component/MyAccountOrderPopup/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _MyAccountOrderPopupContainer extends Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      order: {},\n      currency_code: '',\n      prevOrderId: 0,\n      isLoading: true\n    };\n\n    this.containerProps = function () {\n      const {\n        order: stateOrder,\n        isLoading,\n        currency_code\n      } = _this.state;\n      const {\n        payload: {\n          order: payloadOrder\n        },\n        display_tax_in_shipping_amount\n      } = _this.props;\n      return {\n        display_tax_in_shipping_amount,\n        isLoading,\n        currency_code,\n        order: { ...payloadOrder,\n          ...stateOrder\n        }\n      };\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      payload: {\n        increment_id: id\n      }\n    } = props;\n    const {\n      prevOrderId\n    } = state;\n\n    if (prevOrderId === id) {\n      return null;\n    }\n\n    return {\n      order: {},\n      isLoading: true,\n      prevOrderId: id\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      payload: {\n        increment_id: prevId\n      }\n    } = prevProps;\n    const {\n      payload: {\n        increment_id: id\n      }\n    } = this.props;\n\n    if (id !== prevId) {\n      this.requestOrderDetails();\n    }\n  }\n\n  requestOrderDetails() {\n    var _this2 = this;\n\n    const {\n      payload: {\n        order: {\n          base_order_info: {\n            id\n          } = {}\n        } = {}\n      } = {}\n    } = this.props;\n\n    if (!isSignedIn()) {\n      return;\n    }\n\n    fetchQuery(OrderQuery.getOrderByIdQuery(id)).then(\n    /** @namespace Component/MyAccountOrderPopup/Container/requestOrderDetailsFetchQueryThen */\n    middleware(function ({\n      getOrderById: rawOrder\n    }) {\n      const {\n        order_products = []\n      } = rawOrder;\n      const indexedProducts = getIndexedProducts(order_products);\n      const order = { ...rawOrder,\n        order_products: indexedProducts\n      };\n      const {\n        base_order_info: {\n          currency_code\n        }\n      } = order;\n\n      _this2.setState({\n        currency_code,\n        order,\n        isLoading: false\n      });\n    }, \"Component/MyAccountOrderPopup/Container/requestOrderDetailsFetchQueryThen\"),\n    /** @namespace Component/MyAccountOrderPopup/Container/requestOrderDetailsFetchQueryCatch */\n    middleware(function () {\n      showNotification('error', __('Error getting Order by ID!'));\n\n      _this2.setState({\n        isLoading: false\n      });\n    }, \"Component/MyAccountOrderPopup/Container/requestOrderDetailsFetchQueryCatch\"));\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, MyAccountOrderPopup, Object.assign({}, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n_MyAccountOrderPopupContainer.propTypes = {\n  payload: PropTypes.shape({\n    order: orderType,\n    increment_id: PropTypes.string\n  }).isRequired,\n  showNotification: PropTypes.func.isRequired,\n  getOrder: PropTypes.func.isRequired,\n  display_tax_in_shipping_amount: PropTypes.string.isRequired\n};\nObject.defineProperty(_MyAccountOrderPopupContainer, 'name', {\n  value: 'MyAccountOrderPopupContainer'\n});\n\nexport const MyAccountOrderPopupContainer = middleware(_MyAccountOrderPopupContainer, \"Component/MyAccountOrderPopup/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountOrderPopupContainer);","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountOrderPopup/MyAccountOrderPopup.container.js"],"names":["PropTypes","PureComponent","connect","OrderQuery","showNotification","orderType","isSignedIn","getIndexedProducts","fetchQuery","MyAccountOrderPopup","ORDER_POPUP_ID","OrderDispatcher","mapStateToProps","state","order","OrderReducer","payload","PopupReducer","popupPayload","display_tax_in_shipping_amount","ConfigReducer","cartDisplayConfig","mapDispatchToProps","dispatch","type","message","getOrder","orderId","then","default","dispatcher","getOrderById","MyAccountOrderPopupContainer","currency_code","prevOrderId","isLoading","containerProps","stateOrder","payloadOrder","props","getDerivedStateFromProps","increment_id","id","componentDidUpdate","prevProps","prevId","requestOrderDetails","base_order_info","getOrderByIdQuery","rawOrder","order_products","indexedProducts","setState","__","render","propTypes","shape","string","isRequired","func","Object","defineProperty","_MyAccountOrderPopupContainer","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport OrderQuery from 'Query/Order.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { orderType } from 'Type/Account';\nimport { isSignedIn } from 'Util/Auth';\nimport { getIndexedProducts } from 'Util/Product';\nimport { fetchQuery } from 'Util/Request';\n\nimport MyAccountOrderPopup from './MyAccountOrderPopup.component';\nimport { ORDER_POPUP_ID } from './MyAccountOrderPopup.config';\n\nexport const OrderDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Order/Order.dispatcher'\n);\n\n/** @namespace Component/MyAccountOrderPopup/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    order: state.OrderReducer.order,\n    payload: state.PopupReducer.popupPayload[ORDER_POPUP_ID] || {},\n    display_tax_in_shipping_amount: state.ConfigReducer.cartDisplayConfig.display_tax_in_shipping_amount\n});\n\n/** @namespace Component/MyAccountOrderPopup/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showNotification: (type, message) => dispatch(showNotification(type, message)),\n    getOrder: (orderId) => OrderDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.getOrderById(dispatch, orderId)\n    )\n});\n\n/** @namespace Component/MyAccountOrderPopup/Container */\nexport class MyAccountOrderPopupContainer extends PureComponent {\n    static propTypes = {\n        payload: PropTypes.shape({\n            order: orderType,\n            increment_id: PropTypes.string\n        }).isRequired,\n        showNotification: PropTypes.func.isRequired,\n        getOrder: PropTypes.func.isRequired,\n        display_tax_in_shipping_amount: PropTypes.string.isRequired\n    };\n\n    state = {\n        order: {},\n        currency_code: '',\n        prevOrderId: 0,\n        isLoading: true\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { payload: { increment_id: id } } = props;\n        const { prevOrderId } = state;\n\n        if (prevOrderId === id) {\n            return null;\n        }\n\n        return { order: {}, isLoading: true, prevOrderId: id };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { payload: { increment_id: prevId } } = prevProps;\n        const { payload: { increment_id: id } } = this.props;\n\n        if (id !== prevId) {\n            this.requestOrderDetails();\n        }\n    }\n\n    containerProps = () => {\n        const { order: stateOrder, isLoading, currency_code } = this.state;\n        const {\n            payload: { order: payloadOrder },\n            display_tax_in_shipping_amount\n        } = this.props;\n\n        return {\n            display_tax_in_shipping_amount,\n            isLoading,\n            currency_code,\n            order: {\n                ...payloadOrder,\n                ...stateOrder\n            }\n        };\n    };\n\n    requestOrderDetails() {\n        const {\n            payload: {\n                order: {\n                    base_order_info: { id } = {}\n                } = {}\n            } = {}\n        } = this.props;\n\n        if (!isSignedIn()) {\n            return;\n        }\n\n        fetchQuery(OrderQuery.getOrderByIdQuery(id)).then(\n            /** @namespace Component/MyAccountOrderPopup/Container/requestOrderDetailsFetchQueryThen */\n            ({ getOrderById: rawOrder }) => {\n                const { order_products = [] } = rawOrder;\n                const indexedProducts = getIndexedProducts(order_products);\n                const order = { ...rawOrder, order_products: indexedProducts };\n                const { base_order_info: { currency_code } } = order;\n                this.setState({ currency_code, order, isLoading: false });\n            },\n            /** @namespace Component/MyAccountOrderPopup/Container/requestOrderDetailsFetchQueryCatch */\n            () => {\n                showNotification('error', __('Error getting Order by ID!'));\n                this.setState({ isLoading: false });\n            }\n        );\n    }\n\n    render() {\n        return (\n            <MyAccountOrderPopup\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountOrderPopupContainer);\n"]},"metadata":{},"sourceType":"module"}