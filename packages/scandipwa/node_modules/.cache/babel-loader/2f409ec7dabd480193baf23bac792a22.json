{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/import\"../_version.js\";var supportStatus;/**\n * A utility function that determines whether the current browser supports\n * constructing a [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream)\n * object.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `ReadableStream`, `false` otherwise.\n *\n * @private\n */function canConstructReadableStream(){if(supportStatus===undefined){// See https://github.com/GoogleChrome/workbox/issues/1473\ntry{new ReadableStream({start:function start(){}});supportStatus=true;}catch(error){supportStatus=false;}}return supportStatus;}export{canConstructReadableStream};","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/workbox-core/_private/canConstructReadableStream.js"],"names":["supportStatus","canConstructReadableStream","undefined","ReadableStream","start","error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,uBACA,GAAIA,CAAAA,aAAJ,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,0BAAT,EAAsC,CAClC,GAAID,aAAa,GAAKE,SAAtB,CAAiC,CAC7B;AACA,GAAI,CACA,GAAIC,CAAAA,cAAJ,CAAmB,CAAEC,KAAF,iBAAU,CAAG,CAAb,CAAnB,EACAJ,aAAa,CAAG,IAAhB,CACH,CACD,MAAOK,KAAP,CAAc,CACVL,aAAa,CAAG,KAAhB,CACH,CACJ,CACD,MAAOA,CAAAA,aAAP,CACH,CACD,OAASC,0BAAT","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream)\n * object.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `ReadableStream`, `false` otherwise.\n *\n * @private\n */\nfunction canConstructReadableStream() {\n    if (supportStatus === undefined) {\n        // See https://github.com/GoogleChrome/workbox/issues/1473\n        try {\n            new ReadableStream({ start() { } });\n            supportStatus = true;\n        }\n        catch (error) {\n            supportStatus = false;\n        }\n    }\n    return supportStatus;\n}\nexport { canConstructReadableStream };\n"]},"metadata":{},"sourceType":"module"}