{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _get from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";import _getPrototypeOf from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import CategoryQuery from\"/home/marketihor/scandipwa/packages/scandipwa/src/query/Category.query\";import{updateCurrentCategory}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Category/Category.action\";import{updateNoMatch}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/NoMatch/NoMatch.action\";import{showNotification}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";import{QueryDispatcher}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request\";/**\n * Category Dispatcher\n * @class CategoryDispatcher\n * @extends QueryDispatcher\n * @namespace Store/Category/Dispatcher\n */export var _CategoryDispatcher=/*#__PURE__*/function(_Extensible){_inherits(_CategoryDispatcher,_Extensible);var _super=_createSuper(_CategoryDispatcher);function _CategoryDispatcher(){_classCallCheck(this,_CategoryDispatcher);return _super.apply(this,arguments);}_createClass(_CategoryDispatcher,[{key:\"__construct\",value:function __construct(){_get(_getPrototypeOf(_CategoryDispatcher.prototype),\"__construct\",this).call(this,'Category');}},{key:\"onSuccess\",value:function onSuccess(data,dispatch,_ref){var isSearchPage=_ref.isSearchPage;var _data$category=data.category,category=_data$category===void 0?{}:_data$category,id=data.category.id;if(!id&&!isSearchPage){dispatch(updateNoMatch(true));}dispatch(updateCurrentCategory(category));}},{key:\"onError\",value:function onError(error,dispatch,_ref2){var isSearchPage=_ref2.isSearchPage;if(!isSearchPage){dispatch(updateNoMatch(true));dispatch(showNotification('error',__('Error fetching Category!'),error));}else{dispatch(updateCurrentCategory({id:'all-products'}));}}},{key:\"prepareRequest\",value:function prepareRequest(options){return CategoryQuery.getQuery(options);}}]);return _CategoryDispatcher;}(Extensible(QueryDispatcher));Object.defineProperty(_CategoryDispatcher,'name',{value:'CategoryDispatcher'});export var CategoryDispatcher=middleware(_CategoryDispatcher,\"Store/Category/Dispatcher\");export default new CategoryDispatcher();","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/store/Category/Category.dispatcher.js"],"names":["CategoryQuery","updateCurrentCategory","updateNoMatch","showNotification","QueryDispatcher","CategoryDispatcher","data","dispatch","isSearchPage","category","id","error","__","options","getQuery","Object","defineProperty","_CategoryDispatcher","value"],"mappings":"o0BAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAOA,CAAAA,aAAP,8EACA,OAASC,qBAAT,wFACA,OAASC,aAAT,sFACA,OAASC,gBAAT,gGACA,OAASC,eAAT,sEAEA;AACA;AACA;AACA;AACA;AACA,GACA,UAAaC,CAAAA,mBAAb,qSACI,sBAAc,CACV,kFAAkB,UAAlB,EACH,CAHL,yBAKI,mBAAUC,IAAV,CAAgBC,QAAhB,MAA4C,IAAhBC,CAAAA,YAAgB,MAAhBA,YAAgB,oBACIF,IADJ,CAChCG,QADgC,CAChCA,QADgC,yBACrB,EADqB,gBACLC,EADK,CACIJ,IADJ,CACjBG,QADiB,CACLC,EADK,CAGxC,GAAI,CAACA,EAAD,EAAO,CAACF,YAAZ,CAA0B,CACtBD,QAAQ,CAACL,aAAa,CAAC,IAAD,CAAd,CAAR,CACH,CAEDK,QAAQ,CAACN,qBAAqB,CAACQ,QAAD,CAAtB,CAAR,CACH,CAbL,uBAeI,iBAAQE,KAAR,CAAeJ,QAAf,OAA2C,IAAhBC,CAAAA,YAAgB,OAAhBA,YAAgB,CACvC,GAAI,CAACA,YAAL,CAAmB,CACfD,QAAQ,CAACL,aAAa,CAAC,IAAD,CAAd,CAAR,CACAK,QAAQ,CAACJ,gBAAgB,CAAC,OAAD,CAAUS,EAAE,CAAC,0BAAD,CAAZ,CAA0CD,KAA1C,CAAjB,CAAR,CACH,CAHD,IAGO,CACHJ,QAAQ,CAACN,qBAAqB,CAAC,CAAES,EAAE,CAAE,cAAN,CAAD,CAAtB,CAAR,CACH,CACJ,CAtBL,8BAwBI,wBAAeG,OAAf,CAAwB,CACpB,MAAOb,CAAAA,aAAa,CAACc,QAAd,CAAuBD,OAAvB,CAAP,CACH,CA1BL,8DAvBAE,MAAM,CAACC,cAAP,CAAsBC,mBAAtB,CAA2C,MAA3C,CAAmD,CAAEC,KAAK,CAAE,oBAAT,CAAnD,E,0FAoDA,cAAe,IAAIb,CAAAA,kBAAJ,EAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport CategoryQuery from 'Query/Category.query';\nimport { updateCurrentCategory } from 'Store/Category/Category.action';\nimport { updateNoMatch } from 'Store/NoMatch/NoMatch.action';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { QueryDispatcher } from 'Util/Request';\n\n/**\n * Category Dispatcher\n * @class CategoryDispatcher\n * @extends QueryDispatcher\n * @namespace Store/Category/Dispatcher\n */\nexport class CategoryDispatcher extends QueryDispatcher {\n    __construct() {\n        super.__construct('Category');\n    }\n\n    onSuccess(data, dispatch, { isSearchPage }) {\n        const { category = {}, category: { id } } = data;\n\n        if (!id && !isSearchPage) {\n            dispatch(updateNoMatch(true));\n        }\n\n        dispatch(updateCurrentCategory(category));\n    }\n\n    onError(error, dispatch, { isSearchPage }) {\n        if (!isSearchPage) {\n            dispatch(updateNoMatch(true));\n            dispatch(showNotification('error', __('Error fetching Category!'), error));\n        } else {\n            dispatch(updateCurrentCategory({ id: 'all-products' }));\n        }\n    }\n\n    prepareRequest(options) {\n        return CategoryQuery.getQuery(options);\n    }\n}\n\nexport default new CategoryDispatcher();\n"]},"metadata":{},"sourceType":"module"}