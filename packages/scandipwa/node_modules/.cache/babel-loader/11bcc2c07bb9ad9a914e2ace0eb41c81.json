{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component\\\\CartOverlay\\\\CartOverlay.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { CART_EDITING, CART_OVERLAY } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component/Header/Header.config\";\nimport { CUSTOMER_ACCOUNT_OVERLAY_KEY } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component/MyAccountOverlay/MyAccountOverlay.config\";\nimport { CHECKOUT_URL } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\route/Checkout/Checkout.config\";\nimport { changeNavigationState } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Navigation/Navigation.action\";\nimport { TOP_NAVIGATION_TYPE } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Navigation/Navigation.reducer\";\nimport { showNotification } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Notification/Notification.action\";\nimport { hideActiveOverlay, toggleOverlayByKey } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Overlay/Overlay.action\";\nimport { TotalsType } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\type/MiniCart\";\nimport { isSignedIn } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Auth\";\nimport { getCartShippingPrice, getCartShippingSubPrice, getCartTotalSubPrice, hasOutOfStockProductsInCartItems } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Cart\";\nimport history from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/History\";\nimport { appendWithStoreCode } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Url\";\nimport CartOverlay from \"./CartOverlay.component\";\nexport const CartDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Cart/Cart.dispatcher\");\n/** @namespace Component/CartOverlay/Container/mapStateToProps */\n\nexport const mapStateToProps = middleware(function (state) {\n  return {\n    totals: state.CartReducer.cartTotals,\n    device: state.ConfigReducer.device,\n    guest_checkout: state.ConfigReducer.guest_checkout,\n    currencyCode: state.CartReducer.cartTotals.quote_currency_code,\n    activeOverlay: state.OverlayReducer.activeOverlay,\n    cartTotalSubPrice: getCartTotalSubPrice(state),\n    cartShippingPrice: getCartShippingPrice(state),\n    cartShippingSubPrice: getCartShippingSubPrice(state),\n    cartDisplaySettings: state.ConfigReducer.cartDisplayConfig\n  };\n}, \"Component/CartOverlay/Container/mapStateToProps\");\n/** @namespace Component/CartOverlay/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {\n    setNavigationState: function (stateName) {\n      return dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, stateName));\n    },\n    changeHeaderState: function (state) {\n      return dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, state));\n    },\n    updateTotals: function (options) {\n      return CartDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.updateTotals(dispatch, options);\n      });\n    },\n    showOverlay: function (overlayKey) {\n      return dispatch(toggleOverlayByKey(overlayKey));\n    },\n    showNotification: function (type, message) {\n      return dispatch(showNotification(type, message));\n    },\n    hideActiveOverlay: function () {\n      return dispatch(hideActiveOverlay());\n    }\n  };\n}, \"Component/CartOverlay/Container/mapDispatchToProps\");\n/** @namespace Component/CartOverlay/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _CartOverlayContainer extends Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      isEditing: false\n    };\n    this.containerFunctions = {\n      changeHeaderState: this.changeHeaderState.bind(this),\n      handleCheckoutClick: this.handleCheckoutClick.bind(this)\n    };\n\n    this.containerProps = function () {\n      const {\n        totals\n      } = _this.props;\n      return {\n        hasOutOfStockProductsInCart: hasOutOfStockProductsInCartItems(totals.items)\n      };\n    };\n  }\n\n  handleCheckoutClick(e) {\n    const {\n      guest_checkout,\n      showOverlay,\n      showNotification,\n      setNavigationState,\n      hideActiveOverlay,\n      totals\n    } = this.props; // to prevent outside-click handler trigger\n\n    e.nativeEvent.stopImmediatePropagation();\n    const hasOutOfStockProductsInCart = hasOutOfStockProductsInCartItems(totals.items);\n\n    if (hasOutOfStockProductsInCart) {\n      showNotification('error', __('Cannot proceed to checkout. Remove out of stock products first.'));\n      return;\n    } // Guest checkout enabled or user is signed in => proceed to the checkout\n\n\n    if (guest_checkout || isSignedIn()) {\n      hideActiveOverlay();\n      history.push({\n        pathname: appendWithStoreCode(CHECKOUT_URL)\n      });\n      return;\n    } // there is no mobile, as cart overlay is not visible here\n\n\n    showOverlay(CUSTOMER_ACCOUNT_OVERLAY_KEY);\n    showNotification('info', __('Please sign-in to complete checkout!'));\n    setNavigationState({\n      name: CUSTOMER_ACCOUNT_OVERLAY_KEY,\n      title: 'Sign in'\n    });\n  }\n\n  changeHeaderState() {\n    var _this2 = this;\n\n    const {\n      changeHeaderState,\n      totals: {\n        count = 0\n      }\n    } = this.props;\n\n    const title = __('%s Items', count || 0);\n\n    changeHeaderState({\n      name: CART_OVERLAY,\n      title,\n      onEditClick: function () {\n        _this2.setState({\n          isEditing: true\n        });\n\n        changeHeaderState({\n          name: CART_EDITING,\n          title,\n          onOkClick: function () {\n            return _this2.setState({\n              isEditing: false\n            });\n          },\n          onCancelClick: function () {\n            return _this2.setState({\n              isEditing: false\n            });\n          }\n        });\n      },\n      onCloseClick: function () {\n        return _this2.setState({\n          isEditing: false\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, CartOverlay, Object.assign({}, this.props, this.state, this.containerFunctions, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n_CartOverlayContainer.propTypes = {\n  totals: TotalsType.isRequired,\n  guest_checkout: PropTypes.bool,\n  changeHeaderState: PropTypes.func.isRequired,\n  showOverlay: PropTypes.func.isRequired,\n  showNotification: PropTypes.func.isRequired,\n  setNavigationState: PropTypes.func.isRequired,\n  hideActiveOverlay: PropTypes.func.isRequired\n};\n_CartOverlayContainer.defaultProps = {\n  guest_checkout: true\n};\nObject.defineProperty(_CartOverlayContainer, 'name', {\n  value: 'CartOverlayContainer'\n});\n\nexport const CartOverlayContainer = middleware(_CartOverlayContainer, \"Component/CartOverlay/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(CartOverlayContainer);","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/packages/scandipwa/src/component/CartOverlay/CartOverlay.container.js"],"names":["PropTypes","PureComponent","connect","CART_EDITING","CART_OVERLAY","CUSTOMER_ACCOUNT_OVERLAY_KEY","CHECKOUT_URL","changeNavigationState","TOP_NAVIGATION_TYPE","showNotification","hideActiveOverlay","toggleOverlayByKey","TotalsType","isSignedIn","getCartShippingPrice","getCartShippingSubPrice","getCartTotalSubPrice","hasOutOfStockProductsInCartItems","history","appendWithStoreCode","CartOverlay","CartDispatcher","mapStateToProps","state","totals","CartReducer","cartTotals","device","ConfigReducer","guest_checkout","currencyCode","quote_currency_code","activeOverlay","OverlayReducer","cartTotalSubPrice","cartShippingPrice","cartShippingSubPrice","cartDisplaySettings","cartDisplayConfig","mapDispatchToProps","dispatch","setNavigationState","stateName","changeHeaderState","updateTotals","options","then","default","dispatcher","showOverlay","overlayKey","type","message","CartOverlayContainer","isEditing","containerFunctions","bind","handleCheckoutClick","containerProps","props","hasOutOfStockProductsInCart","items","e","nativeEvent","stopImmediatePropagation","__","push","pathname","name","title","count","onEditClick","setState","onOkClick","onCancelClick","onCloseClick","render","propTypes","isRequired","bool","func","defaultProps","Object","defineProperty","_CartOverlayContainer","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { CART_EDITING, CART_OVERLAY } from 'Component/Header/Header.config';\nimport { CUSTOMER_ACCOUNT_OVERLAY_KEY } from 'Component/MyAccountOverlay/MyAccountOverlay.config';\nimport { CHECKOUT_URL } from 'Route/Checkout/Checkout.config';\nimport { changeNavigationState } from 'Store/Navigation/Navigation.action';\nimport { TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { hideActiveOverlay, toggleOverlayByKey } from 'Store/Overlay/Overlay.action';\nimport { TotalsType } from 'Type/MiniCart';\nimport { isSignedIn } from 'Util/Auth';\nimport {\n    getCartShippingPrice,\n    getCartShippingSubPrice,\n    getCartTotalSubPrice,\n    hasOutOfStockProductsInCartItems\n} from 'Util/Cart';\nimport history from 'Util/History';\nimport { appendWithStoreCode } from 'Util/Url';\n\nimport CartOverlay from './CartOverlay.component';\n\nexport const CartDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Cart/Cart.dispatcher'\n);\n\n/** @namespace Component/CartOverlay/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    totals: state.CartReducer.cartTotals,\n    device: state.ConfigReducer.device,\n    guest_checkout: state.ConfigReducer.guest_checkout,\n    currencyCode: state.CartReducer.cartTotals.quote_currency_code,\n    activeOverlay: state.OverlayReducer.activeOverlay,\n    cartTotalSubPrice: getCartTotalSubPrice(state),\n    cartShippingPrice: getCartShippingPrice(state),\n    cartShippingSubPrice: getCartShippingSubPrice(state),\n    cartDisplaySettings: state.ConfigReducer.cartDisplayConfig\n});\n\n/** @namespace Component/CartOverlay/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    setNavigationState: (stateName) => dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, stateName)),\n    changeHeaderState: (state) => dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, state)),\n    updateTotals: (options) => CartDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.updateTotals(dispatch, options)\n    ),\n    showOverlay: (overlayKey) => dispatch(toggleOverlayByKey(overlayKey)),\n    showNotification: (type, message) => dispatch(showNotification(type, message)),\n    hideActiveOverlay: () => dispatch(hideActiveOverlay())\n});\n\n/** @namespace Component/CartOverlay/Container */\nexport class CartOverlayContainer extends PureComponent {\n    static propTypes = {\n        totals: TotalsType.isRequired,\n        guest_checkout: PropTypes.bool,\n        changeHeaderState: PropTypes.func.isRequired,\n        showOverlay: PropTypes.func.isRequired,\n        showNotification: PropTypes.func.isRequired,\n        setNavigationState: PropTypes.func.isRequired,\n        hideActiveOverlay: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        guest_checkout: true\n    };\n\n    state = { isEditing: false };\n\n    containerFunctions = {\n        changeHeaderState: this.changeHeaderState.bind(this),\n        handleCheckoutClick: this.handleCheckoutClick.bind(this)\n    };\n\n    containerProps = () => {\n        const { totals } = this.props;\n\n        return {\n            hasOutOfStockProductsInCart: hasOutOfStockProductsInCartItems(totals.items)\n        };\n    };\n\n    handleCheckoutClick(e) {\n        const {\n            guest_checkout,\n            showOverlay,\n            showNotification,\n            setNavigationState,\n            hideActiveOverlay,\n            totals\n        } = this.props;\n\n        // to prevent outside-click handler trigger\n        e.nativeEvent.stopImmediatePropagation();\n\n        const hasOutOfStockProductsInCart = hasOutOfStockProductsInCartItems(totals.items);\n\n        if (hasOutOfStockProductsInCart) {\n            showNotification('error', __('Cannot proceed to checkout. Remove out of stock products first.'));\n            return;\n        }\n\n        // Guest checkout enabled or user is signed in => proceed to the checkout\n        if (guest_checkout || isSignedIn()) {\n            hideActiveOverlay();\n            history.push({ pathname: appendWithStoreCode(CHECKOUT_URL) });\n            return;\n        }\n\n        // there is no mobile, as cart overlay is not visible here\n        showOverlay(CUSTOMER_ACCOUNT_OVERLAY_KEY);\n        showNotification('info', __('Please sign-in to complete checkout!'));\n        setNavigationState({ name: CUSTOMER_ACCOUNT_OVERLAY_KEY, title: 'Sign in' });\n    }\n\n    changeHeaderState() {\n        const {\n            changeHeaderState,\n            totals: { count = 0 }\n        } = this.props;\n        const title = __('%s Items', count || 0);\n\n        changeHeaderState({\n            name: CART_OVERLAY,\n            title,\n            onEditClick: () => {\n                this.setState({ isEditing: true });\n                changeHeaderState({\n                    name: CART_EDITING,\n                    title,\n                    onOkClick: () => this.setState({ isEditing: false }),\n                    onCancelClick: () => this.setState({ isEditing: false })\n                });\n            },\n            onCloseClick: () => this.setState({ isEditing: false })\n        });\n    }\n\n    render() {\n        return (\n            <CartOverlay\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartOverlayContainer);\n"]},"metadata":{},"sourceType":"module"}