{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import{PureComponent}from'react';import ClickOutside from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/ClickOutside\";import\"./FieldSelect.style\";/** @namespace Component/FieldSelect/Component */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _FieldSelect=/*#__PURE__*/function(_Extensible){_inherits(_FieldSelect,_Extensible);var _super=_createSuper(_FieldSelect);function _FieldSelect(){var _this;_classCallCheck(this,_FieldSelect);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.renderNativeOption=function(option){var id=option.id,value=option.value,disabled=option.disabled,label=option.label;return/*#__PURE__*/_checkBEM(React,\"option\",{key:id,id:id,value:value,disabled:disabled},label);};_this.renderOption=function(option){var id=option.id,label=option.label;var _this$props=_this.props,isExpanded=_this$props.isSelectExpanded,handleSelectListOptionClick=_this$props.handleSelectListOptionClick;return/*#__PURE__*/_checkBEM(React,\"li\",{block:\"FieldSelect\",elem:\"Option\",mods:{isExpanded:isExpanded},key:id/**\n               * Added 'o' as querySelector does not work with\n               * ids, that consist of numbers only\n               */,id:\"o\".concat(id),role:\"menuitem\"// eslint-disable-next-line react/jsx-no-bind\n,onClick:function onClick(){return handleSelectListOptionClick(option);}// eslint-disable-next-line react/jsx-no-bind\n,onKeyPress:function onKeyPress(){return handleSelectListOptionClick(option);},tabIndex:isExpanded?'0':'-1'},label);};return _this;}_createClass(_FieldSelect,[{key:\"renderNativeSelect\",value:function renderNativeSelect(){var _this$props2=this.props,name=_this$props2.name,id=_this$props2.id,onChange=_this$props2.onChange,selectOptions=_this$props2.selectOptions,formRef=_this$props2.formRef,value=_this$props2.value,isDisabled=_this$props2.isDisabled,isExpanded=_this$props2.isSelectExpanded,autocomplete=_this$props2.autocomplete,skipValue=_this$props2.skipValue;return/*#__PURE__*/_checkBEM(React,\"select\",{block:\"FieldSelect\",elem:\"Select\",autoComplete:autocomplete,mods:{isExpanded:isExpanded},ref:formRef,name:name,id:id,disabled:isDisabled,tabIndex:\"0\",value:value||'',onChange:onChange,\"data-skip-value\":skipValue,\"aria-label\":__('Select drop-down')},this.renderPlaceholder(),selectOptions.map(this.renderNativeOption));}},{key:\"renderPlaceholder\",value:function renderPlaceholder(){var placeholder=this.props.placeholder;if(!placeholder){return null;}return/*#__PURE__*/_checkBEM(React,\"option\",{value:\"\",label:placeholder},placeholder);}},{key:\"renderOptions\",value:function renderOptions(){var _this$props3=this.props,selectOptions=_this$props3.selectOptions,isExpanded=_this$props3.isSelectExpanded;return/*#__PURE__*/_checkBEM(React,\"ul\",{block:\"FieldSelect\",elem:\"Options\",role:\"menu\",mods:{isExpanded:isExpanded}},selectOptions.map(this.renderOption));}},{key:\"render\",value:function render(){var _this$props4=this.props,isExpanded=_this$props4.isSelectExpanded,handleSelectExpand=_this$props4.handleSelectExpand,handleSelectListKeyPress=_this$props4.handleSelectListKeyPress,handleSelectExpandedExpand=_this$props4.handleSelectExpandedExpand;return/*#__PURE__*/_checkBEM(React,ClickOutside,{onClick:handleSelectExpandedExpand},/*#__PURE__*/_checkBEM(React,\"div\",{block:\"FieldSelect\",onClick:handleSelectExpand,onKeyPress:handleSelectListKeyPress,role:\"button\",tabIndex:\"0\",\"aria-label\":\"Select drop-down\",\"aria-expanded\":isExpanded},this.renderNativeSelect(),this.renderOptions()));}}]);return _FieldSelect;}(Extensible(PureComponent));_FieldSelect.defaultProps={formRef:function formRef(){},placeholder:'',value:null,isDisabled:false,autocomplete:'off',skipValue:false};Object.defineProperty(_FieldSelect,'name',{value:'FieldSelect'});export var FieldSelect=middleware(_FieldSelect,\"Component/FieldSelect/Component\");export default FieldSelect;","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/FieldSelect/FieldSelect.component.js"],"names":["PureComponent","ClickOutside","FieldSelect","renderNativeOption","option","id","value","disabled","label","renderOption","props","isExpanded","isSelectExpanded","handleSelectListOptionClick","name","onChange","selectOptions","formRef","isDisabled","autocomplete","skipValue","__","renderPlaceholder","map","placeholder","handleSelectExpand","handleSelectListKeyPress","handleSelectExpandedExpand","renderNativeSelect","renderOptions","defaultProps","Object","defineProperty","_FieldSelect"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport ClickOutside from 'Component/ClickOutside';\n\nimport './FieldSelect.style';\n\n/** @namespace Component/FieldSelect/Component */\nexport class FieldSelect extends PureComponent {\n    static propTypes = {\n        handleSelectListOptionClick: PropTypes.func.isRequired,\n        handleSelectExpand: PropTypes.func.isRequired,\n        onChange: PropTypes.func.isRequired,\n        handleSelectListKeyPress: PropTypes.func.isRequired,\n        handleSelectExpandedExpand: PropTypes.func.isRequired,\n        isSelectExpanded: PropTypes.bool.isRequired,\n        selectOptions: PropTypes.arrayOf(PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.number\n            ]),\n            value: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.number\n            ]),\n            disabled: PropTypes.bool,\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n        })).isRequired,\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        formRef: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.shape({ current: PropTypes.instanceOf(Element) })\n        ]),\n        placeholder: PropTypes.string,\n        value: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.bool\n        ]),\n        autocomplete: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.bool\n        ]),\n        isDisabled: PropTypes.bool,\n        skipValue: PropTypes.bool\n    };\n\n    static defaultProps = {\n        formRef: () => {},\n        placeholder: '',\n        value: null,\n        isDisabled: false,\n        autocomplete: 'off',\n        skipValue: false\n    };\n\n    renderNativeSelect() {\n        const {\n            name,\n            id,\n            onChange,\n            selectOptions,\n            formRef,\n            value,\n            isDisabled,\n            isSelectExpanded: isExpanded,\n            autocomplete,\n            skipValue\n        } = this.props;\n\n        return (\n            <select\n              block=\"FieldSelect\"\n              elem=\"Select\"\n              autoComplete={ autocomplete }\n              mods={ { isExpanded } }\n              ref={ formRef }\n              name={ name }\n              id={ id }\n              disabled={ isDisabled }\n              tabIndex=\"0\"\n              value={ value || '' }\n              onChange={ onChange }\n              data-skip-value={ skipValue }\n              aria-label={ __('Select drop-down') }\n            >\n                { this.renderPlaceholder() }\n                { selectOptions.map(this.renderNativeOption) }\n            </select>\n        );\n    }\n\n    renderNativeOption = (option) => {\n        const {\n            id,\n            value,\n            disabled,\n            label\n        } = option;\n\n        return (\n            <option\n              key={ id }\n              id={ id }\n              value={ value }\n              disabled={ disabled }\n            >\n                { label }\n            </option>\n        );\n    };\n\n    renderPlaceholder() {\n        const { placeholder } = this.props;\n\n        if (!placeholder) {\n            return null;\n        }\n\n        return (\n            <option value=\"\" label={ placeholder }>{ placeholder }</option>\n        );\n    }\n\n    renderOption = (option) => {\n        const {\n            id,\n            label\n        } = option;\n\n        const {\n            isSelectExpanded: isExpanded,\n            handleSelectListOptionClick\n        } = this.props;\n\n        return (\n            <li\n              block=\"FieldSelect\"\n              elem=\"Option\"\n              mods={ { isExpanded } }\n              key={ id }\n              /**\n               * Added 'o' as querySelector does not work with\n               * ids, that consist of numbers only\n               */\n              id={ `o${id}` }\n              role=\"menuitem\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={ () => handleSelectListOptionClick(option) }\n              // eslint-disable-next-line react/jsx-no-bind\n              onKeyPress={ () => handleSelectListOptionClick(option) }\n              tabIndex={ isExpanded ? '0' : '-1' }\n            >\n                { label }\n            </li>\n        );\n    };\n\n    renderOptions() {\n        const {\n            selectOptions,\n            isSelectExpanded: isExpanded\n        } = this.props;\n\n        return (\n            <ul\n              block=\"FieldSelect\"\n              elem=\"Options\"\n              role=\"menu\"\n              mods={ { isExpanded } }\n            >\n                { selectOptions.map(this.renderOption) }\n            </ul>\n        );\n    }\n\n    render() {\n        const {\n            isSelectExpanded: isExpanded,\n            handleSelectExpand,\n            handleSelectListKeyPress,\n            handleSelectExpandedExpand\n        } = this.props;\n\n        return (\n            <ClickOutside onClick={ handleSelectExpandedExpand }>\n                <div\n                  block=\"FieldSelect\"\n                  onClick={ handleSelectExpand }\n                  onKeyPress={ handleSelectListKeyPress }\n                  role=\"button\"\n                  tabIndex=\"0\"\n                  aria-label=\"Select drop-down\"\n                  aria-expanded={ isExpanded }\n                >\n                    { this.renderNativeSelect() }\n                    { this.renderOptions() }\n                </div>\n            </ClickOutside>\n        );\n    }\n}\n\nexport default FieldSelect;\n"]},"metadata":{},"sourceType":"module"}