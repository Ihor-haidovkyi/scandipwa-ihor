{"ast":null,"code":"var _jsxFileName = \"/home/marketihor/scandipwa/packages/scandipwa/src/route/ContactPage/ContactPage.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CONTACT_US } from \"/home/marketihor/scandipwa/packages/scandipwa/src/component/Header/Header.config\";\nimport ContactFormQuery from \"/home/marketihor/scandipwa/packages/scandipwa/src/query/ContactForm.query\";\nimport { updateMeta } from \"/home/marketihor/scandipwa/packages/scandipwa/src/store/Meta/Meta.action\";\nimport { changeNavigationState } from \"/home/marketihor/scandipwa/packages/scandipwa/src/store/Navigation/Navigation.action\";\nimport { TOP_NAVIGATION_TYPE } from \"/home/marketihor/scandipwa/packages/scandipwa/src/store/Navigation/Navigation.reducer\";\nimport { showNotification } from \"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";\nimport DataContainer from \"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request/DataContainer\";\nimport ContactPage from \"./ContactPage.component\";\nexport const BreadcrumbsDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Breadcrumbs/Breadcrumbs.dispatcher\");\n/** @namespace Route/ContactPage/Container/mapStateToProps */\n\nexport const mapStateToProps = middleware(function (state) {\n  return {\n    device: state.ConfigReducer.device\n  };\n}, \"Route/ContactPage/Container/mapStateToProps\");\n/** @namespace Route/ContactPage/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {\n    showNotification: function (type, message) {\n      return dispatch(showNotification(type, message));\n    },\n    updateMeta: function (meta) {\n      return dispatch(updateMeta(meta));\n    },\n    setHeaderState: function (stateName) {\n      return dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, stateName));\n    },\n    updateBreadcrumbs: function (breadcrumbs) {\n      BreadcrumbsDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.update(breadcrumbs, dispatch);\n      });\n    }\n  };\n}, \"Route/ContactPage/Container/mapDispatchToProps\");\n/** @namespace Route/ContactPage/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _ContactPageContainer extends Extensible(DataContainer) {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      isEnabled: false\n    };\n  }\n\n  componentDidMount() {\n    this.updateMeta();\n    this.updateBreadcrumbs();\n    this.updateHeader();\n    this.getEnabledState();\n  }\n\n  updateMeta() {\n    const {\n      updateMeta\n    } = this.props;\n    updateMeta({\n      title: __('Contact Us')\n    });\n  }\n\n  updateBreadcrumbs() {\n    const {\n      updateBreadcrumbs\n    } = this.props;\n    const breadcrumbs = [{\n      url: '/contact-us',\n      name: __('Contact Us')\n    }];\n    updateBreadcrumbs(breadcrumbs);\n  }\n\n  updateHeader() {\n    const {\n      setHeaderState\n    } = this.props;\n    setHeaderState({\n      name: CONTACT_US,\n      title: __('Contact Us')\n    });\n  }\n\n  getEnabledState() {\n    var _this = this;\n\n    const {\n      showNotification\n    } = this.props;\n    this.setState({\n      isLoading: true\n    });\n    this.fetchData(ContactFormQuery.getContactPageConfigQuery(), function ({\n      contactPageConfig: {\n        enabled\n      } = {}\n    }) {\n      _this.setState({\n        isEnabled: enabled,\n        isLoading: false\n      });\n    }, function ([e]) {\n      _this.setState({\n        isLoading: false\n      });\n\n      showNotification(e.message);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, ContactPage, Object.assign({}, this.state, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n_ContactPageContainer.propTypes = {\n  updateMeta: PropTypes.func.isRequired,\n  showNotification: PropTypes.func.isRequired\n};\nObject.defineProperty(_ContactPageContainer, 'name', {\n  value: 'ContactPageContainer'\n});\n\nexport const ContactPageContainer = middleware(_ContactPageContainer, \"Route/ContactPage/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPageContainer);","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/route/ContactPage/ContactPage.container.js"],"names":["PropTypes","connect","CONTACT_US","ContactFormQuery","updateMeta","changeNavigationState","TOP_NAVIGATION_TYPE","showNotification","DataContainer","ContactPage","BreadcrumbsDispatcher","mapStateToProps","state","device","ConfigReducer","mapDispatchToProps","dispatch","type","message","meta","setHeaderState","stateName","updateBreadcrumbs","breadcrumbs","then","default","dispatcher","update","ContactPageContainer","isLoading","isEnabled","componentDidMount","updateHeader","getEnabledState","props","title","__","url","name","setState","fetchData","getContactPageConfigQuery","contactPageConfig","enabled","e","render","propTypes","func","isRequired","Object","defineProperty","_ContactPageContainer","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { CONTACT_US } from 'Component/Header/Header.config';\nimport ContactFormQuery from 'Query/ContactForm.query';\nimport { updateMeta } from 'Store/Meta/Meta.action';\nimport { changeNavigationState } from 'Store/Navigation/Navigation.action';\nimport { TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport DataContainer from 'Util/Request/DataContainer';\n\nimport ContactPage from './ContactPage.component';\n\nexport const BreadcrumbsDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Breadcrumbs/Breadcrumbs.dispatcher'\n);\n\n/** @namespace Route/ContactPage/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    device: state.ConfigReducer.device\n});\n\n/** @namespace Route/ContactPage/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showNotification: (type, message) => dispatch(showNotification(type, message)),\n    updateMeta: (meta) => dispatch(updateMeta(meta)),\n    setHeaderState: (stateName) => dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, stateName)),\n    updateBreadcrumbs: (breadcrumbs) => {\n        BreadcrumbsDispatcher.then(\n            ({ default: dispatcher }) => dispatcher.update(breadcrumbs, dispatch)\n        );\n    }\n});\n\n/** @namespace Route/ContactPage/Container */\nexport class ContactPageContainer extends DataContainer {\n    static propTypes = {\n        updateMeta: PropTypes.func.isRequired,\n        showNotification: PropTypes.func.isRequired\n    };\n\n    state = {\n        isLoading: false,\n        isEnabled: false\n    };\n\n    componentDidMount() {\n        this.updateMeta();\n        this.updateBreadcrumbs();\n        this.updateHeader();\n        this.getEnabledState();\n    }\n\n    updateMeta() {\n        const { updateMeta } = this.props;\n        updateMeta({ title: __('Contact Us') });\n    }\n\n    updateBreadcrumbs() {\n        const { updateBreadcrumbs } = this.props;\n        const breadcrumbs = [\n            {\n                url: '/contact-us',\n                name: __('Contact Us')\n            }\n        ];\n\n        updateBreadcrumbs(breadcrumbs);\n    }\n\n    updateHeader() {\n        const { setHeaderState } = this.props;\n\n        setHeaderState({\n            name: CONTACT_US,\n            title: __('Contact Us')\n        });\n    }\n\n    getEnabledState() {\n        const { showNotification } = this.props;\n        this.setState({ isLoading: true });\n\n        this.fetchData(\n            ContactFormQuery.getContactPageConfigQuery(),\n            ({ contactPageConfig: { enabled } = {} }) => {\n                this.setState({ isEnabled: enabled, isLoading: false });\n            },\n            ([e]) => {\n                this.setState({ isLoading: false });\n                showNotification(e.message);\n            }\n        );\n    }\n\n    render() {\n        return (\n            <ContactPage\n              { ...this.state }\n              { ...this.props }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactPageContainer);\n"]},"metadata":{},"sourceType":"module"}