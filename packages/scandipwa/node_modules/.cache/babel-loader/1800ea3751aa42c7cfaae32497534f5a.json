{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/import\"../_version.js\";var supportStatus;/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */function canConstructResponseFromBodyStream(){if(supportStatus===undefined){var testResponse=new Response('');if('body'in testResponse){try{new Response(testResponse.body);supportStatus=true;}catch(error){supportStatus=false;}}supportStatus=false;}return supportStatus;}export{canConstructResponseFromBodyStream};","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js"],"names":["supportStatus","canConstructResponseFromBodyStream","undefined","testResponse","Response","body","error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,uBACA,GAAIA,CAAAA,aAAJ,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,kCAAT,EAA8C,CAC1C,GAAID,aAAa,GAAKE,SAAtB,CAAiC,CAC7B,GAAMC,CAAAA,YAAY,CAAG,GAAIC,CAAAA,QAAJ,CAAa,EAAb,CAArB,CACA,GAAI,QAAUD,CAAAA,YAAd,CAA4B,CACxB,GAAI,CACA,GAAIC,CAAAA,QAAJ,CAAaD,YAAY,CAACE,IAA1B,EACAL,aAAa,CAAG,IAAhB,CACH,CACD,MAAOM,KAAP,CAAc,CACVN,aAAa,CAAG,KAAhB,CACH,CACJ,CACDA,aAAa,CAAG,KAAhB,CACH,CACD,MAAOA,CAAAA,aAAP,CACH,CACD,OAASC,kCAAT","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n"]},"metadata":{},"sourceType":"module"}