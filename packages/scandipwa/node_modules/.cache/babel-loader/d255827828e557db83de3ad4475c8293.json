{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\route\\\\WishlistSharedPage\\\\WishlistSharedPage.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { MyAccountMyWishlistContainer } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component/MyAccountMyWishlist/MyAccountMyWishlist.container\";\nimport WishlistQuery from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\query/Wishlist.query\";\nimport { updateNoMatch } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/NoMatch/NoMatch.action\";\nimport { showNotification } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Notification/Notification.action\";\nimport { MatchType } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\type/Common\";\nimport { getIndexedProduct } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Product\";\nimport { prepareQuery } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Query\";\nimport { executeGet, getErrorMessage } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Request\";\nimport { FIVE_MINUTES_IN_SECONDS } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Request/QueryDispatcher\";\nimport WishlistShared from \"./WishlistSharedPage.component\";\nexport const BreadcrumbsDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Breadcrumbs/Breadcrumbs.dispatcher\");\nexport const WishlistDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Wishlist/Wishlist.dispatcher\");\n/** @namespace Route/WishlistSharedPage/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {\n    clearWishlist: function () {\n      return WishlistDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.clearWishlist(dispatch);\n      });\n    },\n    moveWishlistToCart: function (sharingCode) {\n      return WishlistDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.moveWishlistToCart(dispatch, sharingCode);\n      });\n    },\n    showNotification: function (message) {\n      return dispatch(showNotification('success', message));\n    },\n    showError: function (message) {\n      return dispatch(showNotification('error', message));\n    },\n    showNoMatch: function () {\n      return dispatch(updateNoMatch(true));\n    },\n    updateBreadcrumbs: function (breadcrumbs) {\n      return BreadcrumbsDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.update(breadcrumbs, dispatch);\n      });\n    }\n  };\n}, \"Route/WishlistSharedPage/Container/mapDispatchToProps\");\n/** @namespace Route/WishlistSharedPage/Container/wishlistSharedContainer */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _WishlistSharedPageContainer extends Extensible(MyAccountMyWishlistContainer) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      creatorsName: '',\n      wishlistItems: {},\n      isWishlistLoading: true,\n      isLoading: false\n    };\n\n    this.addAllToCart = function () {\n      const {\n        showError,\n        moveWishlistToCart\n      } = _this.props;\n\n      const sharingCode = _this.getCode();\n\n      _this.setState({\n        isLoading: true\n      });\n\n      return moveWishlistToCart(sharingCode).then(\n      /** @namespace Route/WishlistSharedPage/Container/moveWishlistToCartThen */\n      middleware(function () {\n        return _this.showNotificationAndRemoveLoading('Wishlist moved to cart');\n      }, \"Route/WishlistSharedPage/Container/moveWishlistToCartThen\"),\n      /** @namespace Route/WishlistSharedPage/Container/moveWishlistToCartCatch */\n      middleware(function (error) {\n        return showError(getErrorMessage(error));\n      }, \"Route/WishlistSharedPage/Container/moveWishlistToCartCatch\"));\n    };\n\n    this._getIsWishlistEmpty = function () {\n      const {\n        wishlistItems\n      } = _this.state;\n      return Object.entries(wishlistItems).length <= 0;\n    };\n  }\n\n  componentDidMount() {\n    this.requestWishlist();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      match: {\n        params: {\n          code\n        }\n      }\n    } = prevProps;\n\n    if (this.getCode() !== code) {\n      this.requestWishlist();\n    }\n  }\n\n  setLoading(isLoading = true) {\n    this.setState({\n      isWishlistLoading: isLoading,\n      isLoading\n    });\n  }\n\n  requestWishlist() {\n    var _this2 = this;\n\n    const {\n      showError,\n      showNoMatch,\n      updateBreadcrumbs\n    } = this.props;\n    const code = this.getCode();\n    const query = prepareQuery([WishlistQuery.getWishlistQuery(code)]);\n    updateBreadcrumbs([]);\n    this.setLoading();\n    executeGet(query, 'SharedWishlist', FIVE_MINUTES_IN_SECONDS).then(\n    /** @namespace Route/WishlistSharedPage/Container/requestWishlistExecuteGetThen */\n    middleware(function ({\n      wishlist,\n      wishlist: {\n        items_count,\n        creators_name: creatorsName\n      } = {}\n    }) {\n      if (!items_count) {\n        _this2.setLoading(false);\n\n        return;\n      }\n\n      const wishlistItems = wishlist.items.reduce(function (prev, wishlistItem) {\n        const {\n          id,\n          sku,\n          product,\n          description,\n          qty: quantity\n        } = wishlistItem;\n        const indexedProduct = getIndexedProduct(product);\n        return { ...prev,\n          [id]: {\n            quantity,\n            wishlist: {\n              id,\n              sku,\n              quantity,\n              description\n            },\n            ...indexedProduct\n          }\n        };\n      }, {});\n      updateBreadcrumbs([{\n        name: creatorsName,\n        url: `/wishlist/shared/${code}`\n      }, {\n        name: __('Shared Wishlist'),\n        url: '/'\n      }]);\n\n      _this2.setState({\n        creatorsName,\n        wishlistItems,\n        isLoading: false,\n        isWishlistLoading: false\n      });\n    }, \"Route/WishlistSharedPage/Container/requestWishlistExecuteGetThen\"),\n    /** @namespace Route/WishlistSharedPage/Container/executeGetCatch */\n    middleware(function (error) {\n      showError(getErrorMessage(error));\n      showNoMatch();\n    }, \"Route/WishlistSharedPage/Container/executeGetCatch\"));\n  }\n\n  getCode() {\n    const {\n      match: {\n        params: {\n          code\n        }\n      }\n    } = this.props;\n    return code;\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, WishlistShared, Object.assign({}, this.props, this.state, this.containerProps(), this.containerFunctions(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n/** @namespace Route/WishlistSharedPage/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\n\n_WishlistSharedPageContainer.propTypes = {\n  match: MatchType.isRequired,\n  showError: PropTypes.func.isRequired,\n  showNoMatch: PropTypes.func.isRequired,\n  updateBreadcrumbs: PropTypes.func.isRequired\n};\nObject.defineProperty(_WishlistSharedPageContainer, 'name', {\n  value: 'WishlistSharedPageContainer'\n});\n\nexport const WishlistSharedPageContainer = middleware(_WishlistSharedPageContainer, \"Route/WishlistSharedPage/Container/wishlistSharedContainer\");\nexport const mapStateToProps = middleware(function (state) {\n  return {};\n}, \"Route/WishlistSharedPage/Container/mapStateToProps\");\nexport default connect(mapStateToProps, mapDispatchToProps)(WishlistSharedPageContainer);","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/packages/scandipwa/src/route/WishlistSharedPage/WishlistSharedPage.container.js"],"names":["PropTypes","connect","MyAccountMyWishlistContainer","WishlistQuery","updateNoMatch","showNotification","MatchType","getIndexedProduct","prepareQuery","executeGet","getErrorMessage","FIVE_MINUTES_IN_SECONDS","WishlistShared","BreadcrumbsDispatcher","WishlistDispatcher","mapDispatchToProps","dispatch","clearWishlist","then","default","dispatcher","moveWishlistToCart","sharingCode","message","showError","showNoMatch","updateBreadcrumbs","breadcrumbs","update","WishlistSharedPageContainer","state","creatorsName","wishlistItems","isWishlistLoading","isLoading","addAllToCart","props","getCode","setState","showNotificationAndRemoveLoading","error","_getIsWishlistEmpty","Object","entries","length","componentDidMount","requestWishlist","componentDidUpdate","prevProps","match","params","code","setLoading","query","getWishlistQuery","wishlist","items_count","creators_name","items","reduce","prev","wishlistItem","id","sku","product","description","qty","quantity","indexedProduct","name","url","__","render","containerProps","containerFunctions","propTypes","isRequired","func","defineProperty","_WishlistSharedPageContainer","value","mapStateToProps"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { MyAccountMyWishlistContainer } from 'Component/MyAccountMyWishlist/MyAccountMyWishlist.container';\nimport WishlistQuery from 'Query/Wishlist.query';\nimport { updateNoMatch } from 'Store/NoMatch/NoMatch.action';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { MatchType } from 'Type/Common';\nimport { getIndexedProduct } from 'Util/Product';\nimport { prepareQuery } from 'Util/Query';\nimport { executeGet, getErrorMessage } from 'Util/Request';\nimport { FIVE_MINUTES_IN_SECONDS } from 'Util/Request/QueryDispatcher';\n\nimport WishlistShared from './WishlistSharedPage.component';\n\nexport const BreadcrumbsDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Breadcrumbs/Breadcrumbs.dispatcher'\n);\nexport const WishlistDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Wishlist/Wishlist.dispatcher'\n);\n\n/** @namespace Route/WishlistSharedPage/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    clearWishlist: () => WishlistDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.clearWishlist(dispatch)\n    ),\n    moveWishlistToCart: (sharingCode) => WishlistDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.moveWishlistToCart(dispatch, sharingCode)\n    ),\n    showNotification: (message) => dispatch(showNotification('success', message)),\n    showError: (message) => dispatch(showNotification('error', message)),\n    showNoMatch: () => dispatch(updateNoMatch(true)),\n    updateBreadcrumbs: (breadcrumbs) => BreadcrumbsDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.update(breadcrumbs, dispatch)\n    )\n});\n\n/** @namespace Route/WishlistSharedPage/Container/wishlistSharedContainer */\nexport class WishlistSharedPageContainer extends MyAccountMyWishlistContainer {\n    static propTypes = {\n        match: MatchType.isRequired,\n        showError: PropTypes.func.isRequired,\n        showNoMatch: PropTypes.func.isRequired,\n        updateBreadcrumbs: PropTypes.func.isRequired\n    };\n\n    state = {\n        creatorsName: '',\n        wishlistItems: {},\n        isWishlistLoading: true,\n        isLoading: false\n    };\n\n    componentDidMount() {\n        this.requestWishlist();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { match: { params: { code } } } = prevProps;\n\n        if (this.getCode() !== code) {\n            this.requestWishlist();\n        }\n    }\n\n    setLoading(isLoading = true) {\n        this.setState({ isWishlistLoading: isLoading, isLoading });\n    }\n\n    addAllToCart = () => {\n        const { showError, moveWishlistToCart } = this.props;\n        const sharingCode = this.getCode();\n\n        this.setState({ isLoading: true });\n\n        return moveWishlistToCart(sharingCode).then(\n            /** @namespace Route/WishlistSharedPage/Container/moveWishlistToCartThen */\n            () => this.showNotificationAndRemoveLoading('Wishlist moved to cart'),\n            /** @namespace Route/WishlistSharedPage/Container/moveWishlistToCartCatch */\n            (error) => showError(getErrorMessage(error))\n        );\n    };\n\n    requestWishlist() {\n        const { showError, showNoMatch, updateBreadcrumbs } = this.props;\n\n        const code = this.getCode();\n        const query = prepareQuery([WishlistQuery.getWishlistQuery(code)]);\n\n        updateBreadcrumbs([]);\n        this.setLoading();\n\n        executeGet(query, 'SharedWishlist', FIVE_MINUTES_IN_SECONDS).then(\n            /** @namespace Route/WishlistSharedPage/Container/requestWishlistExecuteGetThen */\n            ({ wishlist, wishlist: { items_count, creators_name: creatorsName } = {} }) => {\n                if (!items_count) {\n                    this.setLoading(false);\n                    return;\n                }\n\n                const wishlistItems = wishlist.items.reduce((prev, wishlistItem) => {\n                    const {\n                        id,\n                        sku,\n                        product,\n                        description,\n                        qty: quantity\n                    } = wishlistItem;\n\n                    const indexedProduct = getIndexedProduct(product);\n\n                    return {\n                        ...prev,\n                        [id]: {\n                            quantity,\n                            wishlist: {\n                                id,\n                                sku,\n                                quantity,\n                                description\n                            },\n                            ...indexedProduct\n                        }\n                    };\n                }, {});\n\n                updateBreadcrumbs([\n                    { name: creatorsName, url: `/wishlist/shared/${code}` },\n                    { name: __('Shared Wishlist'), url: '/' }\n                ]);\n\n                this.setState({\n                    creatorsName,\n                    wishlistItems,\n                    isLoading: false,\n                    isWishlistLoading: false\n                });\n            },\n            /** @namespace Route/WishlistSharedPage/Container/executeGetCatch */\n            (error) => {\n                showError(getErrorMessage(error));\n                showNoMatch();\n            }\n        );\n    }\n\n    _getIsWishlistEmpty = () => {\n        const { wishlistItems } = this.state;\n        return Object.entries(wishlistItems).length <= 0;\n    };\n\n    getCode() {\n        const { match: { params: { code } } } = this.props;\n        return code;\n    }\n\n    render() {\n        return (\n            <WishlistShared\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerProps() }\n              { ...this.containerFunctions() }\n            />\n        );\n    }\n}\n\n/** @namespace Route/WishlistSharedPage/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WishlistSharedPageContainer);\n"]},"metadata":{},"sourceType":"module"}