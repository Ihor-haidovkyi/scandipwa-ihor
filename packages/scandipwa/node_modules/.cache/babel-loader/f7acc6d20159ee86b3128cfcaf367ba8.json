{"ast":null,"code":"var _jsxFileName = \"/home/marketihor/scandipwa/packages/scandipwa/src/component/SliderWidget/SliderWidget.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport SliderQuery from \"/home/marketihor/scandipwa/packages/scandipwa/src/query/Slider.query\";\nimport { showNotification } from \"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";\nimport DataContainer from \"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request/DataContainer\";\nimport SliderWidget from \"./SliderWidget.component\";\n/** @namespace Component/SliderWidget/Container/mapStateToProps */\n\nexport const mapStateToProps = middleware(function (state) {\n  return {\n    device: state.ConfigReducer.device\n  };\n}, \"Component/SliderWidget/Container/mapStateToProps\");\n/** @namespace Component/SliderWidget/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {\n    showNotification: function (type, title, error) {\n      return dispatch(showNotification(type, title, error));\n    }\n  };\n}, \"Component/SliderWidget/Container/mapDispatchToProps\");\n/** @namespace Component/SliderWidget/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _SliderWidgetContainer extends Extensible(DataContainer) {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      slider: {\n        slideSpeed: 0,\n        slides: [{\n          image: '',\n          slide_text: '',\n          isPlaceholder: true\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.requestSlider();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      sliderId\n    } = this.props;\n    const {\n      sliderId: pSliderId\n    } = prevProps;\n\n    if (sliderId !== pSliderId) {\n      this.requestSlider();\n    }\n  }\n\n  requestSlider() {\n    var _this = this;\n\n    const {\n      sliderId,\n      showNotification\n    } = this.props;\n    this.fetchData([SliderQuery.getQuery({\n      sliderId\n    })], function ({\n      slider\n    }) {\n      return _this.setState({\n        slider\n      });\n    }, function (e) {\n      return showNotification('error', __('Error fetching Slider!'), e);\n    });\n  }\n\n  _getGalleryPictures() {\n    const {\n      gallery\n    } = this.state;\n    return gallery;\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, SliderWidget, Object.assign({}, this.props, this.state, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n_SliderWidgetContainer.propTypes = {\n  sliderId: PropTypes.number.isRequired,\n  showNotification: PropTypes.func.isRequired\n};\nObject.defineProperty(_SliderWidgetContainer, 'name', {\n  value: 'SliderWidgetContainer'\n});\n\nexport const SliderWidgetContainer = middleware(_SliderWidgetContainer, \"Component/SliderWidget/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(SliderWidgetContainer);","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/SliderWidget/SliderWidget.container.js"],"names":["PropTypes","connect","SliderQuery","showNotification","DataContainer","SliderWidget","mapStateToProps","state","device","ConfigReducer","mapDispatchToProps","dispatch","type","title","error","SliderWidgetContainer","slider","slideSpeed","slides","image","slide_text","isPlaceholder","componentDidMount","requestSlider","componentDidUpdate","prevProps","sliderId","props","pSliderId","fetchData","getQuery","setState","e","__","_getGalleryPictures","gallery","render","propTypes","number","isRequired","func","Object","defineProperty","_SliderWidgetContainer","value"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP;AACA,SAASC,gBAAT;AACA,OAAOC,aAAP;AAEA,OAAOC,YAAP;AAEA;;AACA,OAAO,MAAMC,eAAe,cAAG,UAACC,KAAD;AAAA,SAAY;AACvCC,IAAAA,MAAM,EAAED,KAAK,CAACE,aAAN,CAAoBD;AADW,GAAZ;AAAA,CAAH,qDAArB;AAIP;;AACA,OAAO,MAAME,kBAAkB,cAAG,UAACC,QAAD;AAAA,SAAe;AAC7CR,IAAAA,gBAAgB,EAAE,UAACS,IAAD,EAAOC,KAAP,EAAcC,KAAd;AAAA,aAAwBH,QAAQ,CAACR,gBAAgB,CAACS,IAAD,EAAOC,KAAP,EAAcC,KAAd,CAAjB,CAAhC;AAAA;AAD2B,GAAf;AAAA,CAAH,wDAAxB;AAIP;;;;AACA,OAAO,MAAMC,sBAAN,mCAAkD;AAAA;AAAA;AAAA,SAMrDR,KANqD,GAM7C;AACJS,MAAAA,MAAM,EAAE;AACJC,QAAAA,UAAU,EAAE,CADR;AAEJC,QAAAA,MAAM,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,UAAU,EAAE,EAAzB;AAA6BC,UAAAA,aAAa,EAAE;AAA5C,SAAD;AAFJ;AADJ,KAN6C;AAAA;;AAarDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,aAAL;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAM;AAAED,MAAAA,QAAQ,EAAEE;AAAZ,QAA0BH,SAAhC;;AAEA,QAAIC,QAAQ,KAAKE,SAAjB,EAA4B;AACxB,WAAKL,aAAL;AACH;AACJ;;AAEDA,EAAAA,aAAa,GAAG;AAAA;;AACZ,UAAM;AAAEG,MAAAA,QAAF;AAAYvB,MAAAA;AAAZ,QAAiC,KAAKwB,KAA5C;AAEA,SAAKE,SAAL,CACI,CAAC3B,WAAW,CAAC4B,QAAZ,CAAqB;AAAEJ,MAAAA;AAAF,KAArB,CAAD,CADJ,EAEI,UAAC;AAAEV,MAAAA;AAAF,KAAD;AAAA,aAAgB,KAAI,CAACe,QAAL,CAAc;AAAEf,QAAAA;AAAF,OAAd,CAAhB;AAAA,KAFJ,EAGI,UAACgB,CAAD;AAAA,aAAO7B,gBAAgB,CAAC,OAAD,EAAU8B,EAAE,CAAC,wBAAD,CAAZ,EAAwCD,CAAxC,CAAvB;AAAA,KAHJ;AAKH;;AAEDE,EAAAA,mBAAmB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAK5B,KAAzB;AACA,WAAO4B,OAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,yCACK,YADL,oBAEW,KAAKT,KAFhB,EAGW,KAAKpB,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;;AAhDoD;AAA5CQ,sB,CACFsB,S,GAAY;AACfX,EAAAA,QAAQ,EAAE1B,SAAS,CAACsC,MAAV,CAAiBC,UADZ;AAEfpC,EAAAA,gBAAgB,EAAEH,SAAS,CAACwC,IAAV,CAAeD;AAFlB,C;AAhCvBE,MAAM,CAACC,cAAP,CAAsBC,sBAAtB,EAA8C,MAA9C,EAAsD;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAtD;;;AAkFA,eAAe3C,OAAO,CAACK,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CK,qBAA7C,CAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport SliderQuery from 'Query/Slider.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport DataContainer from 'Util/Request/DataContainer';\n\nimport SliderWidget from './SliderWidget.component';\n\n/** @namespace Component/SliderWidget/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    device: state.ConfigReducer.device\n});\n\n/** @namespace Component/SliderWidget/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showNotification: (type, title, error) => dispatch(showNotification(type, title, error))\n});\n\n/** @namespace Component/SliderWidget/Container */\nexport class SliderWidgetContainer extends DataContainer {\n    static propTypes = {\n        sliderId: PropTypes.number.isRequired,\n        showNotification: PropTypes.func.isRequired\n    };\n\n    state = {\n        slider: {\n            slideSpeed: 0,\n            slides: [{ image: '', slide_text: '', isPlaceholder: true }]\n        }\n    };\n\n    componentDidMount() {\n        this.requestSlider();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { sliderId } = this.props;\n        const { sliderId: pSliderId } = prevProps;\n\n        if (sliderId !== pSliderId) {\n            this.requestSlider();\n        }\n    }\n\n    requestSlider() {\n        const { sliderId, showNotification } = this.props;\n\n        this.fetchData(\n            [SliderQuery.getQuery({ sliderId })],\n            ({ slider }) => this.setState({ slider }),\n            (e) => showNotification('error', __('Error fetching Slider!'), e)\n        );\n    }\n\n    _getGalleryPictures() {\n        const { gallery } = this.state;\n        return gallery;\n    }\n\n    render() {\n        return (\n            <SliderWidget\n              { ...this.props }\n              { ...this.state }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SliderWidgetContainer);\n"]},"metadata":{},"sourceType":"module"}