{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */export var DEFAULT_ERROR_MESSAGE=__('Something went wrong!');/**\n * Get error message from an array of errors from graphql, or from a regular error object.\n * @param array | object error\n * @param string optional default error message if couldn't get any from the given error\n * @return string message\n * @namespace Util/Request/getErrorMessage\n */export var getErrorMessage=middleware(function(error){var defaultMessage=arguments.length>1&&arguments[1]!==undefined?arguments[1]:DEFAULT_ERROR_MESSAGE;var _ref=(error===null||error===void 0?void 0:error.length)?error[0]:error||{},_ref$message=_ref.message,message=_ref$message===void 0?defaultMessage:_ref$message;return message;},\"Util/Request/getErrorMessage\\n\");","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/util/Request/Error.js"],"names":["DEFAULT_ERROR_MESSAGE","__","getErrorMessage","error","defaultMessage","length","message"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,IAAMA,CAAAA,qBAAqB,CAAGC,EAAE,CAAC,uBAAD,CAAhC,CAEP;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,CAAAA,eAAe,YAAG,SAACC,KAAD,CAAmD,IAA3CC,CAAAA,cAA2C,2DAA1BJ,qBAA0B,UAG1E,CAAAG,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEE,MAAP,EAAgBF,KAAK,CAAC,CAAD,CAArB,CAA2BA,KAAK,EAAI,EAHsC,mBAE1EG,OAF0E,CAE1EA,OAF0E,uBAEhEF,cAFgE,cAK9E,MAAOE,CAAAA,OAAP,CACH,CAN2B,kCAArB","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nexport const DEFAULT_ERROR_MESSAGE = __('Something went wrong!');\n\n/**\n * Get error message from an array of errors from graphql, or from a regular error object.\n * @param array | object error\n * @param string optional default error message if couldn't get any from the given error\n * @return string message\n * @namespace Util/Request/getErrorMessage\n */\nexport const getErrorMessage = (error, defaultMessage = DEFAULT_ERROR_MESSAGE) => {\n    const {\n        message = defaultMessage\n    } = error?.length ? error[0] : error || {};\n\n    return message;\n};\n"]},"metadata":{},"sourceType":"module"}