{"ast":null,"code":"import _asyncToGenerator from \"D:/task/magento2/ScandiPWA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component\\\\Klarna\\\\Klarna.component.js\";\n\n/* eslint-disable no-console */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport Loader from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component/Loader\";\nimport KlarnaQuery from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\query/Klarna.query\";\nimport { isSignedIn } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Auth\";\nimport { getGuestQuoteId } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Cart\";\nimport { fetchMutation } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Request\";\nimport { KLARNA_PAYMENTS_CONTAINER_ID, KLARNA_PAYMENTS_DEVICE_RECOGNITION_ID, KLARNA_SCRIPT_ID } from \"./Klarna.config\";\nimport \"./Klarna.style\";\nexport const CartDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Cart/Cart.dispatcher\");\n/** @namespace Component/Klarna/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _Klarna extends Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      isLoading: true,\n      canShowPaymentSelector: true,\n      paymentIsShown: false\n    };\n\n    this.loadPaymentMethodPayLater = function () {\n      _this.loadPaymentMethod('pay_later');\n    };\n\n    this.loadPaymentMethodPayNow = function () {\n      _this.loadPaymentMethod('pay_now');\n    };\n\n    this.loadPaymentMethodPayOverTime = function () {\n      _this.loadPaymentMethod('pay_over_time');\n    };\n  }\n\n  componentWillUnmount() {\n    const {\n      paymentIsShown\n    } = this.state;\n\n    if (paymentIsShown) {\n      const klarnaDOM = document.getElementById(KLARNA_PAYMENTS_DEVICE_RECOGNITION_ID);\n\n      if (klarnaDOM) {\n        klarnaDOM.remove();\n      }\n    }\n  }\n\n  initiateKlarna() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        showError,\n        setOrderButtonEnableStatus\n      } = _this2.props;\n      const guest_cart_id = getGuestQuoteId();\n\n      try {\n        setOrderButtonEnableStatus(false);\n        const {\n          klarnaToken: client_token\n        } = yield fetchMutation(KlarnaQuery.getCreateKlarnaTokenMutation(!isSignedIn() ? {\n          guest_cart_id\n        } : {}));\n        window.Klarna.Payments.init({\n          client_token\n        });\n        window.Klarna.Payments.load({\n          container: `#${KLARNA_PAYMENTS_CONTAINER_ID}`,\n          payment_method_category: localStorage.getItem('kl_pm')\n        });\n        setOrderButtonEnableStatus(true);\n      } catch (err) {\n        console.groupCollapsed('Suppressed error log:');\n        console.error(err);\n        console.groupEnd();\n        showError(__('Error initializing Klarna payment method.'));\n      }\n\n      _this2.setState({\n        isLoading: false\n      });\n    })();\n  }\n\n  renderScript() {\n    window.klarnaAsyncCallback = this.initiateKlarna.bind(this);\n    const script = document.getElementById(KLARNA_SCRIPT_ID);\n\n    if (script) {\n      script.parentNode.removeChild(script);\n    }\n\n    const klarnaScript = document.createElement('script');\n    klarnaScript.setAttribute('id', KLARNA_SCRIPT_ID);\n    klarnaScript.setAttribute('src', 'https://x.klarnacdn.net/kp/lib/v1/api.js');\n    klarnaScript.async = true;\n    document.head.appendChild(klarnaScript);\n    this.setState({\n      paymentIsShown: true\n    });\n  }\n\n  loadPaymentMethod(method) {\n    this.setState({\n      isLoading: true,\n      canShowPaymentSelector: false\n    });\n    localStorage.setItem('kl_pm', method);\n    this.renderScript();\n  }\n\n  renderPaymentSelector() {\n    const {\n      canShowPaymentSelector\n    } = this.state;\n\n    if (!canShowPaymentSelector) {\n      return null;\n    }\n\n    const {\n      setOrderButtonEnableStatus\n    } = this.props;\n    this.setState({\n      isLoading: false\n    });\n    setOrderButtonEnableStatus(false);\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"Klarna-PaymentSelector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, \"button\", {\n      onClick: this.loadPaymentMethodPayLater,\n      block: \"Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, __('Pay later')), /*#__PURE__*/_checkBEM(React, \"button\", {\n      onClick: this.loadPaymentMethodPayNow,\n      block: \"Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, __('Pay now')), /*#__PURE__*/_checkBEM(React, \"button\", {\n      onClick: this.loadPaymentMethodPayOverTime,\n      block: \"Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, __('Pay over time')));\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"Klarna\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/_checkBEM(React, Loader, {\n      isLoading: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }), this.renderPaymentSelector(), /*#__PURE__*/_checkBEM(React, \"div\", {\n      id: KLARNA_PAYMENTS_CONTAINER_ID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n_Klarna.propTypes = {\n  showError: PropTypes.func.isRequired,\n  setOrderButtonEnableStatus: PropTypes.func.isRequired\n};\nObject.defineProperty(_Klarna, 'name', {\n  value: 'Klarna'\n});\n\nexport const Klarna = middleware(_Klarna, \"Component/Klarna/Component\");\nexport default Klarna;","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/packages/scandipwa/src/component/Klarna/Klarna.component.js"],"names":["PropTypes","PureComponent","Loader","KlarnaQuery","isSignedIn","getGuestQuoteId","fetchMutation","KLARNA_PAYMENTS_CONTAINER_ID","KLARNA_PAYMENTS_DEVICE_RECOGNITION_ID","KLARNA_SCRIPT_ID","CartDispatcher","Klarna","state","isLoading","canShowPaymentSelector","paymentIsShown","loadPaymentMethodPayLater","loadPaymentMethod","loadPaymentMethodPayNow","loadPaymentMethodPayOverTime","componentWillUnmount","klarnaDOM","document","getElementById","remove","initiateKlarna","showError","setOrderButtonEnableStatus","props","guest_cart_id","klarnaToken","client_token","getCreateKlarnaTokenMutation","window","Payments","init","load","container","payment_method_category","localStorage","getItem","err","console","groupCollapsed","error","groupEnd","__","setState","renderScript","klarnaAsyncCallback","bind","script","parentNode","removeChild","klarnaScript","createElement","setAttribute","async","head","appendChild","method","setItem","renderPaymentSelector","render","propTypes","func","isRequired","Object","defineProperty","_Klarna","value"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport Loader from 'Component/Loader';\nimport KlarnaQuery from 'Query/Klarna.query';\nimport { isSignedIn } from 'Util/Auth';\nimport { getGuestQuoteId } from 'Util/Cart';\nimport { fetchMutation } from 'Util/Request';\n\nimport {\n    KLARNA_PAYMENTS_CONTAINER_ID,\n    KLARNA_PAYMENTS_DEVICE_RECOGNITION_ID,\n    KLARNA_SCRIPT_ID\n} from './Klarna.config';\n\nimport './Klarna.style';\n\nexport const CartDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Cart/Cart.dispatcher'\n);\n\n/** @namespace Component/Klarna/Component */\nexport class Klarna extends PureComponent {\n    static propTypes = {\n        showError: PropTypes.func.isRequired,\n        setOrderButtonEnableStatus: PropTypes.func.isRequired\n    };\n\n    state = {\n        isLoading: true,\n        canShowPaymentSelector: true,\n        paymentIsShown: false\n    };\n\n    componentWillUnmount() {\n        const { paymentIsShown } = this.state;\n\n        if (paymentIsShown) {\n            const klarnaDOM = document.getElementById(KLARNA_PAYMENTS_DEVICE_RECOGNITION_ID);\n\n            if (klarnaDOM) {\n                klarnaDOM.remove();\n            }\n        }\n    }\n\n    async initiateKlarna() {\n        const { showError, setOrderButtonEnableStatus } = this.props;\n        const guest_cart_id = getGuestQuoteId();\n\n        try {\n            setOrderButtonEnableStatus(false);\n\n            const { klarnaToken: client_token } = await fetchMutation(\n                KlarnaQuery.getCreateKlarnaTokenMutation(\n                    !isSignedIn() ? { guest_cart_id } : {}\n                )\n            );\n\n            window.Klarna.Payments.init({ client_token });\n            window.Klarna.Payments.load({\n                container: `#${KLARNA_PAYMENTS_CONTAINER_ID}`,\n                payment_method_category: localStorage.getItem('kl_pm')\n            });\n\n            setOrderButtonEnableStatus(true);\n        } catch (err) {\n            console.groupCollapsed('Suppressed error log:');\n            console.error(err);\n            console.groupEnd();\n\n            showError(__('Error initializing Klarna payment method.'));\n        }\n\n        this.setState({ isLoading: false });\n    }\n\n    renderScript() {\n        window.klarnaAsyncCallback = this.initiateKlarna.bind(this);\n        const script = document.getElementById(KLARNA_SCRIPT_ID);\n\n        if (script) {\n            script.parentNode.removeChild(script);\n        }\n\n        const klarnaScript = document.createElement('script');\n        klarnaScript.setAttribute('id', KLARNA_SCRIPT_ID);\n        klarnaScript.setAttribute('src', 'https://x.klarnacdn.net/kp/lib/v1/api.js');\n        klarnaScript.async = true;\n        document.head.appendChild(klarnaScript);\n\n        this.setState({ paymentIsShown: true });\n    }\n\n    loadPaymentMethod(method) {\n        this.setState({\n            isLoading: true,\n            canShowPaymentSelector: false\n        });\n        localStorage.setItem('kl_pm', method);\n        this.renderScript();\n    }\n\n    loadPaymentMethodPayLater = () => {\n        this.loadPaymentMethod('pay_later');\n    };\n\n    loadPaymentMethodPayNow = () => {\n        this.loadPaymentMethod('pay_now');\n    };\n\n    loadPaymentMethodPayOverTime = () => {\n        this.loadPaymentMethod('pay_over_time');\n    };\n\n    renderPaymentSelector() {\n        const { canShowPaymentSelector } = this.state;\n\n        if (!canShowPaymentSelector) {\n            return null;\n        }\n\n        const { setOrderButtonEnableStatus } = this.props;\n\n        this.setState({ isLoading: false });\n        setOrderButtonEnableStatus(false);\n\n        return (\n            <div block=\"Klarna-PaymentSelector\">\n                <button\n                  onClick={ this.loadPaymentMethodPayLater }\n                  block=\"Button\"\n                >\n                    { __('Pay later') }\n                </button>\n\n                <button\n                  onClick={ this.loadPaymentMethodPayNow }\n                  block=\"Button\"\n                >\n                    { __('Pay now') }\n                </button>\n\n                <button\n                  onClick={ this.loadPaymentMethodPayOverTime }\n                  block=\"Button\"\n                >\n                    { __('Pay over time') }\n                </button>\n            </div>\n        );\n    }\n\n    render() {\n        const { isLoading } = this.state;\n\n        return (\n            <div block=\"Klarna\">\n                <Loader isLoading={ isLoading } />\n                { this.renderPaymentSelector() }\n                <div id={ KLARNA_PAYMENTS_CONTAINER_ID } />\n            </div>\n        );\n    }\n}\n\nexport default Klarna;\n"]},"metadata":{},"sourceType":"module"}