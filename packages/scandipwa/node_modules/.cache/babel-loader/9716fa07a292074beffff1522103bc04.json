{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import{PureComponent}from'react';import{connect}from'react-redux';import{ADDRESS_POPUP_ID,DELETE_ADDRESS,EDIT_ADDRESS}from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountAddressPopup/MyAccountAddressPopup.config\";import{showPopup}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Popup/Popup.action\";import{addressType}from\"/home/marketihor/scandipwa/packages/scandipwa/src/type/Account\";import{countriesType}from\"/home/marketihor/scandipwa/packages/scandipwa/src/type/Config\";import MyAccountAddressTable from\"./MyAccountAddressTable.component\";/** @namespace Component/MyAccountAddressTable/Container/mapStateToProps */export var mapStateToProps=middleware(function(state){return{countries:state.ConfigReducer.countries};},\"Component/MyAccountAddressTable/Container/mapStateToProps\");/** @namespace Component/MyAccountAddressTable/Container/mapDispatchToProps */export var mapDispatchToProps=middleware(function(dispatch){return{showEditPopup:function showEditPopup(payload){return dispatch(showPopup(ADDRESS_POPUP_ID,payload));}};},\"Component/MyAccountAddressTable/Container/mapDispatchToProps\");/** @namespace Component/MyAccountAddressTable/Container */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _MyAccountAddressTableContainer=/*#__PURE__*/function(_Extensible){_inherits(_MyAccountAddressTableContainer,_Extensible);var _super=_createSuper(_MyAccountAddressTableContainer);function _MyAccountAddressTableContainer(){var _this;_classCallCheck(this,_MyAccountAddressTableContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.containerFunctions={getFormatedRegion:_this.getFormatedRegion.bind(_assertThisInitialized(_this)),onEditClick:_this.onEditClick.bind(_assertThisInitialized(_this)),onDeleteClick:_this.onDeleteClick.bind(_assertThisInitialized(_this))};return _this;}_createClass(_MyAccountAddressTableContainer,[{key:\"onEditClick\",value:function onEditClick(){var _this$props=this.props,showEditPopup=_this$props.showEditPopup,address=_this$props.address;showEditPopup({action:EDIT_ADDRESS,title:__('Edit address'),address:address});}},{key:\"onDeleteClick\",value:function onDeleteClick(){var _this$props2=this.props,showEditPopup=_this$props2.showEditPopup,address=_this$props2.address;showEditPopup({action:DELETE_ADDRESS,title:__('Confirm delete'),address:address});}},{key:\"getFormatedRegion\",value:function getFormatedRegion(address){var countries=this.props.countries;var country_id=address.country_id,regionData=address.region;if(!regionData){return{};}var region_id=regionData.region_id,region=regionData.region;var country=countries.find(function(_ref){var id=_ref.id;return id===country_id;});if(!country){return{};}var label=country.label,available_regions=country.available_regions;var regions=available_regions||[];var _ref2=regions.find(function(_ref3){var id=_ref3.id;return id===region_id;})||{name:region},name=_ref2.name;return{country:label,region:name};}},{key:\"render\",value:function render(){return/*#__PURE__*/_checkBEM(React,MyAccountAddressTable,Object.assign({},this.props,this.containerFunctions));}}]);return _MyAccountAddressTableContainer;}(Extensible(PureComponent));Object.defineProperty(_MyAccountAddressTableContainer,'name',{value:'MyAccountAddressTableContainer'});export var MyAccountAddressTableContainer=middleware(_MyAccountAddressTableContainer,\"Component/MyAccountAddressTable/Container\");export default connect(mapStateToProps,mapDispatchToProps)(MyAccountAddressTableContainer);","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountAddressTable/MyAccountAddressTable.container.js"],"names":["PureComponent","connect","ADDRESS_POPUP_ID","DELETE_ADDRESS","EDIT_ADDRESS","showPopup","addressType","countriesType","MyAccountAddressTable","mapStateToProps","state","countries","ConfigReducer","mapDispatchToProps","dispatch","showEditPopup","payload","MyAccountAddressTableContainer","containerFunctions","getFormatedRegion","bind","onEditClick","onDeleteClick","props","address","action","title","__","country_id","regionData","region","region_id","country","find","id","label","available_regions","regions","name","Object","defineProperty","_MyAccountAddressTableContainer","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    ADDRESS_POPUP_ID,\n    DELETE_ADDRESS,\n    EDIT_ADDRESS\n} from 'Component/MyAccountAddressPopup/MyAccountAddressPopup.config';\nimport { showPopup } from 'Store/Popup/Popup.action';\nimport { addressType } from 'Type/Account';\nimport { countriesType } from 'Type/Config';\n\nimport MyAccountAddressTable from './MyAccountAddressTable.component';\n\n/** @namespace Component/MyAccountAddressTable/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    countries: state.ConfigReducer.countries\n});\n\n/** @namespace Component/MyAccountAddressTable/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showEditPopup: (payload) => dispatch(showPopup(ADDRESS_POPUP_ID, payload))\n});\n\n/** @namespace Component/MyAccountAddressTable/Container */\nexport class MyAccountAddressTableContainer extends PureComponent {\n    static propTypes = {\n        address: addressType.isRequired,\n        showEditPopup: PropTypes.func.isRequired,\n        countries: countriesType.isRequired\n    };\n\n    containerFunctions = {\n        getFormatedRegion: this.getFormatedRegion.bind(this),\n        onEditClick: this.onEditClick.bind(this),\n        onDeleteClick: this.onDeleteClick.bind(this)\n    };\n\n    onEditClick() {\n        const { showEditPopup, address } = this.props;\n\n        showEditPopup({\n            action: EDIT_ADDRESS,\n            title: __('Edit address'),\n            address\n        });\n    }\n\n    onDeleteClick() {\n        const { showEditPopup, address } = this.props;\n\n        showEditPopup({\n            action: DELETE_ADDRESS,\n            title: __('Confirm delete'),\n            address\n        });\n    }\n\n    getFormatedRegion(address) {\n        const { countries } = this.props;\n        const { country_id, region: regionData } = address;\n\n        if (!regionData) {\n            return {};\n        }\n\n        const { region_id, region } = regionData;\n        const country = countries.find(({ id }) => id === country_id);\n\n        if (!country) {\n            return {};\n        }\n\n        const { label, available_regions } = country;\n        const regions = available_regions || [];\n        const { name } = regions.find(({ id }) => id === region_id) || { name: region };\n\n        return {\n            country: label,\n            region: name\n        };\n    }\n\n    render() {\n        return (\n            <MyAccountAddressTable\n              { ...this.props }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountAddressTableContainer);\n"]},"metadata":{},"sourceType":"module"}