{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import{PureComponent}from'react';import{connect}from'react-redux';import MyAccountQuery from\"/home/marketihor/scandipwa/packages/scandipwa/src/query/MyAccount.query\";import{updateCustomerDetails}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/MyAccount/MyAccount.action\";import{CUSTOMER}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/MyAccount/MyAccount.dispatcher\";import{goToPreviousNavigationState}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Navigation/Navigation.action\";import{TOP_NAVIGATION_TYPE}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Navigation/Navigation.reducer\";import{showNotification}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";import{hideActiveOverlay as _hideActiveOverlay}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Overlay/Overlay.action\";import{isSignedIn}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Auth\";import BrowserDatabase from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/BrowserDatabase\";import{fetchMutation,getErrorMessage}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request\";import{ONE_MONTH_IN_SECONDS}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request/QueryDispatcher\";import MyAccountCustomerPopup from\"./MyAccountCustomerPopup.component\";import{CUSTOMER_POPUP_ID}from\"./MyAccountCustomerPopup.config\";/** @namespace Component/MyAccountCustomerPopup/Container/mapStateToProps */export var mapStateToProps=middleware(function(state){return{payload:state.PopupReducer.popupPayload[CUSTOMER_POPUP_ID]||{}};},\"Component/MyAccountCustomerPopup/Container/mapStateToProps\");/** @namespace Component/MyAccountCustomerPopup/Container/mapDispatchToProps */export var mapDispatchToProps=middleware(function(dispatch){return{updateCustomer:function updateCustomer(customer){return dispatch(updateCustomerDetails(customer));},goToPreviousHeaderState:function goToPreviousHeaderState(){return dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE));},showErrorNotification:function showErrorNotification(error){return dispatch(showNotification('error',getErrorMessage(error)));},showSuccessNotification:function showSuccessNotification(message){return dispatch(showNotification('success',message));},hideActiveOverlay:function hideActiveOverlay(){return dispatch(_hideActiveOverlay());}};},\"Component/MyAccountCustomerPopup/Container/mapDispatchToProps\");/** @namespace Component/MyAccountCustomerPopup/Container */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _MyAccountCustomerPopupContainer=/*#__PURE__*/function(_Extensible){_inherits(_MyAccountCustomerPopupContainer,_Extensible);var _super=_createSuper(_MyAccountCustomerPopupContainer);function _MyAccountCustomerPopupContainer(){var _this;_classCallCheck(this,_MyAccountCustomerPopupContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isLoading:false};_this.containerFunctions={onCustomerSave:_this.onCustomerSave.bind(_assertThisInitialized(_this)),onPasswordChange:_this.onPasswordChange.bind(_assertThisInitialized(_this))};_this.onError=function(error){var showErrorNotification=_this.props.showErrorNotification;_this.setState({isLoading:false});showErrorNotification(error);};return _this;}_createClass(_MyAccountCustomerPopupContainer,[{key:\"onCustomerSave\",value:function onCustomerSave(customer){var _this2=this;var _this$props=this.props,updateCustomer=_this$props.updateCustomer,hideActiveOverlay=_this$props.hideActiveOverlay,goToPreviousHeaderState=_this$props.goToPreviousHeaderState;if(!isSignedIn()){return null;}var mutation=MyAccountQuery.getUpdateInformationMutation(customer);this.setState({isLoading:true});return fetchMutation(mutation).then(/** @namespace Component/MyAccountCustomerPopup/Container/onCustomerSaveFetchMutationThen */middleware(function(_ref){var customer=_ref.updateCustomer.customer;BrowserDatabase.setItem(customer,CUSTOMER,ONE_MONTH_IN_SECONDS);updateCustomer(customer);_this2.setState({isLoading:false},function(){hideActiveOverlay();goToPreviousHeaderState();});},\"Component/MyAccountCustomerPopup/Container/onCustomerSaveFetchMutationThen\"),this.onError);}},{key:\"onPasswordChange\",value:function onPasswordChange(passwords){var _this3=this;var _this$props2=this.props,showSuccessNotification=_this$props2.showSuccessNotification,hideActiveOverlay=_this$props2.hideActiveOverlay,goToPreviousHeaderState=_this$props2.goToPreviousHeaderState;if(!isSignedIn()){return null;}var mutation=MyAccountQuery.getChangeCustomerPasswordMutation(passwords);this.setState({isLoading:true});return fetchMutation(mutation).then(/** @namespace Component/MyAccountCustomerPopup/Container/onPasswordChangeFetchMutationThen */middleware(function(){showSuccessNotification(__('Your password was successfully updated!'));_this3.setState({isLoading:false},function(){hideActiveOverlay();goToPreviousHeaderState();});},\"Component/MyAccountCustomerPopup/Container/onPasswordChangeFetchMutationThen\"),this.onError);}},{key:\"render\",value:function render(){return/*#__PURE__*/_checkBEM(React,MyAccountCustomerPopup,Object.assign({},this.props,this.state,this.containerFunctions));}}]);return _MyAccountCustomerPopupContainer;}(Extensible(PureComponent));Object.defineProperty(_MyAccountCustomerPopupContainer,'name',{value:'MyAccountCustomerPopupContainer'});export var MyAccountCustomerPopupContainer=middleware(_MyAccountCustomerPopupContainer,\"Component/MyAccountCustomerPopup/Container\");export default connect(mapStateToProps,mapDispatchToProps)(MyAccountCustomerPopupContainer);","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountCustomerPopup/MyAccountCustomerPopup.container.js"],"names":["PureComponent","connect","MyAccountQuery","updateCustomerDetails","CUSTOMER","goToPreviousNavigationState","TOP_NAVIGATION_TYPE","showNotification","hideActiveOverlay","isSignedIn","BrowserDatabase","fetchMutation","getErrorMessage","ONE_MONTH_IN_SECONDS","MyAccountCustomerPopup","CUSTOMER_POPUP_ID","mapStateToProps","state","payload","PopupReducer","popupPayload","mapDispatchToProps","dispatch","updateCustomer","customer","goToPreviousHeaderState","showErrorNotification","error","showSuccessNotification","message","MyAccountCustomerPopupContainer","isLoading","containerFunctions","onCustomerSave","bind","onPasswordChange","onError","props","setState","mutation","getUpdateInformationMutation","then","setItem","passwords","getChangeCustomerPasswordMutation","__","Object","defineProperty","_MyAccountCustomerPopupContainer","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport MyAccountQuery from 'Query/MyAccount.query';\nimport { updateCustomerDetails } from 'Store/MyAccount/MyAccount.action';\nimport { CUSTOMER } from 'Store/MyAccount/MyAccount.dispatcher';\nimport { goToPreviousNavigationState } from 'Store/Navigation/Navigation.action';\nimport { TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { hideActiveOverlay } from 'Store/Overlay/Overlay.action';\nimport { isSignedIn } from 'Util/Auth';\nimport BrowserDatabase from 'Util/BrowserDatabase';\nimport { fetchMutation, getErrorMessage } from 'Util/Request';\nimport { ONE_MONTH_IN_SECONDS } from 'Util/Request/QueryDispatcher';\n\nimport MyAccountCustomerPopup from './MyAccountCustomerPopup.component';\nimport { CUSTOMER_POPUP_ID } from './MyAccountCustomerPopup.config';\n\n/** @namespace Component/MyAccountCustomerPopup/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    payload: state.PopupReducer.popupPayload[CUSTOMER_POPUP_ID] || {}\n});\n\n/** @namespace Component/MyAccountCustomerPopup/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    updateCustomer: (customer) => dispatch(updateCustomerDetails(customer)),\n    goToPreviousHeaderState: () => dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE)),\n    showErrorNotification: (error) => dispatch(showNotification('error', getErrorMessage(error))),\n    showSuccessNotification: (message) => dispatch(showNotification('success', message)),\n    hideActiveOverlay: () => dispatch(hideActiveOverlay())\n});\n\n/** @namespace Component/MyAccountCustomerPopup/Container */\nexport class MyAccountCustomerPopupContainer extends PureComponent {\n    static propTypes = {\n        updateCustomer: PropTypes.func.isRequired,\n        showErrorNotification: PropTypes.func.isRequired,\n        goToPreviousHeaderState: PropTypes.func.isRequired,\n        hideActiveOverlay: PropTypes.func.isRequired,\n        showSuccessNotification: PropTypes.func.isRequired\n    };\n\n    state = {\n        isLoading: false\n    };\n\n    containerFunctions = {\n        onCustomerSave: this.onCustomerSave.bind(this),\n        onPasswordChange: this.onPasswordChange.bind(this)\n    };\n\n    onError = (error) => {\n        const { showErrorNotification } = this.props;\n        this.setState({ isLoading: false });\n        showErrorNotification(error);\n    };\n\n    onCustomerSave(customer) {\n        const {\n            updateCustomer,\n            hideActiveOverlay,\n            goToPreviousHeaderState\n        } = this.props;\n\n        if (!isSignedIn()) {\n            return null;\n        }\n\n        const mutation = MyAccountQuery.getUpdateInformationMutation(customer);\n        this.setState({ isLoading: true });\n\n        return fetchMutation(mutation).then(\n            /** @namespace Component/MyAccountCustomerPopup/Container/onCustomerSaveFetchMutationThen */\n            ({ updateCustomer: { customer } }) => {\n                BrowserDatabase.setItem(customer, CUSTOMER, ONE_MONTH_IN_SECONDS);\n                updateCustomer(customer);\n                this.setState({ isLoading: false }, () => {\n                    hideActiveOverlay();\n                    goToPreviousHeaderState();\n                });\n            },\n            this.onError\n        );\n    }\n\n    onPasswordChange(passwords) {\n        const {\n            showSuccessNotification,\n            hideActiveOverlay,\n            goToPreviousHeaderState\n        } = this.props;\n\n        if (!isSignedIn()) {\n            return null;\n        }\n\n        const mutation = MyAccountQuery.getChangeCustomerPasswordMutation(passwords);\n        this.setState({ isLoading: true });\n\n        return fetchMutation(mutation).then(\n            /** @namespace Component/MyAccountCustomerPopup/Container/onPasswordChangeFetchMutationThen */\n            () => {\n                showSuccessNotification(__('Your password was successfully updated!'));\n                this.setState({ isLoading: false }, () => {\n                    hideActiveOverlay();\n                    goToPreviousHeaderState();\n                });\n            },\n            this.onError\n        );\n    }\n\n    render() {\n        return (\n            <MyAccountCustomerPopup\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountCustomerPopupContainer);\n"]},"metadata":{},"sourceType":"module"}