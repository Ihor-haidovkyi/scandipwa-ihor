{"ast":null,"code":"import _objectSpread from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import{Field}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Query\";/**\n * MyAccount Mutations\n * @class MyAccount\n * @namespace Query/MyAccount\n */export var _MyAccountQuery=/*#__PURE__*/function(_Extensible){_inherits(_MyAccountQuery,_Extensible);var _super=_createSuper(_MyAccountQuery);function _MyAccountQuery(){_classCallCheck(this,_MyAccountQuery);return _super.apply(this,arguments);}_createClass(_MyAccountQuery,[{key:\"getResetPasswordMutation\",value:/**\n     * Get ResetPassword mutation\n     * @param {{token: String, password: String, password_confirmation: String}} options A object containing different aspects of query, each item can be omitted\n     * @return {Field}\n     * @memberof MyAccount\n     */function getResetPasswordMutation(options){var token=options.token,password=options.password,password_confirmation=options.password_confirmation;return new Field('s_resetPassword').addArgument('token','String!',token).addArgument('password','String!',password).addArgument('password_confirmation','String!',password_confirmation).addField('status');}/**\n     * Get SignIn mutation\n     * @param {{email: String, password: String}} options A object containing different aspects of query, each item can be omitted\n     * @return {Field}\n     * @memberof MyAccount\n     */},{key:\"getSignInMutation\",value:function getSignInMutation(options){var email=options.email,password=options.password;return new Field('generateCustomerToken').addArgument('email','String!',email).addArgument('password','String!',password).addField('token');}},{key:\"getUpdateInformationMutation\",value:function getUpdateInformationMutation(options){return new Field('updateCustomer').addArgument('input','CustomerInput!',options).addField(this._getCustomerField());}},{key:\"getChangeCustomerPasswordMutation\",value:function getChangeCustomerPasswordMutation(options){var currentPassword=options.currentPassword,newPassword=options.newPassword;return new Field('changeCustomerPassword').addArgument('currentPassword','String!',currentPassword).addArgument('newPassword','String!',newPassword).addField('id').addField('email');}},{key:\"getCreateAddressMutation\",value:function getCreateAddressMutation(options){return new Field('createCustomerAddress').addArgument('input','CustomerAddressInput!',options).addFieldList(this._getAddressFields());}},{key:\"getDeleteAddressMutation\",value:function getDeleteAddressMutation(id){return new Field('deleteCustomerAddress').addArgument('id','Int!',id);}},{key:\"getUpdateAddressMutation\",value:function getUpdateAddressMutation(id,options){return new Field('updateCustomerAddress').addArgument('id','Int!',id).addArgument('input','CustomerAddressInput!',options).addFieldList(this._getAddressFields());}},{key:\"getCreateAccountMutation\",value:function getCreateAccountMutation(options){var customer=options.customer,password=options.password;return new Field('createCustomer').addArgument('input','CustomerInput!',_objectSpread(_objectSpread({},customer),{},{password:password})).addField(this._getCustomerField());}},{key:\"getConfirmAccountMutation\",value:function getConfirmAccountMutation(options){var key=options.key,email=options.email,password=options.password;return new Field('confirmCustomerEmail').addArgument('key','String!',key).addArgument('email','String!',email).addArgument('password','String!',password).addFieldList(this._getConfirmAccountFields());}},{key:\"getCustomerQuery\",value:function getCustomerQuery(){return this._getCustomerField();}},{key:\"_getConfirmAccountFields\",value:function _getConfirmAccountFields(){return['status','token',this._getCustomerField()];}},{key:\"_getCustomerField\",value:function _getCustomerField(){return new Field('customer').addFieldList(this._getCustomerFields());}},{key:\"_getCustomerFields\",value:function _getCustomerFields(){return['created_at','confirmation_required','group_id','prefix','firstname','middlename','lastname','suffix','email','default_billing','default_shipping','dob','taxvat','id','is_subscribed',this._getAddressesField()];}},{key:\"_getAddressesField\",value:function _getAddressesField(){return new Field('addresses').addFieldList(this._getAddressFields());}},{key:\"_getRegionField\",value:function _getRegionField(){return new Field('region').addFieldList(this._getRegionFields());}},{key:\"_getRegionFields\",value:function _getRegionFields(){return['region_code','region','region_id'];}},{key:\"_getAddressFields\",value:function _getAddressFields(){return['id','customer_id','country_id','street','telephone','postcode','city','firstname','lastname','middlename','prefix','suffix','default_shipping','default_billing','vat_id',this._getRegionField()];}/**\n     * Get ForgotPassword mutation\n     * @param {{email: String}} options\n     * @returns {Field}\n     * @memberof MyAccount\n     */},{key:\"getForgotPasswordMutation\",value:function getForgotPasswordMutation(options){var email=options.email;return new Field('forgotPassword').addArgument('email','String!',email).addField('status');}}]);return _MyAccountQuery;}(Extensible());Object.defineProperty(_MyAccountQuery,'name',{value:'MyAccountQuery'});export var MyAccountQuery=middleware(_MyAccountQuery,\"Query/MyAccount\");export default new MyAccountQuery();","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/query/MyAccount.query.js"],"names":["Field","MyAccountQuery","options","token","password","password_confirmation","addArgument","addField","email","_getCustomerField","currentPassword","newPassword","addFieldList","_getAddressFields","id","customer","key","_getConfirmAccountFields","_getCustomerFields","_getAddressesField","_getRegionFields","_getRegionField","Object","defineProperty","_MyAccountQuery","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { Field } from 'Util/Query';\n\n/**\n * MyAccount Mutations\n * @class MyAccount\n * @namespace Query/MyAccount\n */\nexport class MyAccountQuery {\n    /**\n     * Get ResetPassword mutation\n     * @param {{token: String, password: String, password_confirmation: String}} options A object containing different aspects of query, each item can be omitted\n     * @return {Field}\n     * @memberof MyAccount\n     */\n    getResetPasswordMutation(options) {\n        const { token, password, password_confirmation } = options;\n\n        return new Field('s_resetPassword')\n            .addArgument('token', 'String!', token)\n            .addArgument('password', 'String!', password)\n            .addArgument('password_confirmation', 'String!', password_confirmation)\n            .addField('status');\n    }\n\n    /**\n     * Get SignIn mutation\n     * @param {{email: String, password: String}} options A object containing different aspects of query, each item can be omitted\n     * @return {Field}\n     * @memberof MyAccount\n     */\n    getSignInMutation(options) {\n        const { email, password } = options;\n\n        return new Field('generateCustomerToken')\n            .addArgument('email', 'String!', email)\n            .addArgument('password', 'String!', password)\n            .addField('token');\n    }\n\n    getUpdateInformationMutation(options) {\n        return new Field('updateCustomer')\n            .addArgument('input', 'CustomerInput!', options)\n            .addField(this._getCustomerField());\n    }\n\n    getChangeCustomerPasswordMutation(options) {\n        const { currentPassword, newPassword } = options;\n\n        return new Field('changeCustomerPassword')\n            .addArgument('currentPassword', 'String!', currentPassword)\n            .addArgument('newPassword', 'String!', newPassword)\n            .addField('id')\n            .addField('email');\n    }\n\n    getCreateAddressMutation(options) {\n        return new Field('createCustomerAddress')\n            .addArgument('input', 'CustomerAddressInput!', options)\n            .addFieldList(this._getAddressFields());\n    }\n\n    getDeleteAddressMutation(id) {\n        return new Field('deleteCustomerAddress')\n            .addArgument('id', 'Int!', id);\n    }\n\n    getUpdateAddressMutation(id, options) {\n        return new Field('updateCustomerAddress')\n            .addArgument('id', 'Int!', id)\n            .addArgument('input', 'CustomerAddressInput!', options)\n            .addFieldList(this._getAddressFields());\n    }\n\n    getCreateAccountMutation(options) {\n        const { customer, password } = options;\n\n        return new Field('createCustomer')\n            .addArgument('input', 'CustomerInput!', { ...customer, password })\n            .addField(this._getCustomerField());\n    }\n\n    getConfirmAccountMutation(options) {\n        const { key, email, password } = options;\n\n        return new Field('confirmCustomerEmail')\n            .addArgument('key', 'String!', key)\n            .addArgument('email', 'String!', email)\n            .addArgument('password', 'String!', password)\n            .addFieldList(this._getConfirmAccountFields());\n    }\n\n    getCustomerQuery() {\n        return this._getCustomerField();\n    }\n\n    _getConfirmAccountFields() {\n        return [\n            'status',\n            'token',\n            this._getCustomerField()\n        ];\n    }\n\n    _getCustomerField() {\n        return new Field('customer')\n            .addFieldList(this._getCustomerFields());\n    }\n\n    _getCustomerFields() {\n        return [\n            'created_at',\n            'confirmation_required',\n            'group_id',\n            'prefix',\n            'firstname',\n            'middlename',\n            'lastname',\n            'suffix',\n            'email',\n            'default_billing',\n            'default_shipping',\n            'dob',\n            'taxvat',\n            'id',\n            'is_subscribed',\n            this._getAddressesField()\n        ];\n    }\n\n    _getAddressesField() {\n        return new Field('addresses')\n            .addFieldList(this._getAddressFields());\n    }\n\n    _getRegionField() {\n        return new Field('region')\n            .addFieldList(this._getRegionFields());\n    }\n\n    _getRegionFields() {\n        return [\n            'region_code',\n            'region',\n            'region_id'\n        ];\n    }\n\n    _getAddressFields() {\n        return [\n            'id',\n            'customer_id',\n            'country_id',\n            'street',\n            'telephone',\n            'postcode',\n            'city',\n            'firstname',\n            'lastname',\n            'middlename',\n            'prefix',\n            'suffix',\n            'default_shipping',\n            'default_billing',\n            'vat_id',\n            this._getRegionField()\n        ];\n    }\n\n    /**\n     * Get ForgotPassword mutation\n     * @param {{email: String}} options\n     * @returns {Field}\n     * @memberof MyAccount\n     */\n    getForgotPasswordMutation(options) {\n        const { email } = options;\n\n        return new Field('forgotPassword')\n            .addArgument('email', 'String!', email)\n            .addField('status');\n    }\n}\n\nexport default new MyAccountQuery();\n"]},"metadata":{},"sourceType":"module"}