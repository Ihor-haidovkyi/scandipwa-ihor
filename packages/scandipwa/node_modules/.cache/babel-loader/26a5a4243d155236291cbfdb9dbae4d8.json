{"ast":null,"code":"/**\n * Helpers.\n */var s=1000;var m=s*60;var h=m*60;var d=h*24;var y=d*365.25;/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */module.exports=function(val,options){options=options||{};var type=typeof val;if(type==='string'&&val.length>0){return parse(val);}else if(type==='number'&&isNaN(val)===false){return options.long?fmtLong(val):fmtShort(val);}throw new Error('val is not a non-empty string or a valid number. val='+JSON.stringify(val));};/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */function parse(str){str=String(str);if(str.length>100){return;}var match=/^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);if(!match){return;}var n=parseFloat(match[1]);var type=(match[2]||'ms').toLowerCase();switch(type){case'years':case'year':case'yrs':case'yr':case'y':return n*y;case'days':case'day':case'd':return n*d;case'hours':case'hour':case'hrs':case'hr':case'h':return n*h;case'minutes':case'minute':case'mins':case'min':case'm':return n*m;case'seconds':case'second':case'secs':case'sec':case's':return n*s;case'milliseconds':case'millisecond':case'msecs':case'msec':case'ms':return n;default:return undefined;}}/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */function fmtShort(ms){if(ms>=d){return Math.round(ms/d)+'d';}if(ms>=h){return Math.round(ms/h)+'h';}if(ms>=m){return Math.round(ms/m)+'m';}if(ms>=s){return Math.round(ms/s)+'s';}return ms+'ms';}/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */function fmtLong(ms){return plural(ms,d,'day')||plural(ms,h,'hour')||plural(ms,m,'minute')||plural(ms,s,'second')||ms+' ms';}/**\n * Pluralization helper.\n */function plural(ms,n,name){if(ms<n){return;}if(ms<n*1.5){return Math.floor(ms/n)+' '+name;}return Math.ceil(ms/n)+' '+name+'s';}","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/ms/index.js"],"names":["s","m","h","d","y","module","exports","val","options","type","length","parse","isNaN","long","fmtLong","fmtShort","Error","JSON","stringify","str","String","match","exec","n","parseFloat","toLowerCase","undefined","ms","Math","round","plural","name","floor","ceil"],"mappings":"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","sourcesContent":["/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n"]},"metadata":{},"sourceType":"module"}