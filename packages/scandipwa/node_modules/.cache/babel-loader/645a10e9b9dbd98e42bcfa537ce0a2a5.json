{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import{PureComponent}from'react';import{connect}from'react-redux';import{Redirect}from'react-router';import{toggleBreadcrumbs as _toggleBreadcrumbs}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Breadcrumbs/Breadcrumbs.action\";import{updateMeta as _updateMeta}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Meta/Meta.action\";import{showNotification as _showNotification}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";import{LocationType}from\"/home/marketihor/scandipwa/packages/scandipwa/src/type/Common\";import{getQueryParam}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Url\";import PasswordChangePage from\"./PasswordChangePage.component\";import{STATUS_PASSWORD_MISS_MATCH,STATUS_PASSWORD_UPDATED}from\"./PasswordChangePage.config\";export var MyAccountDispatcher=import(/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\"/home/marketihor/scandipwa/packages/scandipwa/src/store/MyAccount/MyAccount.dispatcher\");/** @namespace Route/PasswordChangePage/Container/mapStateToProps */export var mapStateToProps=middleware(function(state){return{passwordResetStatus:state.MyAccountReducer.passwordResetStatus,passwordResetMessage:state.MyAccountReducer.passwordResetMessage};},\"Route/PasswordChangePage/Container/mapStateToProps\");/** @namespace Route/PasswordChangePage/Container/mapDispatchToProps */export var mapDispatchToProps=middleware(function(dispatch){return{updateMeta:function updateMeta(meta){return dispatch(_updateMeta(meta));},toggleBreadcrumbs:function toggleBreadcrumbs(visibility){return dispatch(_toggleBreadcrumbs(visibility));},resetPassword:function resetPassword(options){MyAccountDispatcher.then(function(_ref){var dispatcher=_ref.default;return dispatcher.resetPassword(options,dispatch);});},updateCustomerPasswordResetStatus:function updateCustomerPasswordResetStatus(options){MyAccountDispatcher.then(function(_ref2){var dispatcher=_ref2.default;return dispatcher.updateCustomerPasswordResetStatus(options,dispatch);});},showNotification:function showNotification(type,message){dispatch(_showNotification(type,message));}};},\"Route/PasswordChangePage/Container/mapDispatchToProps\");/** @namespace Route/PasswordChangePage/Container */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _PasswordChangePageContainer=/*#__PURE__*/function(_Extensible){_inherits(_PasswordChangePageContainer,_Extensible);var _super=_createSuper(_PasswordChangePageContainer);function _PasswordChangePageContainer(){var _this;_classCallCheck(this,_PasswordChangePageContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={passwordResetStatus:'',isLoading:false};_this.containerFunctions={onPasswordAttempt:_this.onPasswordAttempt.bind(_assertThisInitialized(_this)),onPasswordSuccess:_this.onPasswordSuccess.bind(_assertThisInitialized(_this)),onError:_this.onError.bind(_assertThisInitialized(_this))};_this.containerProps=function(){var isLoading=_this.state.isLoading;return{isLoading:isLoading};};return _this;}_createClass(_PasswordChangePageContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.updateMeta();this.toggleBreadcrumbs(false);}},{key:\"onPasswordSuccess\",value:function onPasswordSuccess(fields){var _this$props=this.props,resetPassword=_this$props.resetPassword,location=_this$props.location;var password=fields.password,password_confirmation=fields.password_confirmation;var token=getQueryParam('token',location);resetPassword({token:token,password:password,password_confirmation:password_confirmation});}},{key:\"onPasswordAttempt\",value:function onPasswordAttempt(){this.setState({isLoading:true});}},{key:\"onError\",value:function onError(){this.setState({isLoading:false});}},{key:\"updateMeta\",value:function updateMeta(){var updateMeta=this.props.updateMeta;updateMeta({title:__('Password Change Page')});}},{key:\"toggleBreadcrumbs\",value:function toggleBreadcrumbs(visibility){var toggleBreadcrumbs=this.props.toggleBreadcrumbs;toggleBreadcrumbs(visibility);}},{key:\"render\",value:function render(){var passwordResetStatus=this.state.passwordResetStatus;if(passwordResetStatus===STATUS_PASSWORD_UPDATED){return/*#__PURE__*/_checkBEM(React,Redirect,{to:\"/\"});}return/*#__PURE__*/_checkBEM(React,PasswordChangePage,Object.assign({},this.containerProps(),this.containerFunctions));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props){var passwordResetStatus=props.passwordResetStatus,passwordResetMessage=props.passwordResetMessage,showNotification=props.showNotification;var stateToBeUpdated={};if(passwordResetStatus){stateToBeUpdated.isLoading=false;stateToBeUpdated.passwordResetStatus=passwordResetStatus;switch(passwordResetStatus){case STATUS_PASSWORD_UPDATED:showNotification('success',__('Password has been successfully updated!'));break;case STATUS_PASSWORD_MISS_MATCH:showNotification('info',__('Your password and confirmation password do not match.'));break;default:showNotification('error',passwordResetMessage);}}return Object.keys(stateToBeUpdated).length?stateToBeUpdated:null;}}]);return _PasswordChangePageContainer;}(Extensible(PureComponent));Object.defineProperty(_PasswordChangePageContainer,'name',{value:'PasswordChangePageContainer'});export var PasswordChangePageContainer=middleware(_PasswordChangePageContainer,\"Route/PasswordChangePage/Container\");export default connect(mapStateToProps,mapDispatchToProps)(PasswordChangePageContainer);","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/route/PasswordChangePage/PasswordChangePage.container.js"],"names":["PureComponent","connect","Redirect","toggleBreadcrumbs","updateMeta","showNotification","LocationType","getQueryParam","PasswordChangePage","STATUS_PASSWORD_MISS_MATCH","STATUS_PASSWORD_UPDATED","MyAccountDispatcher","mapStateToProps","state","passwordResetStatus","MyAccountReducer","passwordResetMessage","mapDispatchToProps","dispatch","meta","visibility","resetPassword","options","then","dispatcher","default","updateCustomerPasswordResetStatus","type","message","PasswordChangePageContainer","isLoading","containerFunctions","onPasswordAttempt","bind","onPasswordSuccess","onError","containerProps","fields","props","location","password","password_confirmation","token","setState","title","__","stateToBeUpdated","Object","keys","length","defineProperty","_PasswordChangePageContainer","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\n\nimport { toggleBreadcrumbs } from 'Store/Breadcrumbs/Breadcrumbs.action';\nimport { updateMeta } from 'Store/Meta/Meta.action';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { LocationType } from 'Type/Common';\nimport { getQueryParam } from 'Util/Url';\n\nimport PasswordChangePage from './PasswordChangePage.component';\nimport {\n    STATUS_PASSWORD_MISS_MATCH,\n    STATUS_PASSWORD_UPDATED\n} from './PasswordChangePage.config';\n\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Route/PasswordChangePage/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    passwordResetStatus: state.MyAccountReducer.passwordResetStatus,\n    passwordResetMessage: state.MyAccountReducer.passwordResetMessage\n});\n\n/** @namespace Route/PasswordChangePage/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    updateMeta: (meta) => dispatch(updateMeta(meta)),\n    toggleBreadcrumbs: (visibility) => dispatch(toggleBreadcrumbs(visibility)),\n    resetPassword(options) {\n        MyAccountDispatcher.then(\n            ({ default: dispatcher }) => dispatcher.resetPassword(options, dispatch)\n        );\n    },\n    updateCustomerPasswordResetStatus(options) {\n        MyAccountDispatcher.then(\n            ({ default: dispatcher }) => dispatcher.updateCustomerPasswordResetStatus(options, dispatch)\n        );\n    },\n    showNotification(type, message) {\n        dispatch(showNotification(type, message));\n    }\n});\n\n/** @namespace Route/PasswordChangePage/Container */\nexport class PasswordChangePageContainer extends PureComponent {\n    static propTypes = {\n        updateMeta: PropTypes.func.isRequired,\n        toggleBreadcrumbs: PropTypes.func.isRequired,\n        showNotification: PropTypes.func.isRequired,\n        passwordResetStatus: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.bool\n        ]).isRequired,\n        passwordResetMessage: PropTypes.string.isRequired,\n        resetPassword: PropTypes.func.isRequired,\n        location: LocationType.isRequired\n    };\n\n    state = {\n        passwordResetStatus: '',\n        isLoading: false\n    };\n\n    static getDerivedStateFromProps(props) {\n        const {\n            passwordResetStatus,\n            passwordResetMessage,\n            showNotification\n        } = props;\n        const stateToBeUpdated = {};\n\n        if (passwordResetStatus) {\n            stateToBeUpdated.isLoading = false;\n            stateToBeUpdated.passwordResetStatus = passwordResetStatus;\n\n            switch (passwordResetStatus) {\n            case STATUS_PASSWORD_UPDATED:\n                showNotification('success', __('Password has been successfully updated!'));\n                break;\n            case STATUS_PASSWORD_MISS_MATCH:\n                showNotification('info', __('Your password and confirmation password do not match.'));\n                break;\n            default:\n                showNotification('error', passwordResetMessage);\n            }\n        }\n\n        return Object.keys(stateToBeUpdated).length ? stateToBeUpdated : null;\n    }\n\n    containerFunctions = {\n        onPasswordAttempt: this.onPasswordAttempt.bind(this),\n        onPasswordSuccess: this.onPasswordSuccess.bind(this),\n        onError: this.onError.bind(this)\n    };\n\n    componentDidMount() {\n        this.updateMeta();\n        this.toggleBreadcrumbs(false);\n    }\n\n    containerProps = () => {\n        const { isLoading } = this.state;\n        return { isLoading };\n    };\n\n    onPasswordSuccess(fields) {\n        const { resetPassword, location } = this.props;\n        const { password, password_confirmation } = fields;\n        const token = getQueryParam('token', location);\n\n        resetPassword({ token, password, password_confirmation });\n    }\n\n    onPasswordAttempt() {\n        this.setState({ isLoading: true });\n    }\n\n    onError() {\n        this.setState({ isLoading: false });\n    }\n\n    updateMeta() {\n        const { updateMeta } = this.props;\n        updateMeta({ title: __('Password Change Page') });\n    }\n\n    toggleBreadcrumbs(visibility) {\n        const { toggleBreadcrumbs } = this.props;\n        toggleBreadcrumbs(visibility);\n    }\n\n    render() {\n        const { passwordResetStatus } = this.state;\n\n        if (passwordResetStatus === STATUS_PASSWORD_UPDATED) {\n            return <Redirect to=\"/\" />;\n        }\n\n        return (\n            <PasswordChangePage\n              { ...this.containerProps() }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PasswordChangePageContainer);\n"]},"metadata":{},"sourceType":"module"}