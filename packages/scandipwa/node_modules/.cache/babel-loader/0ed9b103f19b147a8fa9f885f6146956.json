{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import NewsletterSubscriptionQuery from\"/home/marketihor/scandipwa/packages/scandipwa/src/query/NewsletterSubscription.query\";import{showNotification}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";import{fetchMutation,getErrorMessage}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request\";export var NOT_ACTIVE='NOT_ACTIVE';/**\n * Product Cart Dispatcher\n * @class NewsletterSubscriptionDispatcher\n * @namespace Store/NewsletterSubscription/Dispatcher\n */export var _NewsletterSubscriptionDispatcher=/*#__PURE__*/function(_Extensible){_inherits(_NewsletterSubscriptionDispatcher,_Extensible);var _super=_createSuper(_NewsletterSubscriptionDispatcher);function _NewsletterSubscriptionDispatcher(){_classCallCheck(this,_NewsletterSubscriptionDispatcher);return _super.apply(this,arguments);}_createClass(_NewsletterSubscriptionDispatcher,[{key:\"subscribeToNewsletter\",value:function subscribeToNewsletter(dispatch,email){return fetchMutation(NewsletterSubscriptionQuery.getSubscribeToNewsletterMutation(email)).then(/** @namespace Store/NewsletterSubscription/Dispatcher/fetchMutationThen */middleware(function(_ref){var status=_ref.subscribeEmailToNewsletter.status;// `NOT_ACTIVE` response status corresponds to `newsletter_subscription_confirm` magento setting\nvar message=status===NOT_ACTIVE?__('Confirmation request has been sent.'):__('Thank you for your subscription.');return dispatch(showNotification('success',message));},\"Store/NewsletterSubscription/Dispatcher/fetchMutationThen\"),/** @namespace Store/NewsletterSubscription/Dispatcher/fetchMutationSuccess */middleware(function(error){return dispatch(showNotification('error',getErrorMessage(error)));},\"Store/NewsletterSubscription/Dispatcher/fetchMutationSuccess\"));}}]);return _NewsletterSubscriptionDispatcher;}(Extensible());Object.defineProperty(_NewsletterSubscriptionDispatcher,'name',{value:'NewsletterSubscriptionDispatcher'});export var NewsletterSubscriptionDispatcher=middleware(_NewsletterSubscriptionDispatcher,\"Store/NewsletterSubscription/Dispatcher\");export default new NewsletterSubscriptionDispatcher();","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/store/NewsletterSubscription/NewsletterSubscription.dispatcher.js"],"names":["NewsletterSubscriptionQuery","showNotification","fetchMutation","getErrorMessage","NOT_ACTIVE","NewsletterSubscriptionDispatcher","dispatch","email","getSubscribeToNewsletterMutation","then","status","subscribeEmailToNewsletter","message","__","error","Object","defineProperty","_NewsletterSubscriptionDispatcher","value"],"mappings":"ojBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAOA,CAAAA,2BAAP,4FACA,OAASC,gBAAT,gGACA,OAASC,aAAT,CAAwBC,eAAxB,sEAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,YAAnB,CAEP;AACA;AACA;AACA;AACA,GACA,UAAaC,CAAAA,iCAAb,qXACI,+BAAsBC,QAAtB,CAAgCC,KAAhC,CAAuC,CACnC,MAAOL,CAAAA,aAAa,CAACF,2BAA2B,CAACQ,gCAA5B,CAA6DD,KAA7D,CAAD,CAAb,CAAmFE,IAAnF,CACH,2EADG,WAEH,cAAgD,IAAfC,CAAAA,MAAe,MAA7CC,0BAA6C,CAAfD,MAAe,CAC5C;AACA,GAAME,CAAAA,OAAO,CAAGF,MAAM,GAAKN,UAAX,CACVS,EAAE,CAAC,qCAAD,CADQ,CAEVA,EAAE,CAAC,kCAAD,CAFR,CAIA,MAAOP,CAAAA,QAAQ,CAACL,gBAAgB,CAAC,SAAD,CAAYW,OAAZ,CAAjB,CAAf,CACH,CATE,8DAUH,8EAVG,WAWH,SAACE,KAAD,QAAWR,CAAAA,QAAQ,CAACL,gBAAgB,CAAC,OAAD,CAAUE,eAAe,CAACW,KAAD,CAAzB,CAAjB,CAAnB,EAXG,iEAAP,CAaH,CAfL,6DAtBAC,MAAM,CAACC,cAAP,CAAsBC,iCAAtB,CAAyD,MAAzD,CAAiE,CAAEC,KAAK,CAAE,kCAAT,CAAjE,E,oIAwCA,cAAe,IAAIb,CAAAA,gCAAJ,EAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport NewsletterSubscriptionQuery from 'Query/NewsletterSubscription.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { fetchMutation, getErrorMessage } from 'Util/Request';\n\nexport const NOT_ACTIVE = 'NOT_ACTIVE';\n\n/**\n * Product Cart Dispatcher\n * @class NewsletterSubscriptionDispatcher\n * @namespace Store/NewsletterSubscription/Dispatcher\n */\nexport class NewsletterSubscriptionDispatcher {\n    subscribeToNewsletter(dispatch, email) {\n        return fetchMutation(NewsletterSubscriptionQuery.getSubscribeToNewsletterMutation(email)).then(\n            /** @namespace Store/NewsletterSubscription/Dispatcher/fetchMutationThen */\n            ({ subscribeEmailToNewsletter: { status } }) => {\n                // `NOT_ACTIVE` response status corresponds to `newsletter_subscription_confirm` magento setting\n                const message = status === NOT_ACTIVE\n                    ? __('Confirmation request has been sent.')\n                    : __('Thank you for your subscription.');\n\n                return dispatch(showNotification('success', message));\n            },\n            /** @namespace Store/NewsletterSubscription/Dispatcher/fetchMutationSuccess */\n            (error) => dispatch(showNotification('error', getErrorMessage(error)))\n        );\n    }\n}\n\nexport default new NewsletterSubscriptionDispatcher();\n"]},"metadata":{},"sourceType":"module"}