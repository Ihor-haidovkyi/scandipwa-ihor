{"ast":null,"code":"import _objectWithoutProperties from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _objectSpread from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _get from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";import _getPrototypeOf from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import PropTypes from'prop-types';import FormPortal from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/FormPortal\";import MyAccountAddressForm from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountAddressForm/MyAccountAddressForm.component\";import{getCityAndRegionFromZipcode}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Address\";import{debounce}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request\";import{UPDATE_STATE_FREQUENCY}from\"./CheckoutAddressForm.config\";/** @namespace Component/CheckoutAddressForm/Component */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _CheckoutAddressForm=/*#__PURE__*/function(_Extensible){_inherits(_CheckoutAddressForm,_Extensible);var _super=_createSuper(_CheckoutAddressForm);function _CheckoutAddressForm(){var _this;_classCallCheck(this,_CheckoutAddressForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onChange=debounce(function(key,value){_this.setState(function(){return _defineProperty({},key,value);});},UPDATE_STATE_FREQUENCY);_this.onZipcodeChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var value,_this$state,countryId,availableRegions,_yield$getCityAndRegi,_yield$getCityAndRegi2,city,regionCode,_availableRegions$fin,regionId;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:value=e.currentTarget.value;_this$state=_this.state,countryId=_this$state.countryId,availableRegions=_this$state.availableRegions;_context.next=4;return getCityAndRegionFromZipcode(countryId,value);case 4:_yield$getCityAndRegi=_context.sent;_yield$getCityAndRegi2=_slicedToArray(_yield$getCityAndRegi,2);city=_yield$getCityAndRegi2[0];regionCode=_yield$getCityAndRegi2[1];if(city){_this.setState({city:city});}if(availableRegions.length>0&&regionCode){_availableRegions$fin=availableRegions.find(function(r){return r.code.toUpperCase()===regionCode.toUpperCase();}),regionId=_availableRegions$fin.id;if(regionId){_this.setState({regionId:regionId});}}case 10:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}();return _this;}_createClass(_CheckoutAddressForm,[{key:\"__construct\",value:function __construct(props){_get(_getPrototypeOf(_CheckoutAddressForm.prototype),\"__construct\",this).call(this,props);var _this$props$address$r=this.props.address.region;_this$props$address$r=_this$props$address$r===void 0?{}:_this$props$address$r;var _this$props$address$r2=_this$props$address$r.region,region=_this$props$address$r2===void 0?'':_this$props$address$r2;// TODO: get from region data\nthis.state=_objectSpread(_objectSpread({},this.state),{},{region:region,city:'',postcode:''});this.estimateShipping();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(_,prevState){var _this$state2=this.state,countryId=_this$state2.countryId,regionId=_this$state2.regionId,region=_this$state2.region,city=_this$state2.city,postcode=_this$state2.postcode;var prevCountryId=prevState.countryId,prevRegionId=prevState.regionId,prevRegion=prevState.region,prevCity=prevState.city,prevpostcode=prevState.postcode;if(countryId!==prevCountryId||regionId!==prevRegionId||city!==prevCity||region!==prevRegion||postcode!==prevpostcode){this.estimateShipping();}}},{key:\"estimateShipping\",value:function estimateShipping(){var onShippingEstimationFieldsChange=this.props.onShippingEstimationFieldsChange;var _this$state3=this.state,countryId=_this$state3.countryId,regionId=_this$state3.regionId,region=_this$state3.region,city=_this$state3.city,postcode=_this$state3.postcode;onShippingEstimationFieldsChange({country_id:countryId,region_id:regionId,region:region,city:city,postcode:postcode});}},{key:\"fieldMap\",get:function get(){var _this2=this;// country_id, region, region_id, city - are used for shipping estimation\nvar shippingFields=this.props.shippingFields;var _get2=_get(_getPrototypeOf(_CheckoutAddressForm.prototype),\"fieldMap\",this),default_billing=_get2.default_billing,default_shipping=_get2.default_shipping,city=_get2.city,postcode=_get2.postcode,vat_id=_get2.vat_id,fieldMap=_objectWithoutProperties(_get2,[\"default_billing\",\"default_shipping\",\"city\",\"postcode\",\"vat_id\"]);fieldMap.city=_objectSpread(_objectSpread({},city),{},{onChange:function onChange(value){return _this2.onChange('city',value);},value:this.state.city});fieldMap.postcode=_objectSpread(_objectSpread({},postcode),{},{onChange:function onChange(value){return _this2.onChange('postcode',value);},onBlur:this.onZipcodeChange});// since object doesn't maintain the order of it's properties\n// and last modified property goes to the end of the property list,\n// move vat_id after postcode\nif(vat_id){fieldMap.vat_id=vat_id;}// Preserve values from global state\nObject.entries(fieldMap).forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,1),key=_ref4[0];if(Object.hasOwnProperty.call(shippingFields,key)){fieldMap[key].value=shippingFields[key];// Handle setting dropdown/input depending on regions existance\nif(key==='country_id'){_this2.handleInitialCountryValue(shippingFields[key]);}}});return fieldMap;}},{key:\"handleInitialCountryValue\",value:function handleInitialCountryValue(initialValue){if(this.handledInitialCountry){return;}this.onCountryChange(initialValue);this.handledInitialCountry=true;}},{key:\"getRegionFields\",value:function getRegionFields(){var _this3=this;var regionDisplayAll=this.props.regionDisplayAll;var regionFieldData=_get(_getPrototypeOf(_CheckoutAddressForm.prototype),\"getRegionFields\",this).call(this);if(!regionDisplayAll&&!regionFieldData){return null;}var region_string=regionFieldData.region_string;if(region_string){regionFieldData.region_string.onChange=function(v){return _this3.onChange('region',v);};}return regionFieldData;}},{key:\"render\",value:function render(){var id=this.props.id;return/*#__PURE__*/_checkBEM(React,FormPortal,{id:id,name:\"CheckoutAddressForm\"},/*#__PURE__*/_checkBEM(React,\"div\",{block:\"FieldForm\",mix:{block:'CheckoutAddressForm'}},this.renderFields()));}}]);return _CheckoutAddressForm;}(Extensible(MyAccountAddressForm));_CheckoutAddressForm.propTypes=_objectSpread(_objectSpread({},MyAccountAddressForm.propTypes),{},{id:PropTypes.string.isRequired,onShippingEstimationFieldsChange:PropTypes.func});_CheckoutAddressForm.defaultProps=_objectSpread(_objectSpread({},MyAccountAddressForm.defaultProps),{},{onShippingEstimationFieldsChange:function onShippingEstimationFieldsChange(){}});Object.defineProperty(_CheckoutAddressForm,'name',{value:'CheckoutAddressForm'});export var CheckoutAddressForm=middleware(_CheckoutAddressForm,\"Component/CheckoutAddressForm/Component\");export default CheckoutAddressForm;","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/CheckoutAddressForm/CheckoutAddressForm.component.js"],"names":["PropTypes","FormPortal","MyAccountAddressForm","getCityAndRegionFromZipcode","debounce","UPDATE_STATE_FREQUENCY","CheckoutAddressForm","onChange","key","value","setState","onZipcodeChange","e","currentTarget","state","countryId","availableRegions","city","regionCode","length","find","r","code","toUpperCase","regionId","id","props","address","region","postcode","estimateShipping","_","prevState","prevCountryId","prevRegionId","prevRegion","prevCity","prevpostcode","onShippingEstimationFieldsChange","country_id","region_id","shippingFields","default_billing","default_shipping","vat_id","fieldMap","onBlur","Object","entries","forEach","hasOwnProperty","call","handleInitialCountryValue","initialValue","handledInitialCountry","onCountryChange","regionDisplayAll","regionFieldData","region_string","v","block","renderFields","propTypes","string","isRequired","func","defaultProps","defineProperty","_CheckoutAddressForm"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nimport FormPortal from 'Component/FormPortal';\nimport MyAccountAddressForm from 'Component/MyAccountAddressForm/MyAccountAddressForm.component';\nimport { getCityAndRegionFromZipcode } from 'Util/Address';\nimport { debounce } from 'Util/Request';\n\nimport { UPDATE_STATE_FREQUENCY } from './CheckoutAddressForm.config';\n\n/** @namespace Component/CheckoutAddressForm/Component */\nexport class CheckoutAddressForm extends MyAccountAddressForm {\n    static propTypes = {\n        ...MyAccountAddressForm.propTypes,\n        id: PropTypes.string.isRequired,\n        onShippingEstimationFieldsChange: PropTypes.func\n    };\n\n    static defaultProps = {\n        ...MyAccountAddressForm.defaultProps,\n        onShippingEstimationFieldsChange: () => {}\n    };\n\n    onChange = debounce((key, value) => {\n        this.setState(() => ({ [key]: value }));\n    }, UPDATE_STATE_FREQUENCY);\n\n    __construct(props) {\n        super.__construct(props);\n\n        const {\n            address: { region: { region = '' } = {} }\n        } = this.props;\n\n        // TODO: get from region data\n        this.state = {\n            ...this.state,\n            region,\n            city: '',\n            postcode: ''\n        };\n\n        this.estimateShipping();\n    }\n\n    componentDidUpdate(_, prevState) {\n        const {\n            countryId,\n            regionId,\n            region,\n            city,\n            postcode\n        } = this.state;\n\n        const {\n            countryId: prevCountryId,\n            regionId: prevRegionId,\n            region: prevRegion,\n            city: prevCity,\n            postcode: prevpostcode\n        } = prevState;\n\n        if (\n            countryId !== prevCountryId\n            || regionId !== prevRegionId\n            || city !== prevCity\n            || region !== prevRegion\n            || postcode !== prevpostcode\n        ) {\n            this.estimateShipping();\n        }\n    }\n\n    estimateShipping() {\n        const { onShippingEstimationFieldsChange } = this.props;\n\n        const {\n            countryId,\n            regionId,\n            region,\n            city,\n            postcode\n        } = this.state;\n\n        onShippingEstimationFieldsChange({\n            country_id: countryId,\n            region_id: regionId,\n            region,\n            city,\n            postcode\n        });\n    }\n\n    onZipcodeChange = async (e) => {\n        const { value } = e.currentTarget;\n        const { countryId, availableRegions } = this.state;\n\n        const [city, regionCode] = await getCityAndRegionFromZipcode(countryId, value);\n        if (city) {\n            this.setState({\n                city\n            });\n        }\n\n        if (availableRegions.length > 0 && regionCode) {\n            const { id: regionId } = availableRegions\n                .find((r) => r.code.toUpperCase() === regionCode.toUpperCase());\n\n            if (regionId) {\n                this.setState({ regionId });\n            }\n        }\n    };\n\n    get fieldMap() {\n        // country_id, region, region_id, city - are used for shipping estimation\n        const { shippingFields } = this.props;\n\n        const {\n            default_billing,\n            default_shipping,\n            city,\n            postcode,\n            vat_id,\n            ...fieldMap\n        } = super.fieldMap;\n\n        fieldMap.city = {\n            ...city,\n            onChange: (value) => this.onChange('city', value),\n            value: this.state.city\n        };\n\n        fieldMap.postcode = {\n            ...postcode,\n            onChange: (value) => this.onChange('postcode', value),\n            onBlur: this.onZipcodeChange\n        };\n\n        // since object doesn't maintain the order of it's properties\n        // and last modified property goes to the end of the property list,\n        // move vat_id after postcode\n        if (vat_id) {\n            fieldMap.vat_id = vat_id;\n        }\n\n        // Preserve values from global state\n        Object.entries(fieldMap).forEach(([key]) => {\n            if (Object.hasOwnProperty.call(shippingFields, key)) {\n                fieldMap[key].value = shippingFields[key];\n\n                // Handle setting dropdown/input depending on regions existance\n                if (key === 'country_id') {\n                    this.handleInitialCountryValue(shippingFields[key]);\n                }\n            }\n        });\n\n        return fieldMap;\n    }\n\n    handleInitialCountryValue(initialValue) {\n        if (this.handledInitialCountry) {\n            return;\n        }\n\n        this.onCountryChange(initialValue);\n        this.handledInitialCountry = true;\n    }\n\n    getRegionFields() {\n        const { regionDisplayAll } = this.props;\n        const regionFieldData = super.getRegionFields();\n\n        if (!regionDisplayAll && !regionFieldData) {\n            return null;\n        }\n\n        const { region_string } = regionFieldData;\n\n        if (region_string) {\n            regionFieldData.region_string.onChange = (v) => this.onChange('region', v);\n        }\n\n        return regionFieldData;\n    }\n\n    render() {\n        const { id } = this.props;\n\n        return (\n            <FormPortal\n              id={ id }\n              name=\"CheckoutAddressForm\"\n            >\n                <div\n                  block=\"FieldForm\"\n                  mix={ { block: 'CheckoutAddressForm' } }\n                >\n                    { this.renderFields() }\n                </div>\n            </FormPortal>\n        );\n    }\n}\n\nexport default CheckoutAddressForm;\n"]},"metadata":{},"sourceType":"module"}