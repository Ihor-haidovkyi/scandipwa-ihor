{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _get from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";import _getPrototypeOf from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import CartQuery from\"/home/marketihor/scandipwa/packages/scandipwa/src/query/Cart.query\";import ConfigQuery from\"/home/marketihor/scandipwa/packages/scandipwa/src/query/Config.query\";import RegionQuery from\"/home/marketihor/scandipwa/packages/scandipwa/src/query/Region.query\";import ReviewQuery from\"/home/marketihor/scandipwa/packages/scandipwa/src/query/Review.query\";import{updateConfig}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Config/Config.action\";import{showNotification}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";import BrowserDatabase from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/BrowserDatabase\";import{setCurrency}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Currency\";import{fetchMutation,QueryDispatcher}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request\";import{ONE_MONTH_IN_SECONDS}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request/QueryDispatcher\";/** @namespace Store/Config/Dispatcher */export var _ConfigDispatcher=/*#__PURE__*/function(_Extensible){_inherits(_ConfigDispatcher,_Extensible);var _super=_createSuper(_ConfigDispatcher);function _ConfigDispatcher(){_classCallCheck(this,_ConfigDispatcher);return _super.apply(this,arguments);}_createClass(_ConfigDispatcher,[{key:\"__construct\",value:function __construct(){_get(_getPrototypeOf(_ConfigDispatcher.prototype),\"__construct\",this).call(this,'Config');}},{key:\"onSuccess\",value:function onSuccess(data,dispatch){if(data){BrowserDatabase.setItem(data,'config',ONE_MONTH_IN_SECONDS);dispatch(updateConfig(data));}}},{key:\"onError\",value:function onError(error,dispatch){dispatch(showNotification('error',__('Error fetching Config!'),error));}},{key:\"prepareRequest\",value:function prepareRequest(){return[RegionQuery.getCountriesQuery(),ReviewQuery.getRatingQuery(),ConfigQuery.getQuery(),ConfigQuery.getCheckoutAgreements(),ConfigQuery.getCurrencyData(),CartQuery.getCartDisplayConfig()];}}],[{key:\"updateCurrency\",value:function updateCurrency(dispatch,options){var currencyCode=options.currencyCode;return fetchMutation(ConfigQuery.getSaveSelectedCurrencyMutation(currencyCode)).then(setCurrency(currencyCode),dispatch(updateConfig()));}}]);return _ConfigDispatcher;}(Extensible(QueryDispatcher));Object.defineProperty(_ConfigDispatcher,'name',{value:'ConfigDispatcher'});export var ConfigDispatcher=middleware(_ConfigDispatcher,\"Store/Config/Dispatcher\");export default new ConfigDispatcher();","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/store/Config/Config.dispatcher.js"],"names":["CartQuery","ConfigQuery","RegionQuery","ReviewQuery","updateConfig","showNotification","BrowserDatabase","setCurrency","fetchMutation","QueryDispatcher","ONE_MONTH_IN_SECONDS","ConfigDispatcher","data","dispatch","setItem","error","__","getCountriesQuery","getRatingQuery","getQuery","getCheckoutAgreements","getCurrencyData","getCartDisplayConfig","options","currencyCode","getSaveSelectedCurrencyMutation","then","Object","defineProperty","_ConfigDispatcher","value"],"mappings":"o0BAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAOA,CAAAA,SAAP,0EACA,MAAOC,CAAAA,WAAP,4EACA,MAAOC,CAAAA,WAAP,4EACA,MAAOC,CAAAA,WAAP,4EACA,OAASC,YAAT,oFACA,OAASC,gBAAT,gGACA,MAAOC,CAAAA,eAAP,8EACA,OAASC,WAAT,uEACA,OAASC,aAAT,CAAwBC,eAAxB,sEACA,OAASC,oBAAT,sFAEA,yCACA,UAAaC,CAAAA,iBAAb,2RACI,sBAAc,CACV,gFAAkB,QAAlB,EACH,CAHL,yBAgBI,mBAAUC,IAAV,CAAgBC,QAAhB,CAA0B,CACtB,GAAID,IAAJ,CAAU,CACNN,eAAe,CAACQ,OAAhB,CAAwBF,IAAxB,CAA8B,QAA9B,CAAwCF,oBAAxC,EACAG,QAAQ,CAACT,YAAY,CAACQ,IAAD,CAAb,CAAR,CACH,CACJ,CArBL,uBAuBI,iBAAQG,KAAR,CAAeF,QAAf,CAAyB,CACrBA,QAAQ,CAACR,gBAAgB,CAAC,OAAD,CAAUW,EAAE,CAAC,wBAAD,CAAZ,CAAwCD,KAAxC,CAAjB,CAAR,CACH,CAzBL,8BA2BI,yBAAiB,CACb,MAAO,CACHb,WAAW,CAACe,iBAAZ,EADG,CAEHd,WAAW,CAACe,cAAZ,EAFG,CAGHjB,WAAW,CAACkB,QAAZ,EAHG,CAIHlB,WAAW,CAACmB,qBAAZ,EAJG,CAKHnB,WAAW,CAACoB,eAAZ,EALG,CAMHrB,SAAS,CAACsB,oBAAV,EANG,CAAP,CAQH,CApCL,gCAKI,wBAAsBT,QAAtB,CAAgCU,OAAhC,CAAyC,IAC7BC,CAAAA,YAD6B,CACZD,OADY,CAC7BC,YAD6B,CAGrC,MAAOhB,CAAAA,aAAa,CAACP,WAAW,CAACwB,+BAAZ,CACjBD,YADiB,CAAD,CAAb,CAEJE,IAFI,CAGHnB,WAAW,CAACiB,YAAD,CAHR,CAIHX,QAAQ,CAACT,YAAY,EAAb,CAJL,CAAP,CAMH,CAdL,4DAvBAuB,MAAM,CAACC,cAAP,CAAsBC,iBAAtB,CAAyC,MAAzC,CAAiD,CAAEC,KAAK,CAAE,kBAAT,CAAjD,E,oFA8DA,cAAe,IAAInB,CAAAA,gBAAJ,EAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport CartQuery from 'Query/Cart.query';\nimport ConfigQuery from 'Query/Config.query';\nimport RegionQuery from 'Query/Region.query';\nimport ReviewQuery from 'Query/Review.query';\nimport { updateConfig } from 'Store/Config/Config.action';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport BrowserDatabase from 'Util/BrowserDatabase';\nimport { setCurrency } from 'Util/Currency';\nimport { fetchMutation, QueryDispatcher } from 'Util/Request';\nimport { ONE_MONTH_IN_SECONDS } from 'Util/Request/QueryDispatcher';\n\n/** @namespace Store/Config/Dispatcher */\nexport class ConfigDispatcher extends QueryDispatcher {\n    __construct() {\n        super.__construct('Config');\n    }\n\n    static updateCurrency(dispatch, options) {\n        const { currencyCode } = options;\n\n        return fetchMutation(ConfigQuery.getSaveSelectedCurrencyMutation(\n            currencyCode\n        )).then(\n            setCurrency(currencyCode),\n            dispatch(updateConfig())\n        );\n    }\n\n    onSuccess(data, dispatch) {\n        if (data) {\n            BrowserDatabase.setItem(data, 'config', ONE_MONTH_IN_SECONDS);\n            dispatch(updateConfig(data));\n        }\n    }\n\n    onError(error, dispatch) {\n        dispatch(showNotification('error', __('Error fetching Config!'), error));\n    }\n\n    prepareRequest() {\n        return [\n            RegionQuery.getCountriesQuery(),\n            ReviewQuery.getRatingQuery(),\n            ConfigQuery.getQuery(),\n            ConfigQuery.getCheckoutAgreements(),\n            ConfigQuery.getCurrencyData(),\n            CartQuery.getCartDisplayConfig()\n        ];\n    }\n}\n\nexport default new ConfigDispatcher();\n"]},"metadata":{},"sourceType":"module"}