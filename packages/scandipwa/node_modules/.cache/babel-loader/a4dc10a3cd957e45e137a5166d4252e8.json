{"ast":null,"code":"var _jsxFileName = \"/home/marketihor/scandipwa/packages/scandipwa/src/component/Image/Image.component.js\";\n\n/* eslint-disable react/no-did-update-set-state */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\nimport { MixType } from \"/home/marketihor/scandipwa/packages/scandipwa/src/type/Common\";\nimport { IMAGE_LOADED, IMAGE_LOADING, IMAGE_NOT_FOUND, IMAGE_NOT_SPECIFIED } from \"./Image.config\";\nimport \"./Image.style\";\n/**\n * Image component\n * Images are loaded only when they appear in a viewport\n * @class Image\n * @namespace Component/Image/Component\n */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _Image extends Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.image = /*#__PURE__*/createRef();\n    this.state = {\n      imageStatus: IMAGE_LOADING\n    };\n    this.onError = this.onError.bind(this);\n    this.onLoad = this.onLoad.bind(this);\n  }\n\n  componentDidMount() {\n    this.onImageChange();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      src: prevSrc\n    } = prevProps;\n    const {\n      src\n    } = this.props;\n\n    if (src !== prevSrc) {\n      this.onImageChange();\n    }\n  }\n\n  onImageChange() {\n    const {\n      src\n    } = this.props;\n\n    if (!src) {\n      return this.setState({\n        imageStatus: IMAGE_NOT_SPECIFIED\n      });\n    }\n\n    return this.setState({\n      imageStatus: IMAGE_LOADING\n    });\n  }\n\n  onError() {\n    this.setState({\n      imageStatus: IMAGE_NOT_FOUND\n    });\n  }\n\n  onLoad() {\n    this.setState({\n      imageStatus: IMAGE_LOADED\n    });\n  }\n\n  renderImageNotFound() {\n    if (navigator.onLine) {\n      return /*#__PURE__*/_checkBEM(React, \"span\", {\n        block: \"Image\",\n        elem: \"Content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, __('Image not found'));\n    }\n\n    return /*#__PURE__*/_checkBEM(React, \"span\", {\n      block: \"Image\",\n      elem: \"Content\",\n      mods: {\n        isOffline: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 16\n      }\n    });\n  }\n\n  renderImage() {\n    const {\n      alt,\n      isPlaceholder,\n      src,\n      style,\n      title\n    } = this.props;\n    const {\n      imageStatus\n    } = this.state;\n\n    if (isPlaceholder) {\n      return null;\n    }\n\n    switch (imageStatus) {\n      case IMAGE_NOT_FOUND:\n        return this.renderImageNotFound();\n\n      case IMAGE_NOT_SPECIFIED:\n        return /*#__PURE__*/_checkBEM(React, \"span\", {\n          block: \"Image\",\n          elem: \"Content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }\n        }, __('Image not specified'));\n\n      case IMAGE_LOADED:\n      case IMAGE_LOADING:\n        return /*#__PURE__*/_checkBEM(React, \"img\", {\n          block: \"Image\",\n          elem: \"Image\",\n          src: src || '',\n          alt: alt,\n          mods: {\n            isLoading: imageStatus === IMAGE_LOADING\n          },\n          style: style,\n          title: title,\n          onLoad: this.onLoad,\n          onError: this.onError,\n          loading: \"lazy\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }\n        });\n\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const {\n      ratio,\n      mix,\n      isPlaceholder,\n      wrapperSize,\n      src,\n      imageRef,\n      className\n    } = this.props;\n    const {\n      imageStatus\n    } = this.state;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"Image\",\n      ref: imageRef,\n      mods: {\n        ratio,\n        imageStatus,\n        isPlaceholder,\n        hasSrc: !!src\n      },\n      mix: mix,\n      style: wrapperSize // eslint-disable-next-line react/forbid-dom-props\n      ,\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, this.renderImage());\n  }\n\n}\n_Image.propTypes = {\n  isPlaceholder: PropTypes.bool,\n  title: PropTypes.string,\n  src: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  style: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string\n  }),\n  alt: PropTypes.string,\n  className: PropTypes.string,\n  ratio: PropTypes.oneOf(['4x3', '16x9', 'square', 'custom']),\n  wrapperSize: PropTypes.shape({\n    height: PropTypes.string\n  }),\n  mix: MixType,\n  imageRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  })])\n};\n_Image.defaultProps = {\n  className: '',\n  src: '',\n  alt: '',\n  ratio: 'square',\n  mix: {},\n  isPlaceholder: false,\n  wrapperSize: {},\n  style: {},\n  title: null,\n  imageRef: function () {}\n};\nObject.defineProperty(_Image, 'name', {\n  value: 'Image'\n});\n\nexport const Image = middleware(_Image, \"Component/Image/Component\");\nexport default Image;","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/Image/Image.component.js"],"names":["PropTypes","createRef","PureComponent","MixType","IMAGE_LOADED","IMAGE_LOADING","IMAGE_NOT_FOUND","IMAGE_NOT_SPECIFIED","Image","image","state","imageStatus","onError","bind","onLoad","componentDidMount","onImageChange","componentDidUpdate","prevProps","src","prevSrc","props","setState","renderImageNotFound","navigator","onLine","__","isOffline","renderImage","alt","isPlaceholder","style","title","isLoading","render","ratio","mix","wrapperSize","imageRef","className","hasSrc","propTypes","bool","string","oneOfType","shape","width","height","oneOf","func","current","instanceOf","Element","defaultProps","Object","defineProperty","_Image","value"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,OAAzC;AAEA,SAASC,OAAT;AAEA,SACIC,YADJ,EACkBC,aADlB,EACiCC,eADjC,EACkDC,mBADlD;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA,OAAO,MAAMC,MAAN,mCAAkC;AAAA;AAAA;AAAA,SA2CrCC,KA3CqC,gBA2C7BR,SAAS,EA3CoB;AAAA,SA6CrCS,KA7CqC,GA6C7B;AAAEC,MAAAA,WAAW,EAAEN;AAAf,KA7C6B;AAAA,SA+CrCO,OA/CqC,GA+C3B,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CA/C2B;AAAA,SAiDrCC,MAjDqC,GAiD5B,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAjD4B;AAAA;;AAmDrCE,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,aAAL;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,UAAM;AAAEC,MAAAA,GAAG,EAAEC;AAAP,QAAmBF,SAAzB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAU,KAAKE,KAArB;;AAEA,QAAIF,GAAG,KAAKC,OAAZ,EAAqB;AACjB,WAAKJ,aAAL;AACH;AACJ;;AAEDA,EAAAA,aAAa,GAAG;AACZ,UAAM;AAAEG,MAAAA;AAAF,QAAU,KAAKE,KAArB;;AAEA,QAAI,CAACF,GAAL,EAAU;AACN,aAAO,KAAKG,QAAL,CAAc;AAAEX,QAAAA,WAAW,EAAEJ;AAAf,OAAd,CAAP;AACH;;AAED,WAAO,KAAKe,QAAL,CAAc;AAAEX,MAAAA,WAAW,EAAEN;AAAf,KAAd,CAAP;AACH;;AAEDO,EAAAA,OAAO,GAAG;AACN,SAAKU,QAAL,CAAc;AAAEX,MAAAA,WAAW,EAAEL;AAAf,KAAd;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,SAAKQ,QAAL,CAAc;AAAEX,MAAAA,WAAW,EAAEP;AAAf,KAAd;AACH;;AAEDmB,EAAAA,mBAAmB,GAAG;AAClB,QAAIC,SAAS,CAACC,MAAd,EAAsB;AAClB;AACU,QAAA,KAAK,EAAC,OADhB;AACwB,QAAA,IAAI,EAAC,SAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACyCC,EAAE,CAAC,iBAAD,CAD3C;AAGH;;AAED;AAAa,MAAA,KAAK,EAAC,OAAnB;AAA2B,MAAA,IAAI,EAAC,SAAhC;AAA0C,MAAA,IAAI,EAAG;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;AAEDC,EAAAA,WAAW,GAAG;AACV,UAAM;AACFC,MAAAA,GADE;AAEFC,MAAAA,aAFE;AAGFX,MAAAA,GAHE;AAIFY,MAAAA,KAJE;AAKFC,MAAAA;AALE,QAMF,KAAKX,KANT;AAOA,UAAM;AAAEV,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;;AAEA,QAAIoB,aAAJ,EAAmB;AACf,aAAO,IAAP;AACH;;AAED,YAAQnB,WAAR;AACA,WAAKL,eAAL;AACI,eAAO,KAAKiB,mBAAL,EAAP;;AACJ,WAAKhB,mBAAL;AACI;AACU,UAAA,KAAK,EAAC,OADhB;AACwB,UAAA,IAAI,EAAC,SAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACyCmB,EAAE,CAAC,qBAAD,CAD3C;;AAGJ,WAAKtB,YAAL;AACA,WAAKC,aAAL;AACI;AAEM,UAAA,KAAK,EAAC,OAFZ;AAGM,UAAA,IAAI,EAAC,OAHX;AAIM,UAAA,GAAG,EAAGc,GAAG,IAAI,EAJnB;AAKM,UAAA,GAAG,EAAGU,GALZ;AAMM,UAAA,IAAI,EAAG;AAAEI,YAAAA,SAAS,EAAEtB,WAAW,KAAKN;AAA7B,WANb;AAOM,UAAA,KAAK,EAAG0B,KAPd;AAQM,UAAA,KAAK,EAAGC,KARd;AASM,UAAA,MAAM,EAAG,KAAKlB,MATpB;AAUM,UAAA,OAAO,EAAG,KAAKF,OAVrB;AAWM,UAAA,OAAO,EAAC,MAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcJ;AACI,eAAO,IAAP;AAxBJ;AA0BH;;AAEDsB,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA,KADE;AAEFC,MAAAA,GAFE;AAGFN,MAAAA,aAHE;AAIFO,MAAAA,WAJE;AAKFlB,MAAAA,GALE;AAMFmB,MAAAA,QANE;AAOFC,MAAAA;AAPE,QAQF,KAAKlB,KART;AAUA,UAAM;AAAEV,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AAEA;AAEM,MAAA,KAAK,EAAC,OAFZ;AAGM,MAAA,GAAG,EAAG4B,QAHZ;AAIM,MAAA,IAAI,EAAG;AACHH,QAAAA,KADG;AAEHxB,QAAAA,WAFG;AAGHmB,QAAAA,aAHG;AAIHU,QAAAA,MAAM,EAAE,CAAC,CAACrB;AAJP,OAJb;AAUM,MAAA,GAAG,EAAGiB,GAVZ;AAWM,MAAA,KAAK,EAAGC,WAXd,CAYM;AAZN;AAaM,MAAA,SAAS,EAAGE,SAblB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeU,KAAKX,WAAL,EAfV;AAkBH;;AArKoC;AAA5BpB,M,CACFiC,S,GAAY;AACfX,EAAAA,aAAa,EAAE9B,SAAS,CAAC0C,IADV;AAEfV,EAAAA,KAAK,EAAEhC,SAAS,CAAC2C,MAFF;AAGfxB,EAAAA,GAAG,EAAEnB,SAAS,CAAC4C,SAAV,CAAoB,CACrB5C,SAAS,CAAC2C,MADW,EAErB3C,SAAS,CAAC0C,IAFW,CAApB,CAHU;AAOfX,EAAAA,KAAK,EAAE/B,SAAS,CAAC6C,KAAV,CAAgB;AACnBC,IAAAA,KAAK,EAAE9C,SAAS,CAAC2C,MADE;AAEnBI,IAAAA,MAAM,EAAE/C,SAAS,CAAC2C;AAFC,GAAhB,CAPQ;AAWfd,EAAAA,GAAG,EAAE7B,SAAS,CAAC2C,MAXA;AAYfJ,EAAAA,SAAS,EAAEvC,SAAS,CAAC2C,MAZN;AAafR,EAAAA,KAAK,EAAEnC,SAAS,CAACgD,KAAV,CAAgB,CACnB,KADmB,EAEnB,MAFmB,EAGnB,QAHmB,EAInB,QAJmB,CAAhB,CAbQ;AAmBfX,EAAAA,WAAW,EAAErC,SAAS,CAAC6C,KAAV,CAAgB;AACzBE,IAAAA,MAAM,EAAE/C,SAAS,CAAC2C;AADO,GAAhB,CAnBE;AAsBfP,EAAAA,GAAG,EAAEjC,OAtBU;AAuBfmC,EAAAA,QAAQ,EAAEtC,SAAS,CAAC4C,SAAV,CAAoB,CAC1B5C,SAAS,CAACiD,IADgB,EAE1BjD,SAAS,CAAC6C,KAAV,CAAgB;AAAEK,IAAAA,OAAO,EAAElD,SAAS,CAACmD,UAAV,CAAqBC,OAArB;AAAX,GAAhB,CAF0B,CAApB;AAvBK,C;AADV5C,M,CA8BF6C,Y,GAAe;AAClBd,EAAAA,SAAS,EAAE,EADO;AAElBpB,EAAAA,GAAG,EAAE,EAFa;AAGlBU,EAAAA,GAAG,EAAE,EAHa;AAIlBM,EAAAA,KAAK,EAAE,QAJW;AAKlBC,EAAAA,GAAG,EAAE,EALa;AAMlBN,EAAAA,aAAa,EAAE,KANG;AAOlBO,EAAAA,WAAW,EAAE,EAPK;AAQlBN,EAAAA,KAAK,EAAE,EARW;AASlBC,EAAAA,KAAK,EAAE,IATW;AAUlBM,EAAAA,QAAQ,EAAE,YAAM,CAAE;AAVA,C;AA5D1BgB,MAAM,CAACC,cAAP,CAAsBC,MAAtB,EAA8B,MAA9B,EAAsC;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAtC;;;AAsMA,eAAejD,KAAf","sourcesContent":["/* eslint-disable react/no-did-update-set-state */\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\n\nimport { MixType } from 'Type/Common';\n\nimport {\n    IMAGE_LOADED, IMAGE_LOADING, IMAGE_NOT_FOUND, IMAGE_NOT_SPECIFIED\n} from './Image.config';\n\nimport './Image.style';\n\n/**\n * Image component\n * Images are loaded only when they appear in a viewport\n * @class Image\n * @namespace Component/Image/Component\n */\nexport class Image extends PureComponent {\n    static propTypes = {\n        isPlaceholder: PropTypes.bool,\n        title: PropTypes.string,\n        src: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.bool\n        ]),\n        style: PropTypes.shape({\n            width: PropTypes.string,\n            height: PropTypes.string\n        }),\n        alt: PropTypes.string,\n        className: PropTypes.string,\n        ratio: PropTypes.oneOf([\n            '4x3',\n            '16x9',\n            'square',\n            'custom'\n        ]),\n        wrapperSize: PropTypes.shape({\n            height: PropTypes.string\n        }),\n        mix: MixType,\n        imageRef: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.shape({ current: PropTypes.instanceOf(Element) })\n        ])\n    };\n\n    static defaultProps = {\n        className: '',\n        src: '',\n        alt: '',\n        ratio: 'square',\n        mix: {},\n        isPlaceholder: false,\n        wrapperSize: {},\n        style: {},\n        title: null,\n        imageRef: () => {}\n    };\n\n    image = createRef();\n\n    state = { imageStatus: IMAGE_LOADING };\n\n    onError = this.onError.bind(this);\n\n    onLoad = this.onLoad.bind(this);\n\n    componentDidMount() {\n        this.onImageChange();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { src: prevSrc } = prevProps;\n        const { src } = this.props;\n\n        if (src !== prevSrc) {\n            this.onImageChange();\n        }\n    }\n\n    onImageChange() {\n        const { src } = this.props;\n\n        if (!src) {\n            return this.setState({ imageStatus: IMAGE_NOT_SPECIFIED });\n        }\n\n        return this.setState({ imageStatus: IMAGE_LOADING });\n    }\n\n    onError() {\n        this.setState({ imageStatus: IMAGE_NOT_FOUND });\n    }\n\n    onLoad() {\n        this.setState({ imageStatus: IMAGE_LOADED });\n    }\n\n    renderImageNotFound() {\n        if (navigator.onLine) {\n            return (\n                <span block=\"Image\" elem=\"Content\">{ __('Image not found') }</span>\n            );\n        }\n\n        return <span block=\"Image\" elem=\"Content\" mods={ { isOffline: true } } />;\n    }\n\n    renderImage() {\n        const {\n            alt,\n            isPlaceholder,\n            src,\n            style,\n            title\n        } = this.props;\n        const { imageStatus } = this.state;\n\n        if (isPlaceholder) {\n            return null;\n        }\n\n        switch (imageStatus) {\n        case IMAGE_NOT_FOUND:\n            return this.renderImageNotFound();\n        case IMAGE_NOT_SPECIFIED:\n            return (\n                <span block=\"Image\" elem=\"Content\">{ __('Image not specified') }</span>\n            );\n        case IMAGE_LOADED:\n        case IMAGE_LOADING:\n            return (\n                <img\n                  block=\"Image\"\n                  elem=\"Image\"\n                  src={ src || '' }\n                  alt={ alt }\n                  mods={ { isLoading: imageStatus === IMAGE_LOADING } }\n                  style={ style }\n                  title={ title }\n                  onLoad={ this.onLoad }\n                  onError={ this.onError }\n                  loading=\"lazy\"\n                />\n            );\n        default:\n            return null;\n        }\n    }\n\n    render() {\n        const {\n            ratio,\n            mix,\n            isPlaceholder,\n            wrapperSize,\n            src,\n            imageRef,\n            className\n        } = this.props;\n\n        const { imageStatus } = this.state;\n\n        return (\n            <div\n              block=\"Image\"\n              ref={ imageRef }\n              mods={ {\n                  ratio,\n                  imageStatus,\n                  isPlaceholder,\n                  hasSrc: !!src\n              } }\n              mix={ mix }\n              style={ wrapperSize }\n              // eslint-disable-next-line react/forbid-dom-props\n              className={ className }\n            >\n                { this.renderImage() }\n            </div>\n        );\n    }\n}\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}