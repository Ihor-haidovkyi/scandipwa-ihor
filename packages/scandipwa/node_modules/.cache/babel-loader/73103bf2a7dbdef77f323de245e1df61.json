{"ast":null,"code":"import getWrapperFromPlugin from \"../helpers/getWrapperFromPlugin\";\n/**\n * Middlewaring given original member\n * @param {Function} origMember\n * @param {Array} sortedPlugins\n * @param Context origContext\n */\n\nexport default (function (origMember = function () {}, sortedPlugins, origContext) {\n  return function (...args) {\n    const newMember = sortedPlugins.reduce(function (acc, plugin) {\n      return function () {\n        const wrapper = getWrapperFromPlugin(plugin, origMember.name); // Provide different arguments due to API difference\n        // Between property and function call interception\n\n        return typeof origMember === 'object' ? wrapper(acc, origContext) : wrapper(args, acc.bind(origContext), origContext);\n      };\n    }, origMember);\n    return newMember(args);\n  };\n});","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/node_modules/@scandipwa/scandipwa-extensibility/lib/middlewarers/generateMiddlewaredFunction.js"],"names":["getWrapperFromPlugin","origMember","sortedPlugins","origContext","args","newMember","reduce","acc","plugin","wrapper","name","bind"],"mappings":"AAAA,OAAOA,oBAAP;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAe,UAACC,UAAU,GAAG,YAAM,CAAE,CAAtB,EAAwBC,aAAxB,EAAuCC,WAAvC;AAAA,SAAuD,UAAC,GAAGC,IAAJ,EAAa;AAC/E,UAAMC,SAAS,GAAGH,aAAa,CAACI,MAAd,CACd,UAACC,GAAD,EAAMC,MAAN;AAAA,aAAiB,YAAM;AACnB,cAAMC,OAAO,GAAGT,oBAAoB,CAACQ,MAAD,EAASP,UAAU,CAACS,IAApB,CAApC,CADmB,CAGnB;AACA;;AACA,eAAO,OAAOT,UAAP,KAAsB,QAAtB,GACDQ,OAAO,CAACF,GAAD,EAAMJ,WAAN,CADN,GAEDM,OAAO,CACLL,IADK,EAELG,GAAG,CAACI,IAAJ,CAASR,WAAT,CAFK,EAGLA,WAHK,CAFb;AAOH,OAZD;AAAA,KADc,EAcdF,UAdc,CAAlB;AAiBA,WAAOI,SAAS,CAACD,IAAD,CAAhB;AACH,GAnBc;AAAA,CAAf","sourcesContent":["import getWrapperFromPlugin from '../helpers/getWrapperFromPlugin';\n\n/**\n * Middlewaring given original member\n * @param {Function} origMember\n * @param {Array} sortedPlugins\n * @param Context origContext\n */\nexport default (origMember = () => {}, sortedPlugins, origContext) => (...args) => {\n    const newMember = sortedPlugins.reduce(\n        (acc, plugin) => () => {\n            const wrapper = getWrapperFromPlugin(plugin, origMember.name);\n\n            // Provide different arguments due to API difference\n            // Between property and function call interception\n            return typeof origMember === 'object'\n                ? wrapper(acc, origContext)\n                : wrapper(\n                    args,\n                    acc.bind(origContext),\n                    origContext\n                );\n        },\n        origMember\n    );\n\n    return newMember(args);\n};\n"]},"metadata":{},"sourceType":"module"}