{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component\\\\MyAccountCustomerTable\\\\MyAccountCustomerTable.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { CHANGE_PASSWORD, CUSTOMER_POPUP_ID, EDIT_CUSTOMER } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component/MyAccountCustomerPopup/MyAccountCustomerPopup.config\";\nimport { showPopup } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Popup/Popup.action\";\nimport { customerType } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\type/Account\";\nimport MyAccountCustomerTable from \"./MyAccountCustomerTable.component\";\n/** @namespace Component/MyAccountCustomerTable/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {\n    showPopup: function (payload) {\n      return dispatch(showPopup(CUSTOMER_POPUP_ID, payload));\n    }\n  };\n}, \"Component/MyAccountCustomerTable/Container/mapDispatchToProps\");\n/** @namespace Component/MyAccountCustomerTable/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _MyAccountCustomerTableContainer extends Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.containerFunctions = {\n      showEditPopup: this.showEditPopup.bind(this),\n      showChangePasswordPopup: this.showChangePasswordPopup.bind(this)\n    };\n  }\n\n  showEditPopup() {\n    const {\n      showPopup,\n      customer\n    } = this.props;\n    showPopup({\n      action: EDIT_CUSTOMER,\n      customer,\n      title: __('Edit customer details')\n    });\n  }\n\n  showChangePasswordPopup() {\n    const {\n      showPopup,\n      customer\n    } = this.props;\n    showPopup({\n      action: CHANGE_PASSWORD,\n      customer,\n      title: __('Change password')\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, MyAccountCustomerTable, Object.assign({}, this.props, this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n/** @namespace Component/MyAccountCustomerTable/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\n\n_MyAccountCustomerTableContainer.propTypes = {\n  showPopup: PropTypes.func.isRequired,\n  customer: customerType.isRequired\n};\nObject.defineProperty(_MyAccountCustomerTableContainer, 'name', {\n  value: 'MyAccountCustomerTableContainer'\n});\n\nexport const MyAccountCustomerTableContainer = middleware(_MyAccountCustomerTableContainer, \"Component/MyAccountCustomerTable/Container\");\nexport const mapStateToProps = middleware(function (state) {\n  return {};\n}, \"Component/MyAccountCustomerTable/Container/mapStateToProps\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountCustomerTableContainer);","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/packages/scandipwa/src/component/MyAccountCustomerTable/MyAccountCustomerTable.container.js"],"names":["PropTypes","PureComponent","connect","CHANGE_PASSWORD","CUSTOMER_POPUP_ID","EDIT_CUSTOMER","showPopup","customerType","MyAccountCustomerTable","mapDispatchToProps","dispatch","payload","MyAccountCustomerTableContainer","containerFunctions","showEditPopup","bind","showChangePasswordPopup","customer","props","action","title","__","render","propTypes","func","isRequired","Object","defineProperty","_MyAccountCustomerTableContainer","value","mapStateToProps","state"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACIC,eADJ,EAEIC,iBAFJ,EAGIC,aAHJ;AAKA,SAASC,SAAT;AACA,SAASC,YAAT;AAEA,OAAOC,sBAAP;AAEA;;AACA,OAAO,MAAMC,kBAAkB,cAAG,UAACC,QAAD;AAAA,SAAe;AAC7CJ,IAAAA,SAAS,EAAE,UAACK,OAAD;AAAA,aAAaD,QAAQ,CAACJ,SAAS,CAACF,iBAAD,EAAoBO,OAApB,CAAV,CAArB;AAAA;AADkC,GAAf;AAAA,CAAH,kEAAxB;AAIP;;;;AACA,OAAO,MAAMC,gCAAN,mCAA4D;AAAA;AAAA;AAAA,SAM/DC,kBAN+D,GAM1C;AACjBC,MAAAA,aAAa,EAAE,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CADE;AAEjBC,MAAAA,uBAAuB,EAAE,KAAKA,uBAAL,CAA6BD,IAA7B,CAAkC,IAAlC;AAFR,KAN0C;AAAA;;AAW/DD,EAAAA,aAAa,GAAG;AACZ,UAAM;AAAER,MAAAA,SAAF;AAAaW,MAAAA;AAAb,QAA0B,KAAKC,KAArC;AAEAZ,IAAAA,SAAS,CAAC;AACNa,MAAAA,MAAM,EAAEd,aADF;AAENY,MAAAA,QAFM;AAGNG,MAAAA,KAAK,EAAEC,EAAE,CAAC,uBAAD;AAHH,KAAD,CAAT;AAKH;;AAEDL,EAAAA,uBAAuB,GAAG;AACtB,UAAM;AAAEV,MAAAA,SAAF;AAAaW,MAAAA;AAAb,QAA0B,KAAKC,KAArC;AAEAZ,IAAAA,SAAS,CAAC;AACNa,MAAAA,MAAM,EAAEhB,eADF;AAENc,MAAAA,QAFM;AAGNG,MAAAA,KAAK,EAAEC,EAAE,CAAC,iBAAD;AAHH,KAAD,CAAT;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,yCACK,sBADL,oBAEW,KAAKJ,KAFhB,EAGW,KAAKL,kBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;;AAtC8D;AAyCnE;AACA;;AA1CaD,gC,CACFW,S,GAAY;AACfjB,EAAAA,SAAS,EAAEN,SAAS,CAACwB,IAAV,CAAeC,UADX;AAEfR,EAAAA,QAAQ,EAAEV,YAAY,CAACkB;AAFR,C;AAhCvBC,MAAM,CAACC,cAAP,CAAsBC,gCAAtB,EAAwD,MAAxD,EAAgE;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAhE;;;AA0EA,OAAO,MAAMC,eAAe,cAAG,UAACC,KAAD;AAAA,SAAY,EAAZ;AAAA,CAAH,+DAArB;AAEP,eAAe7B,OAAO,CAAC4B,eAAD,EAAkBrB,kBAAlB,CAAP,CAA6CG,+BAA7C,CAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    CHANGE_PASSWORD,\n    CUSTOMER_POPUP_ID,\n    EDIT_CUSTOMER\n} from 'Component/MyAccountCustomerPopup/MyAccountCustomerPopup.config';\nimport { showPopup } from 'Store/Popup/Popup.action';\nimport { customerType } from 'Type/Account';\n\nimport MyAccountCustomerTable from './MyAccountCustomerTable.component';\n\n/** @namespace Component/MyAccountCustomerTable/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showPopup: (payload) => dispatch(showPopup(CUSTOMER_POPUP_ID, payload))\n});\n\n/** @namespace Component/MyAccountCustomerTable/Container */\nexport class MyAccountCustomerTableContainer extends PureComponent {\n    static propTypes = {\n        showPopup: PropTypes.func.isRequired,\n        customer: customerType.isRequired\n    };\n\n    containerFunctions = {\n        showEditPopup: this.showEditPopup.bind(this),\n        showChangePasswordPopup: this.showChangePasswordPopup.bind(this)\n    };\n\n    showEditPopup() {\n        const { showPopup, customer } = this.props;\n\n        showPopup({\n            action: EDIT_CUSTOMER,\n            customer,\n            title: __('Edit customer details')\n        });\n    }\n\n    showChangePasswordPopup() {\n        const { showPopup, customer } = this.props;\n\n        showPopup({\n            action: CHANGE_PASSWORD,\n            customer,\n            title: __('Change password')\n        });\n    }\n\n    render() {\n        return (\n            <MyAccountCustomerTable\n              { ...this.props }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\n/** @namespace Component/MyAccountCustomerTable/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountCustomerTableContainer);\n"]},"metadata":{},"sourceType":"module"}