{"ast":null,"code":"var React=require('react');var hyphenPatternRegex=/-([a-z])/g;var CUSTOM_PROPERTY_OR_NO_HYPHEN_REGEX=/^--[a-zA-Z0-9-]+$|^[^-]+$/;/**\n * Converts a string to camelCase.\n *\n * @param  {String} string - The string.\n * @return {String}\n */function camelCase(string){if(typeof string!=='string'){throw new TypeError('First argument must be a string');}// custom property or no hyphen found\nif(CUSTOM_PROPERTY_OR_NO_HYPHEN_REGEX.test(string)){return string;}// convert to camelCase\nreturn string.toLowerCase().replace(hyphenPatternRegex,function(_,character){return character.toUpperCase();});}/**\n * Swap key with value in an object.\n *\n * @param  {Object}   obj        - The object.\n * @param  {Function} [override] - The override method.\n * @return {Object}              - The inverted object.\n */function invertObject(obj,override){if(!obj||typeof obj!=='object'){throw new TypeError('First argument must be an object');}var key;var value;var isOverridePresent=typeof override==='function';var overrides={};var result={};for(key in obj){value=obj[key];if(isOverridePresent){overrides=override(key,value);if(overrides&&overrides.length===2){result[overrides[0]]=overrides[1];continue;}}if(typeof value==='string'){result[value]=key;}}return result;}/**\n * Check if a given tag is a custom component.\n *\n * @see {@link https://github.com/facebook/react/blob/v16.6.3/packages/react-dom/src/shared/isCustomComponent.js}\n *\n * @param {string} tagName - The name of the html tag.\n * @param {Object} props   - The props being passed to the element.\n * @return {boolean}\n */function isCustomComponent(tagName,props){if(tagName.indexOf('-')===-1){return props&&typeof props.is==='string';}switch(tagName){// These are reserved SVG and MathML elements.\n// We don't mind this whitelist too much because we expect it to never grow.\n// The alternative is to track the namespace in a few places which is convoluted.\n// https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\ncase'annotation-xml':case'color-profile':case'font-face':case'font-face-src':case'font-face-uri':case'font-face-format':case'font-face-name':case'missing-glyph':return false;default:return true;}}/**\n * @constant {Boolean}\n * @see {@link https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html}\n */var PRESERVE_CUSTOM_ATTRIBUTES=React.version.split('.')[0]>=16;module.exports={PRESERVE_CUSTOM_ATTRIBUTES:PRESERVE_CUSTOM_ATTRIBUTES,camelCase:camelCase,invertObject:invertObject,isCustomComponent:isCustomComponent};","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/html-react-parser/lib/utilities.js"],"names":["React","require","hyphenPatternRegex","CUSTOM_PROPERTY_OR_NO_HYPHEN_REGEX","camelCase","string","TypeError","test","toLowerCase","replace","_","character","toUpperCase","invertObject","obj","override","key","value","isOverridePresent","overrides","result","length","isCustomComponent","tagName","props","indexOf","is","PRESERVE_CUSTOM_ATTRIBUTES","version","split","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,KAAK,CAAGC,OAAO,CAAC,OAAD,CAAnB,CACA,GAAIC,CAAAA,kBAAkB,CAAG,WAAzB,CACA,GAAIC,CAAAA,kCAAkC,CAAG,2BAAzC,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,SAAT,CAAmBC,MAAnB,CAA2B,CACzB,GAAI,MAAOA,CAAAA,MAAP,GAAkB,QAAtB,CAAgC,CAC9B,KAAM,IAAIC,CAAAA,SAAJ,CAAc,iCAAd,CAAN,CACD,CAED;AACA,GAAIH,kCAAkC,CAACI,IAAnC,CAAwCF,MAAxC,CAAJ,CAAqD,CACnD,MAAOA,CAAAA,MAAP,CACD,CAED;AACA,MAAOA,CAAAA,MAAM,CACVG,WADI,GAEJC,OAFI,CAEIP,kBAFJ,CAEwB,SAAUQ,CAAV,CAAaC,SAAb,CAAwB,CACnD,MAAOA,CAAAA,SAAS,CAACC,WAAV,EAAP,CACD,CAJI,CAAP,CAKD,CAED;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,YAAT,CAAsBC,GAAtB,CAA2BC,QAA3B,CAAqC,CACnC,GAAI,CAACD,GAAD,EAAQ,MAAOA,CAAAA,GAAP,GAAe,QAA3B,CAAqC,CACnC,KAAM,IAAIR,CAAAA,SAAJ,CAAc,kCAAd,CAAN,CACD,CAED,GAAIU,CAAAA,GAAJ,CACA,GAAIC,CAAAA,KAAJ,CACA,GAAIC,CAAAA,iBAAiB,CAAG,MAAOH,CAAAA,QAAP,GAAoB,UAA5C,CACA,GAAII,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CAEA,IAAKJ,GAAL,GAAYF,CAAAA,GAAZ,CAAiB,CACfG,KAAK,CAAGH,GAAG,CAACE,GAAD,CAAX,CAEA,GAAIE,iBAAJ,CAAuB,CACrBC,SAAS,CAAGJ,QAAQ,CAACC,GAAD,CAAMC,KAAN,CAApB,CACA,GAAIE,SAAS,EAAIA,SAAS,CAACE,MAAV,GAAqB,CAAtC,CAAyC,CACvCD,MAAM,CAACD,SAAS,CAAC,CAAD,CAAV,CAAN,CAAuBA,SAAS,CAAC,CAAD,CAAhC,CACA,SACD,CACF,CAED,GAAI,MAAOF,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7BG,MAAM,CAACH,KAAD,CAAN,CAAgBD,GAAhB,CACD,CACF,CAED,MAAOI,CAAAA,MAAP,CACD,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAASE,CAAAA,iBAAT,CAA2BC,OAA3B,CAAoCC,KAApC,CAA2C,CACzC,GAAID,OAAO,CAACE,OAAR,CAAgB,GAAhB,IAAyB,CAAC,CAA9B,CAAiC,CAC/B,MAAOD,CAAAA,KAAK,EAAI,MAAOA,CAAAA,KAAK,CAACE,EAAb,GAAoB,QAApC,CACD,CAED,OAAQH,OAAR,EACE;AACA;AACA;AACA;AACA,IAAK,gBAAL,CACA,IAAK,eAAL,CACA,IAAK,WAAL,CACA,IAAK,eAAL,CACA,IAAK,eAAL,CACA,IAAK,kBAAL,CACA,IAAK,gBAAL,CACA,IAAK,eAAL,CACE,MAAO,MAAP,CACF,QACE,MAAO,KAAP,CAfJ,CAiBD,CAED;AACA;AACA;AACA,GACA,GAAII,CAAAA,0BAA0B,CAAG3B,KAAK,CAAC4B,OAAN,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,GAA+B,EAAhE,CAEAC,MAAM,CAACC,OAAP,CAAiB,CACfJ,0BAA0B,CAAEA,0BADb,CAEfvB,SAAS,CAAEA,SAFI,CAGfS,YAAY,CAAEA,YAHC,CAIfS,iBAAiB,CAAEA,iBAJJ,CAAjB","sourcesContent":["var React = require('react');\nvar hyphenPatternRegex = /-([a-z])/g;\nvar CUSTOM_PROPERTY_OR_NO_HYPHEN_REGEX = /^--[a-zA-Z0-9-]+$|^[^-]+$/;\n\n/**\n * Converts a string to camelCase.\n *\n * @param  {String} string - The string.\n * @return {String}\n */\nfunction camelCase(string) {\n  if (typeof string !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  // custom property or no hyphen found\n  if (CUSTOM_PROPERTY_OR_NO_HYPHEN_REGEX.test(string)) {\n    return string;\n  }\n\n  // convert to camelCase\n  return string\n    .toLowerCase()\n    .replace(hyphenPatternRegex, function (_, character) {\n      return character.toUpperCase();\n    });\n}\n\n/**\n * Swap key with value in an object.\n *\n * @param  {Object}   obj        - The object.\n * @param  {Function} [override] - The override method.\n * @return {Object}              - The inverted object.\n */\nfunction invertObject(obj, override) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('First argument must be an object');\n  }\n\n  var key;\n  var value;\n  var isOverridePresent = typeof override === 'function';\n  var overrides = {};\n  var result = {};\n\n  for (key in obj) {\n    value = obj[key];\n\n    if (isOverridePresent) {\n      overrides = override(key, value);\n      if (overrides && overrides.length === 2) {\n        result[overrides[0]] = overrides[1];\n        continue;\n      }\n    }\n\n    if (typeof value === 'string') {\n      result[value] = key;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Check if a given tag is a custom component.\n *\n * @see {@link https://github.com/facebook/react/blob/v16.6.3/packages/react-dom/src/shared/isCustomComponent.js}\n *\n * @param {string} tagName - The name of the html tag.\n * @param {Object} props   - The props being passed to the element.\n * @return {boolean}\n */\nfunction isCustomComponent(tagName, props) {\n  if (tagName.indexOf('-') === -1) {\n    return props && typeof props.is === 'string';\n  }\n\n  switch (tagName) {\n    // These are reserved SVG and MathML elements.\n    // We don't mind this whitelist too much because we expect it to never grow.\n    // The alternative is to track the namespace in a few places which is convoluted.\n    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts\n    case 'annotation-xml':\n    case 'color-profile':\n    case 'font-face':\n    case 'font-face-src':\n    case 'font-face-uri':\n    case 'font-face-format':\n    case 'font-face-name':\n    case 'missing-glyph':\n      return false;\n    default:\n      return true;\n  }\n}\n\n/**\n * @constant {Boolean}\n * @see {@link https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html}\n */\nvar PRESERVE_CUSTOM_ATTRIBUTES = React.version.split('.')[0] >= 16;\n\nmodule.exports = {\n  PRESERVE_CUSTOM_ATTRIBUTES: PRESERVE_CUSTOM_ATTRIBUTES,\n  camelCase: camelCase,\n  invertObject: invertObject,\n  isCustomComponent: isCustomComponent\n};\n"]},"metadata":{},"sourceType":"module"}