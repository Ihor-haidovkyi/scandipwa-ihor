{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import{createRef,PureComponent}from'react';import{NotificationType}from\"/home/marketihor/scandipwa/packages/scandipwa/src/type/NotificationList\";import CSS from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/CSS\";import{ANIMATION_DURATION,ERROR_NOTIFICATION_LIFETIME,ERROR_TYPE,NOTIFICATION_LIFETIME}from\"./Notification.config\";import\"./Notification.style\";/**\n * Notification block\n * @class Notification\n * @namespace Component/Notification/Component\n */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _Notification=/*#__PURE__*/function(_Extensible){_inherits(_Notification,_Extensible);var _super=_createSuper(_Notification);function _Notification(){var _this;_classCallCheck(this,_Notification);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isNotificationVisible:true};_this.notification=/*#__PURE__*/createRef();_this.hideNotification=function(){var _this$props=_this.props,onHideNotification=_this$props.onHideNotification,notificationId=_this$props.notificationId;_this.setState({isNotificationVisible:false});// give CSS time to animate\n_this.CSSHideTimeout=setTimeout(function(){onHideNotification(notificationId);},ANIMATION_DURATION);};return _this;}_createClass(_Notification,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var msgType=this.props.notification.msgType;// Make sure error notification stays a little longer\nif(msgType.toLowerCase()===ERROR_TYPE){this.hideTimeout=setTimeout(function(){return _this2.hideNotification();},ERROR_NOTIFICATION_LIFETIME);}else{this.hideTimeout=setTimeout(function(){return _this2.hideNotification();},NOTIFICATION_LIFETIME);}CSS.setVariable(this.notification,'animation-duration',\"\".concat(ANIMATION_DURATION,\"ms\"));}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){// clear started timeouts, to assure we are not changing state of unmounted component\nclearTimeout(this.hideTimeout);clearTimeout(this.CSSHideTimeout);}/**\n     * Remove notification from screen\n     * @return {void\n     */},{key:\"renderDebug\",value:function renderDebug(){var msgDebug=this.props.notification.msgDebug;if(!msgDebug){return null;}if(process.env.NODE_ENV==='production'){return null;}// eslint-disable-next-line no-console\nconsole.warn(msgDebug);// so we know what was in notification\nreturn/*#__PURE__*/_checkBEM(React,\"pre\",{block:\"Notification\",elem:\"Debug\"},JSON.stringify(msgDebug));}},{key:\"render\",value:function render(){var notification=this.props.notification;var isNotificationVisible=this.state.isNotificationVisible;var msgText=notification.msgText,msgType=notification.msgType;var mods={type:msgType.toLowerCase(),is:isNotificationVisible?'opening':'closing'};return/*#__PURE__*/_checkBEM(React,\"div\",{block:\"Notification\",mods:mods,ref:this.notification},/*#__PURE__*/_checkBEM(React,\"button\",{block:\"Notification\",elem:\"Button\",onClick:this.hideNotification},\"Close\"),/*#__PURE__*/_checkBEM(React,\"p\",{block:\"Notification\",elem:\"Text\"},msgText),this.renderDebug());}}]);return _Notification;}(Extensible(PureComponent));Object.defineProperty(_Notification,'name',{value:'Notification'});export var Notification=middleware(_Notification,\"Component/Notification/Component\");export default Notification;","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/Notification/Notification.component.js"],"names":["createRef","PureComponent","NotificationType","CSS","ANIMATION_DURATION","ERROR_NOTIFICATION_LIFETIME","ERROR_TYPE","NOTIFICATION_LIFETIME","Notification","state","isNotificationVisible","notification","hideNotification","props","onHideNotification","notificationId","setState","CSSHideTimeout","setTimeout","msgType","toLowerCase","hideTimeout","setVariable","clearTimeout","msgDebug","process","env","NODE_ENV","console","warn","JSON","stringify","msgText","mods","type","is","renderDebug","Object","defineProperty","_Notification","value"],"mappings":"ojBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAGA,OAASA,SAAT,CAAoBC,aAApB,KAAyC,OAAzC,CAEA,OAASC,gBAAT,+EACA,MAAOC,CAAAA,GAAP,kEAEA,OACIC,kBADJ,CACwBC,2BADxB,CACqDC,UADrD,CACiEC,qBADjE,6BAIA,6BAEA;AACA;AACA;AACA;AACA,G,wEACA,UAAaC,CAAAA,aAAb,yVAOIC,KAPJ,CAOY,CAAEC,qBAAqB,CAAE,IAAzB,CAPZ,OASIC,YATJ,cASmBX,SAAS,EAT5B,OAkCIY,gBAlCJ,CAkCuB,UAAM,iBAC0B,MAAKC,KAD/B,CACbC,kBADa,aACbA,kBADa,CACOC,cADP,aACOA,cADP,CAErB,MAAKC,QAAL,CAAc,CAAEN,qBAAqB,CAAE,KAAzB,CAAd,EAEA;AACA,MAAKO,cAAL,CAAsBC,UAAU,CAAC,UAAM,CACnCJ,kBAAkB,CAACC,cAAD,CAAlB,CACH,CAF+B,CAE7BX,kBAF6B,CAAhC,CAGH,CA1CL,0EAWI,4BAAoB,oBACQe,CAAAA,OADR,CACsB,KAAKN,KAD3B,CACRF,YADQ,CACQQ,OADR,CAGhB;AACA,GAAIA,OAAO,CAACC,WAAR,KAA0Bd,UAA9B,CAA0C,CACtC,KAAKe,WAAL,CAAmBH,UAAU,CAAC,iBAAM,CAAA,MAAI,CAACN,gBAAL,EAAN,EAAD,CAAgCP,2BAAhC,CAA7B,CACH,CAFD,IAEO,CACH,KAAKgB,WAAL,CAAmBH,UAAU,CAAC,iBAAM,CAAA,MAAI,CAACN,gBAAL,EAAN,EAAD,CAAgCL,qBAAhC,CAA7B,CACH,CAEDJ,GAAG,CAACmB,WAAJ,CAAgB,KAAKX,YAArB,CAAmC,oBAAnC,WAA4DP,kBAA5D,QACH,CAtBL,oCAwBI,+BAAuB,CACnB;AACAmB,YAAY,CAAC,KAAKF,WAAN,CAAZ,CACAE,YAAY,CAAC,KAAKN,cAAN,CAAZ,CACH,CAED;AACJ;AACA;AACA,OAjCA,2BA4CI,sBAAc,IACcO,CAAAA,QADd,CAC6B,KAAKX,KADlC,CACFF,YADE,CACca,QADd,CAGV,GAAI,CAACA,QAAL,CAAe,CACX,MAAO,KAAP,CACH,CAED,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvC,MAAO,KAAP,CACH,CAED;AACAC,OAAO,CAACC,IAAR,CAAaL,QAAb,EAAwB;AAExB,0CACS,KAAK,CAAC,cADf,CAC8B,IAAI,CAAC,OADnC,EAEUM,IAAI,CAACC,SAAL,CAAeP,QAAf,CAFV,EAKH,CA/DL,sBAiEI,iBAAS,IACGb,CAAAA,YADH,CACoB,KAAKE,KADzB,CACGF,YADH,IAEGD,CAAAA,qBAFH,CAE6B,KAAKD,KAFlC,CAEGC,qBAFH,IAGGsB,CAAAA,OAHH,CAGwBrB,YAHxB,CAGGqB,OAHH,CAGYb,OAHZ,CAGwBR,YAHxB,CAGYQ,OAHZ,CAKL,GAAMc,CAAAA,IAAI,CAAG,CACTC,IAAI,CAAEf,OAAO,CAACC,WAAR,EADG,CAETe,EAAE,CAAEzB,qBAAqB,CAAG,SAAH,CAAe,SAF/B,CAAb,CAKA,0CACS,KAAK,CAAC,cADf,CAC8B,IAAI,CAAGuB,IADrC,CAC4C,GAAG,CAAG,KAAKtB,YADvD,yCAEgB,KAAK,CAAC,cAFtB,CAEqC,IAAI,CAAC,QAF1C,CAEmD,OAAO,CAAG,KAAKC,gBAFlE,6CAGW,KAAK,CAAC,cAHjB,CAGgC,IAAI,CAAC,MAHrC,EAG8CoB,OAH9C,EAIU,KAAKI,WAAL,EAJV,EAOH,CAlFL,sDA5BAC,MAAM,CAACC,cAAP,CAAsBC,aAAtB,CAAqC,MAArC,CAA6C,CAAEC,KAAK,CAAE,cAAT,CAA7C,E,qFAiHA,cAAehC,CAAAA,YAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\n\nimport { NotificationType } from 'Type/NotificationList';\nimport CSS from 'Util/CSS';\n\nimport {\n    ANIMATION_DURATION, ERROR_NOTIFICATION_LIFETIME, ERROR_TYPE, NOTIFICATION_LIFETIME\n} from './Notification.config';\n\nimport './Notification.style';\n\n/**\n * Notification block\n * @class Notification\n * @namespace Component/Notification/Component\n */\nexport class Notification extends PureComponent {\n    static propTypes = {\n        notificationId: PropTypes.string.isRequired,\n        notification: NotificationType.isRequired,\n        onHideNotification: PropTypes.func.isRequired\n    };\n\n    state = { isNotificationVisible: true };\n\n    notification = createRef();\n\n    componentDidMount() {\n        const { notification: { msgType } } = this.props;\n\n        // Make sure error notification stays a little longer\n        if (msgType.toLowerCase() === ERROR_TYPE) {\n            this.hideTimeout = setTimeout(() => this.hideNotification(), ERROR_NOTIFICATION_LIFETIME);\n        } else {\n            this.hideTimeout = setTimeout(() => this.hideNotification(), NOTIFICATION_LIFETIME);\n        }\n\n        CSS.setVariable(this.notification, 'animation-duration', `${ANIMATION_DURATION}ms`);\n    }\n\n    componentWillUnmount() {\n        // clear started timeouts, to assure we are not changing state of unmounted component\n        clearTimeout(this.hideTimeout);\n        clearTimeout(this.CSSHideTimeout);\n    }\n\n    /**\n     * Remove notification from screen\n     * @return {void\n     */\n    hideNotification = () => {\n        const { onHideNotification, notificationId } = this.props;\n        this.setState({ isNotificationVisible: false });\n\n        // give CSS time to animate\n        this.CSSHideTimeout = setTimeout(() => {\n            onHideNotification(notificationId);\n        }, ANIMATION_DURATION);\n    };\n\n    renderDebug() {\n        const { notification: { msgDebug } } = this.props;\n\n        if (!msgDebug) {\n            return null;\n        }\n\n        if (process.env.NODE_ENV === 'production') {\n            return null;\n        }\n\n        // eslint-disable-next-line no-console\n        console.warn(msgDebug); // so we know what was in notification\n\n        return (\n            <pre block=\"Notification\" elem=\"Debug\">\n                { JSON.stringify(msgDebug) }\n            </pre>\n        );\n    }\n\n    render() {\n        const { notification } = this.props;\n        const { isNotificationVisible } = this.state;\n        const { msgText, msgType } = notification;\n\n        const mods = {\n            type: msgType.toLowerCase(),\n            is: isNotificationVisible ? 'opening' : 'closing'\n        };\n\n        return (\n            <div block=\"Notification\" mods={ mods } ref={ this.notification }>\n                <button block=\"Notification\" elem=\"Button\" onClick={ this.hideNotification }>Close</button>\n                <p block=\"Notification\" elem=\"Text\">{ msgText }</p>\n                { this.renderDebug() }\n            </div>\n        );\n    }\n}\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"module"}