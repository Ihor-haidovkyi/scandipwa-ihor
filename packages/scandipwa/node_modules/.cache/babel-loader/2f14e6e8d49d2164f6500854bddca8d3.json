{"ast":null,"code":"var reactProperty=require('react-property');var styleToObject=require('style-to-object');var utilities=require(\"./utilities\");var camelCase=utilities.camelCase;var htmlProperties=reactProperty.html;var svgProperties=reactProperty.svg;var isCustomAttribute=reactProperty.isCustomAttribute;var hasOwnProperty=Object.prototype.hasOwnProperty;/**\n * Converts HTML/SVG DOM attributes to React props.\n *\n * @param  {Object} [attributes={}] - The HTML/SVG DOM attributes.\n * @return {Object}                 - The React props.\n */function attributesToProps(attributes){attributes=attributes||{};var attributeName;var attributeNameLowerCased;var attributeValue;var property;var props={};for(attributeName in attributes){attributeValue=attributes[attributeName];// ARIA (aria-*) or custom data (data-*) attribute\nif(isCustomAttribute(attributeName)){props[attributeName]=attributeValue;continue;}// convert HTML attribute to React prop\nattributeNameLowerCased=attributeName.toLowerCase();if(hasOwnProperty.call(htmlProperties,attributeNameLowerCased)){property=htmlProperties[attributeNameLowerCased];props[property.propertyName]=property.hasBooleanValue||property.hasOverloadedBooleanValue&&!attributeValue?true:attributeValue;continue;}// convert SVG attribute to React prop\nif(hasOwnProperty.call(svgProperties,attributeName)){property=svgProperties[attributeName];props[property.propertyName]=attributeValue;continue;}// preserve custom attribute if React >=16\nif(utilities.PRESERVE_CUSTOM_ATTRIBUTES){props[attributeName]=attributeValue;}}// convert inline style to object\nif(attributes.style!=null){props.style=cssToJs(attributes.style);}return props;}/**\n * Converts inline CSS style to POJO (Plain Old JavaScript Object).\n *\n * @param  {String} style - The inline CSS style.\n * @return {Object}       - The style object.\n */function cssToJs(style){var styleObject={};if(style){styleToObject(style,function(property,value){// skip CSS comment\nif(property&&value){styleObject[camelCase(property)]=value;}});}return styleObject;}module.exports=attributesToProps;","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/html-react-parser/lib/attributes-to-props.js"],"names":["reactProperty","require","styleToObject","utilities","camelCase","htmlProperties","html","svgProperties","svg","isCustomAttribute","hasOwnProperty","Object","prototype","attributesToProps","attributes","attributeName","attributeNameLowerCased","attributeValue","property","props","toLowerCase","call","propertyName","hasBooleanValue","hasOverloadedBooleanValue","PRESERVE_CUSTOM_ATTRIBUTES","style","cssToJs","styleObject","value","module","exports"],"mappings":"AAAA,GAAIA,CAAAA,aAAa,CAAGC,OAAO,CAAC,gBAAD,CAA3B,CACA,GAAIC,CAAAA,aAAa,CAAGD,OAAO,CAAC,iBAAD,CAA3B,CACA,GAAIE,CAAAA,SAAS,CAAGF,OAAO,eAAvB,CAEA,GAAIG,CAAAA,SAAS,CAAGD,SAAS,CAACC,SAA1B,CAEA,GAAIC,CAAAA,cAAc,CAAGL,aAAa,CAACM,IAAnC,CACA,GAAIC,CAAAA,aAAa,CAAGP,aAAa,CAACQ,GAAlC,CACA,GAAIC,CAAAA,iBAAiB,CAAGT,aAAa,CAACS,iBAAtC,CAEA,GAAIC,CAAAA,cAAc,CAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAtC,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,QAASG,CAAAA,iBAAT,CAA2BC,UAA3B,CAAuC,CACrCA,UAAU,CAAGA,UAAU,EAAI,EAA3B,CAEA,GAAIC,CAAAA,aAAJ,CACA,GAAIC,CAAAA,uBAAJ,CACA,GAAIC,CAAAA,cAAJ,CACA,GAAIC,CAAAA,QAAJ,CACA,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CAEA,IAAKJ,aAAL,GAAsBD,CAAAA,UAAtB,CAAkC,CAChCG,cAAc,CAAGH,UAAU,CAACC,aAAD,CAA3B,CAEA;AACA,GAAIN,iBAAiB,CAACM,aAAD,CAArB,CAAsC,CACpCI,KAAK,CAACJ,aAAD,CAAL,CAAuBE,cAAvB,CACA,SACD,CAED;AACAD,uBAAuB,CAAGD,aAAa,CAACK,WAAd,EAA1B,CACA,GAAIV,cAAc,CAACW,IAAf,CAAoBhB,cAApB,CAAoCW,uBAApC,CAAJ,CAAkE,CAChEE,QAAQ,CAAGb,cAAc,CAACW,uBAAD,CAAzB,CACAG,KAAK,CAACD,QAAQ,CAACI,YAAV,CAAL,CACEJ,QAAQ,CAACK,eAAT,EACCL,QAAQ,CAACM,yBAAT,EAAsC,CAACP,cADxC,CAEI,IAFJ,CAGIA,cAJN,CAKA,SACD,CAED;AACA,GAAIP,cAAc,CAACW,IAAf,CAAoBd,aAApB,CAAmCQ,aAAnC,CAAJ,CAAuD,CACrDG,QAAQ,CAAGX,aAAa,CAACQ,aAAD,CAAxB,CACAI,KAAK,CAACD,QAAQ,CAACI,YAAV,CAAL,CAA+BL,cAA/B,CACA,SACD,CAED;AACA,GAAId,SAAS,CAACsB,0BAAd,CAA0C,CACxCN,KAAK,CAACJ,aAAD,CAAL,CAAuBE,cAAvB,CACD,CACF,CAED;AACA,GAAIH,UAAU,CAACY,KAAX,EAAoB,IAAxB,CAA8B,CAC5BP,KAAK,CAACO,KAAN,CAAcC,OAAO,CAACb,UAAU,CAACY,KAAZ,CAArB,CACD,CAED,MAAOP,CAAAA,KAAP,CACD,CAED;AACA;AACA;AACA;AACA;AACA,GACA,QAASQ,CAAAA,OAAT,CAAiBD,KAAjB,CAAwB,CACtB,GAAIE,CAAAA,WAAW,CAAG,EAAlB,CAEA,GAAIF,KAAJ,CAAW,CACTxB,aAAa,CAACwB,KAAD,CAAQ,SAAUR,QAAV,CAAoBW,KAApB,CAA2B,CAC9C;AACA,GAAIX,QAAQ,EAAIW,KAAhB,CAAuB,CACrBD,WAAW,CAACxB,SAAS,CAACc,QAAD,CAAV,CAAX,CAAmCW,KAAnC,CACD,CACF,CALY,CAAb,CAMD,CAED,MAAOD,CAAAA,WAAP,CACD,CAEDE,MAAM,CAACC,OAAP,CAAiBlB,iBAAjB","sourcesContent":["var reactProperty = require('react-property');\nvar styleToObject = require('style-to-object');\nvar utilities = require('./utilities');\n\nvar camelCase = utilities.camelCase;\n\nvar htmlProperties = reactProperty.html;\nvar svgProperties = reactProperty.svg;\nvar isCustomAttribute = reactProperty.isCustomAttribute;\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Converts HTML/SVG DOM attributes to React props.\n *\n * @param  {Object} [attributes={}] - The HTML/SVG DOM attributes.\n * @return {Object}                 - The React props.\n */\nfunction attributesToProps(attributes) {\n  attributes = attributes || {};\n\n  var attributeName;\n  var attributeNameLowerCased;\n  var attributeValue;\n  var property;\n  var props = {};\n\n  for (attributeName in attributes) {\n    attributeValue = attributes[attributeName];\n\n    // ARIA (aria-*) or custom data (data-*) attribute\n    if (isCustomAttribute(attributeName)) {\n      props[attributeName] = attributeValue;\n      continue;\n    }\n\n    // convert HTML attribute to React prop\n    attributeNameLowerCased = attributeName.toLowerCase();\n    if (hasOwnProperty.call(htmlProperties, attributeNameLowerCased)) {\n      property = htmlProperties[attributeNameLowerCased];\n      props[property.propertyName] =\n        property.hasBooleanValue ||\n        (property.hasOverloadedBooleanValue && !attributeValue)\n          ? true\n          : attributeValue;\n      continue;\n    }\n\n    // convert SVG attribute to React prop\n    if (hasOwnProperty.call(svgProperties, attributeName)) {\n      property = svgProperties[attributeName];\n      props[property.propertyName] = attributeValue;\n      continue;\n    }\n\n    // preserve custom attribute if React >=16\n    if (utilities.PRESERVE_CUSTOM_ATTRIBUTES) {\n      props[attributeName] = attributeValue;\n    }\n  }\n\n  // convert inline style to object\n  if (attributes.style != null) {\n    props.style = cssToJs(attributes.style);\n  }\n\n  return props;\n}\n\n/**\n * Converts inline CSS style to POJO (Plain Old JavaScript Object).\n *\n * @param  {String} style - The inline CSS style.\n * @return {Object}       - The style object.\n */\nfunction cssToJs(style) {\n  var styleObject = {};\n\n  if (style) {\n    styleToObject(style, function (property, value) {\n      // skip CSS comment\n      if (property && value) {\n        styleObject[camelCase(property)] = value;\n      }\n    });\n  }\n\n  return styleObject;\n}\n\nmodule.exports = attributesToProps;\n"]},"metadata":{},"sourceType":"module"}