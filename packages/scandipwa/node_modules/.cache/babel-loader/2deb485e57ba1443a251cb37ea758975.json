{"ast":null,"code":"import _toConsumableArray from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import getPluginsForMember from\"../helpers/getPluginsForMember\";import getWrapperFromPlugin from\"../helpers/getWrapperFromPlugin\";export default(function(namespaces){return function(TargetClass,args,newTarget){// Get an instance\nvar instance=Reflect.construct(TargetClass,args,newTarget);// Get all member-property plugins\nvar namespacesPluginsConstruct=getPluginsForMember(namespaces,'member-property');// Handle plugin -> property interactions\nnamespacesPluginsConstruct.forEach(function(namespacePluginsConstruct){return Object.entries(namespacePluginsConstruct).forEach(// Apply each plugin to the instance\nfunction(_ref){var _ref2=_slicedToArray(_ref,2),memberName=_ref2[0],memberPluginsConstruct=_ref2[1];// Retrieve the original member\nvar origMember=instance[memberName]||function(){};var sortedPlugins=memberPluginsConstruct;// Wrap it into the plugins\nvar newMember=sortedPlugins.reduce(function(acc,plugin){var wrapper=getWrapperFromPlugin(plugin,origMember.name);return wrapper(acc,instance);},origMember);// Replace the original member with the new one, wrapped into the plugins\ninstance[memberName]=newMember;});});// Handle construct logic\nif(instance.__construct){// Call the \"magic\" __construct member function\ninstance.__construct.apply(instance,_toConsumableArray(args));}// Return the processed instance\nreturn instance;};});","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/@scandipwa/scandipwa-extensibility/lib/handlers/generateConstructHandler.js"],"names":["getPluginsForMember","getWrapperFromPlugin","namespaces","TargetClass","args","newTarget","instance","Reflect","construct","namespacesPluginsConstruct","forEach","namespacePluginsConstruct","Object","entries","memberName","memberPluginsConstruct","origMember","sortedPlugins","newMember","reduce","acc","plugin","wrapper","name","__construct"],"mappings":"0SAAA,MAAOA,CAAAA,mBAAP,sCACA,MAAOC,CAAAA,oBAAP,uCAEA,eAAe,SAACC,UAAD,QAAgB,UAACC,WAAD,CAAcC,IAAd,CAAoBC,SAApB,CAAkC,CAC7D;AACA,GAAMC,CAAAA,QAAQ,CAAGC,OAAO,CAACC,SAAR,CAAkBL,WAAlB,CAA+BC,IAA/B,CAAqCC,SAArC,CAAjB,CAEA;AACA,GAAMI,CAAAA,0BAA0B,CAAGT,mBAAmB,CAACE,UAAD,CAAa,iBAAb,CAAtD,CAEA;AACAO,0BAA0B,CAACC,OAA3B,CACI,SAACC,yBAAD,QAA+BC,CAAAA,MAAM,CAACC,OAAP,CAAeF,yBAAf,EAA0CD,OAA1C,CAC3B;AACA,cAA0C,kCAAxCI,UAAwC,UAA5BC,sBAA4B,UACtC;AACA,GAAMC,CAAAA,UAAU,CAAGV,QAAQ,CAACQ,UAAD,CAAR,EAAyB,UAAM,CAAE,CAApD,CACA,GAAMG,CAAAA,aAAa,CAAGF,sBAAtB,CAEA;AACA,GAAMG,CAAAA,SAAS,CAAGD,aAAa,CAACE,MAAd,CACd,SAACC,GAAD,CAAMC,MAAN,CAAiB,CACb,GAAMC,CAAAA,OAAO,CAAGrB,oBAAoB,CAACoB,MAAD,CAASL,UAAU,CAACO,IAApB,CAApC,CAEA,MAAOD,CAAAA,OAAO,CAACF,GAAD,CAAMd,QAAN,CAAd,CACH,CALa,CAMdU,UANc,CAAlB,CASA;AACAV,QAAQ,CAACQ,UAAD,CAAR,CAAuBI,SAAvB,CACH,CAnB0B,CAA/B,EADJ,EAwBA;AACA,GAAIZ,QAAQ,CAACkB,WAAb,CAA0B,CACtB;AACAlB,QAAQ,CAACkB,WAAT,OAAAlB,QAAQ,oBAAgBF,IAAhB,EAAR,CACH,CAED;AACA,MAAOE,CAAAA,QAAP,CACH,CAxCc,EAAf","sourcesContent":["import getPluginsForMember from '../helpers/getPluginsForMember';\nimport getWrapperFromPlugin from '../helpers/getWrapperFromPlugin';\n\nexport default (namespaces) => (TargetClass, args, newTarget) => {\n    // Get an instance\n    const instance = Reflect.construct(TargetClass, args, newTarget);\n\n    // Get all member-property plugins\n    const namespacesPluginsConstruct = getPluginsForMember(namespaces, 'member-property');\n\n    // Handle plugin -> property interactions\n    namespacesPluginsConstruct.forEach(\n        (namespacePluginsConstruct) => Object.entries(namespacePluginsConstruct).forEach(\n            // Apply each plugin to the instance\n            ([memberName, memberPluginsConstruct]) => {\n                // Retrieve the original member\n                const origMember = instance[memberName] || (() => {});\n                const sortedPlugins = memberPluginsConstruct;\n\n                // Wrap it into the plugins\n                const newMember = sortedPlugins.reduce(\n                    (acc, plugin) => {\n                        const wrapper = getWrapperFromPlugin(plugin, origMember.name);\n\n                        return wrapper(acc, instance);\n                    },\n                    origMember\n                );\n\n                // Replace the original member with the new one, wrapped into the plugins\n                instance[memberName] = newMember;\n            }\n        )\n    );\n\n    // Handle construct logic\n    if (instance.__construct) {\n        // Call the \"magic\" __construct member function\n        instance.__construct(...args);\n    }\n\n    // Return the processed instance\n    return instance;\n};\n"]},"metadata":{},"sourceType":"module"}