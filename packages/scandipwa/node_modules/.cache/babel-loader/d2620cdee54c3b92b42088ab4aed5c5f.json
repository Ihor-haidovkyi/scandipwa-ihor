{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import{PureComponent}from'react';import{Redirect}from'react-router';import ContentWrapper from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/ContentWrapper\";import Field from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/Field\";import Form from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/Form\";import Loader from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/Loader\";import{isSignedIn}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Auth\";import\"./ConfirmAccountPage.style\";/** @namespace Route/ConfirmAccountPage/Component */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _ConfirmAccountPage=/*#__PURE__*/function(_Extensible){_inherits(_ConfirmAccountPage,_Extensible);var _super=_createSuper(_ConfirmAccountPage);function _ConfirmAccountPage(){_classCallCheck(this,_ConfirmAccountPage);return _super.apply(this,arguments);}_createClass(_ConfirmAccountPage,[{key:\"renderForm\",value:function renderForm(){var _this$props=this.props,onConfirmAttempt=_this$props.onConfirmAttempt,onConfirmSuccess=_this$props.onConfirmSuccess,onFormError=_this$props.onFormError;// TODO: use FieldForm instead!!!\nreturn/*#__PURE__*/_checkBEM(React,Form,{mix:{block:'ConfirmAccountPage',elem:'Form'},key:\"confirm-account\",onSubmit:onConfirmAttempt,onSubmitSuccess:onConfirmSuccess,onSubmitError:onFormError},/*#__PURE__*/_checkBEM(React,Field,{type:\"text\",label:__('Email'),id:\"email\",name:\"email\",mix:{block:'ConfirmAccountPage',elem:'EmailInput'}}),/*#__PURE__*/_checkBEM(React,Field,{type:\"password\",label:__('Password'),id:\"password\",name:\"password\",validation:['notEmpty','password']}),/*#__PURE__*/_checkBEM(React,\"button\",{type:\"submit\",block:\"Button\",mix:{block:'ConfirmAccountPage',elem:'Button'}},__('Confirm your account')));}},{key:\"render\",value:function render(){var _this$props2=this.props,redirect=_this$props2.redirect,isLoading=_this$props2.isLoading;if(redirect||isSignedIn()){return/*#__PURE__*/_checkBEM(React,Redirect,{to:\"/my-account/dashboard\"});}return/*#__PURE__*/_checkBEM(React,\"main\",{block:\"ConfirmAccountPage\",\"aria-label\":__('Confirm Account Page')},/*#__PURE__*/_checkBEM(React,ContentWrapper,{wrapperMix:{block:'ConfirmAccountPage',elem:'Wrapper'},label:__('Confirm Account Action')},/*#__PURE__*/_checkBEM(React,Loader,{isLoading:isLoading}),/*#__PURE__*/_checkBEM(React,\"h1\",{block:\"ConfirmAccountPage\",elem:\"Heading\"},__('Confirm your account')),this.renderForm()));}}]);return _ConfirmAccountPage;}(Extensible(PureComponent));Object.defineProperty(_ConfirmAccountPage,'name',{value:'ConfirmAccountPage'});export var ConfirmAccountPage=middleware(_ConfirmAccountPage,\"Route/ConfirmAccountPage/Component\");export default ConfirmAccountPage;","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/route/ConfirmAccountPage/ConfirmAccountPage.component.js"],"names":["PureComponent","Redirect","ContentWrapper","Field","Form","Loader","isSignedIn","ConfirmAccountPage","props","onConfirmAttempt","onConfirmSuccess","onFormError","block","elem","__","redirect","isLoading","renderForm","Object","defineProperty","_ConfirmAccountPage","value"],"mappings":"ojBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,OAASA,aAAT,KAA8B,OAA9B,CACA,OAASC,QAAT,KAAyB,cAAzB,CAEA,MAAOC,CAAAA,cAAP,kFACA,MAAOC,CAAAA,KAAP,yEACA,MAAOC,CAAAA,IAAP,wEACA,MAAOC,CAAAA,MAAP,0EACA,OAASC,UAAT,mEAEA,mCAEA,oD,wEACA,UAAaC,CAAAA,mBAAb,oSASI,qBAAa,iBAKL,KAAKC,KALA,CAELC,gBAFK,aAELA,gBAFK,CAGLC,gBAHK,aAGLA,gBAHK,CAILC,WAJK,aAILA,WAJK,CAOT;AAEA,mCACK,IADL,EAEM,GAAG,CAAG,CAAEC,KAAK,CAAE,oBAAT,CAA+BC,IAAI,CAAE,MAArC,CAFZ,CAGM,GAAG,CAAC,iBAHV,CAIM,QAAQ,CAAGJ,gBAJjB,CAKM,eAAe,CAAGC,gBALxB,CAMM,aAAa,CAAGC,WANtB,+BAYS,KAZT,EAaU,IAAI,CAAC,MAbf,CAcU,KAAK,CAAGG,EAAE,CAAC,OAAD,CAdpB,CAeU,EAAE,CAAC,OAfb,CAgBU,IAAI,CAAC,OAhBf,CAiBU,GAAG,CAAG,CAAEF,KAAK,CAAE,oBAAT,CAA+BC,IAAI,CAAE,YAArC,CAjBhB,gCAmBS,KAnBT,EAoBU,IAAI,CAAC,UApBf,CAqBU,KAAK,CAAGC,EAAE,CAAC,UAAD,CArBpB,CAsBU,EAAE,CAAC,UAtBb,CAuBU,IAAI,CAAC,UAvBf,CAwBU,UAAU,CAAG,CAAC,UAAD,CAAa,UAAb,CAxBvB,0CA2BU,IAAI,CAAC,QA3Bf,CA4BU,KAAK,CAAC,QA5BhB,CA6BU,GAAG,CAAG,CAAEF,KAAK,CAAE,oBAAT,CAA+BC,IAAI,CAAE,QAArC,CA7BhB,EA+BcC,EAAE,CAAC,sBAAD,CA/BhB,GAmCH,CArDL,sBAuDI,iBAAS,kBAID,KAAKN,KAJJ,CAEDO,QAFC,cAEDA,QAFC,CAGDC,SAHC,cAGDA,SAHC,CAML,GAAID,QAAQ,EAAIT,UAAU,EAA1B,CAA8B,CAC1B,mCAAQ,QAAR,EAAiB,EAAE,CAAC,uBAApB,GACH,CAED,2CACU,KAAK,CAAC,oBADhB,CACqC,aAAaQ,EAAE,CAAC,sBAAD,CADpD,+BAES,cAFT,EAGU,UAAU,CAAG,CAAEF,KAAK,CAAE,oBAAT,CAA+BC,IAAI,CAAE,SAArC,CAHvB,CAIU,KAAK,CAAGC,EAAE,CAAC,wBAAD,CAJpB,+BAMa,MANb,EAMoB,SAAS,CAAGE,SANhC,sCAOgB,KAAK,CAAC,oBAPtB,CAO2C,IAAI,CAAC,SAPhD,EAQkBF,EAAE,CAAC,sBAAD,CARpB,EAUc,KAAKG,UAAL,EAVd,GAcH,CA/EL,4DAvBAC,MAAM,CAACC,cAAP,CAAsBC,mBAAtB,CAA2C,MAA3C,CAAmD,CAAEC,KAAK,CAAE,oBAAT,CAAnD,E,mGAyGA,cAAed,CAAAA,kBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { Redirect } from 'react-router';\n\nimport ContentWrapper from 'Component/ContentWrapper';\nimport Field from 'Component/Field';\nimport Form from 'Component/Form';\nimport Loader from 'Component/Loader';\nimport { isSignedIn } from 'Util/Auth';\n\nimport './ConfirmAccountPage.style';\n\n/** @namespace Route/ConfirmAccountPage/Component */\nexport class ConfirmAccountPage extends PureComponent {\n    static propTypes = {\n        redirect: PropTypes.bool.isRequired,\n        isLoading: PropTypes.bool.isRequired,\n        onConfirmAttempt: PropTypes.func.isRequired,\n        onConfirmSuccess: PropTypes.func.isRequired,\n        onFormError: PropTypes.func.isRequired\n    };\n\n    renderForm() {\n        const {\n            onConfirmAttempt,\n            onConfirmSuccess,\n            onFormError\n        } = this.props;\n\n        // TODO: use FieldForm instead!!!\n\n        return (\n            <Form\n              mix={ { block: 'ConfirmAccountPage', elem: 'Form' } }\n              key=\"confirm-account\"\n              onSubmit={ onConfirmAttempt }\n              onSubmitSuccess={ onConfirmSuccess }\n              onSubmitError={ onFormError }\n            >\n                { /*\n                    Added email field with display:none to fix warning\n                    `Password forms should have (optionally hidden) username fields for accessibility`\n                */ }\n                <Field\n                  type=\"text\"\n                  label={ __('Email') }\n                  id=\"email\"\n                  name=\"email\"\n                  mix={ { block: 'ConfirmAccountPage', elem: 'EmailInput' } }\n                />\n                <Field\n                  type=\"password\"\n                  label={ __('Password') }\n                  id=\"password\"\n                  name=\"password\"\n                  validation={ ['notEmpty', 'password'] }\n                />\n                <button\n                  type=\"submit\"\n                  block=\"Button\"\n                  mix={ { block: 'ConfirmAccountPage', elem: 'Button' } }\n                >\n                    { __('Confirm your account') }\n                </button>\n            </Form>\n        );\n    }\n\n    render() {\n        const {\n            redirect,\n            isLoading\n        } = this.props;\n\n        if (redirect || isSignedIn()) {\n            return <Redirect to=\"/my-account/dashboard\" />;\n        }\n\n        return (\n            <main block=\"ConfirmAccountPage\" aria-label={ __('Confirm Account Page') }>\n                <ContentWrapper\n                  wrapperMix={ { block: 'ConfirmAccountPage', elem: 'Wrapper' } }\n                  label={ __('Confirm Account Action') }\n                >\n                    <Loader isLoading={ isLoading } />\n                    <h1 block=\"ConfirmAccountPage\" elem=\"Heading\">\n                        { __('Confirm your account') }\n                    </h1>\n                    { this.renderForm() }\n                </ContentWrapper>\n            </main>\n        );\n    }\n}\n\nexport default ConfirmAccountPage;\n"]},"metadata":{},"sourceType":"module"}