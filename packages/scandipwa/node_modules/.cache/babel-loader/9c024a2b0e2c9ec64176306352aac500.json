{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\route\\\\ProductComparePage\\\\ProductComparePage.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { PRODUCT_COMPARE } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component/Header/Header.config\";\nimport { updateMeta } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Meta/Meta.action\";\nimport { changeNavigationState } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Navigation/Navigation.action\";\nimport { TOP_NAVIGATION_TYPE } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Navigation/Navigation.reducer\";\nimport { showNotification } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Notification/Notification.action\";\nimport DataContainer from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Request/DataContainer\";\nimport ProductComparePage from \"./ProductComparePage.component\";\nexport const BreadcrumbsDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Breadcrumbs/Breadcrumbs.dispatcher\");\n/** @namespace Route/ComparePage/Container/mapStateToProps */\n\nexport const mapStateToProps = middleware(function (state) {\n  return {\n    device: state.ConfigReducer.device,\n    isLoading: state.ProductCompareReducer.isLoading\n  };\n}, \"Route/ComparePage/Container/mapStateToProps\");\n/** @namespace Route/ComparePage/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {\n    showNotification: function (type, message) {\n      return dispatch(showNotification(type, message));\n    },\n    updateMeta: function (meta) {\n      return dispatch(updateMeta(meta));\n    },\n    setHeaderState: function (stateName) {\n      return dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, stateName));\n    },\n    updateBreadcrumbs: function (breadcrumbs) {\n      BreadcrumbsDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.update(breadcrumbs, dispatch);\n      });\n    }\n  };\n}, \"Route/ComparePage/Container/mapDispatchToProps\");\n/** @namespace Route/ComparePage/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _ProductComparePageContainer extends Extensible(DataContainer) {\n  componentDidMount() {\n    this.updateMeta();\n    this.updateBreadcrumbs();\n    this.updateHeaderState();\n  }\n\n  updateMeta() {\n    const {\n      updateMeta\n    } = this.props;\n    updateMeta({\n      title: __('Product Compare')\n    });\n  }\n\n  updateBreadcrumbs() {\n    const {\n      updateBreadcrumbs\n    } = this.props;\n    const breadcrumbs = [{\n      url: '/compare',\n      name: __('Product Compare')\n    }];\n    updateBreadcrumbs(breadcrumbs);\n  }\n\n  updateHeaderState() {\n    const {\n      setHeaderState\n    } = this.props;\n    setHeaderState({\n      name: PRODUCT_COMPARE,\n      title: __('Compare'),\n      onBackClick: function () {\n        return history.back();\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, ProductComparePage, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n_ProductComparePageContainer.propTypes = {\n  updateMeta: PropTypes.func.isRequired,\n  showNotification: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool\n};\n_ProductComparePageContainer.defaultProps = {\n  isLoading: false\n};\nObject.defineProperty(_ProductComparePageContainer, 'name', {\n  value: 'ProductComparePageContainer'\n});\n\nexport const ProductComparePageContainer = middleware(_ProductComparePageContainer, \"Route/ComparePage/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductComparePageContainer);","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/packages/scandipwa/src/route/ProductComparePage/ProductComparePage.container.js"],"names":["PropTypes","connect","PRODUCT_COMPARE","updateMeta","changeNavigationState","TOP_NAVIGATION_TYPE","showNotification","DataContainer","ProductComparePage","BreadcrumbsDispatcher","mapStateToProps","state","device","ConfigReducer","isLoading","ProductCompareReducer","mapDispatchToProps","dispatch","type","message","meta","setHeaderState","stateName","updateBreadcrumbs","breadcrumbs","then","default","dispatcher","update","ProductComparePageContainer","componentDidMount","updateHeaderState","props","title","__","url","name","onBackClick","history","back","render","propTypes","func","isRequired","bool","defaultProps","Object","defineProperty","_ProductComparePageContainer","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { PRODUCT_COMPARE } from 'Component/Header/Header.config';\nimport { updateMeta } from 'Store/Meta/Meta.action';\nimport { changeNavigationState } from 'Store/Navigation/Navigation.action';\nimport { TOP_NAVIGATION_TYPE } from 'Store/Navigation/Navigation.reducer';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport DataContainer from 'Util/Request/DataContainer';\n\nimport ProductComparePage from './ProductComparePage.component';\n\nexport const BreadcrumbsDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Breadcrumbs/Breadcrumbs.dispatcher'\n);\n\n/** @namespace Route/ComparePage/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    device: state.ConfigReducer.device,\n    isLoading: state.ProductCompareReducer.isLoading\n});\n\n/** @namespace Route/ComparePage/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showNotification: (type, message) => dispatch(showNotification(type, message)),\n    updateMeta: (meta) => dispatch(updateMeta(meta)),\n    setHeaderState: (stateName) => dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, stateName)),\n    updateBreadcrumbs: (breadcrumbs) => {\n        BreadcrumbsDispatcher.then(\n            ({ default: dispatcher }) => dispatcher.update(breadcrumbs, dispatch)\n        );\n    }\n});\n\n/** @namespace Route/ComparePage/Container */\nexport class ProductComparePageContainer extends DataContainer {\n    static propTypes = {\n        updateMeta: PropTypes.func.isRequired,\n        showNotification: PropTypes.func.isRequired,\n        isLoading: PropTypes.bool\n    };\n\n    static defaultProps = {\n        isLoading: false\n    };\n\n    componentDidMount() {\n        this.updateMeta();\n        this.updateBreadcrumbs();\n        this.updateHeaderState();\n    }\n\n    updateMeta() {\n        const { updateMeta } = this.props;\n        updateMeta({ title: __('Product Compare') });\n    }\n\n    updateBreadcrumbs() {\n        const { updateBreadcrumbs } = this.props;\n        const breadcrumbs = [\n            {\n                url: '/compare',\n                name: __('Product Compare')\n            }\n        ];\n\n        updateBreadcrumbs(breadcrumbs);\n    }\n\n    updateHeaderState() {\n        const { setHeaderState } = this.props;\n\n        setHeaderState({\n            name: PRODUCT_COMPARE,\n            title: __('Compare'),\n            onBackClick: () => history.back()\n        });\n    }\n\n    render() {\n        return (\n            <ProductComparePage\n              { ...this.props }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductComparePageContainer);\n"]},"metadata":{},"sourceType":"module"}