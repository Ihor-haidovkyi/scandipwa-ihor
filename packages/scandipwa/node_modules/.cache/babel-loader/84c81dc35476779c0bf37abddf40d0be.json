{"ast":null,"code":"import _regeneratorRuntime from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/import{canConstructResponseFromBodyStream}from\"./_private/canConstructResponseFromBodyStream.js\";import\"./_version.js\";/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */function copyResponse(_x,_x2){return _copyResponse.apply(this,arguments);}function _copyResponse(){_copyResponse=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response,modifier){var clonedResponse,responseInit,modifiedResponseInit,body;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:clonedResponse=response.clone();// Create a fresh `ResponseInit` object by cloning the headers.\nresponseInit={headers:new Headers(clonedResponse.headers),status:clonedResponse.status,statusText:clonedResponse.statusText};// Apply any user modifications.\nmodifiedResponseInit=modifier?modifier(responseInit):responseInit;// Create the new response from the body stream and `ResponseInit`\n// modifications. Note: not all browsers support the Response.body stream,\n// so fall back to reading the entire body into memory as a blob.\nif(!canConstructResponseFromBodyStream()){_context.next=7;break;}_context.t0=clonedResponse.body;_context.next=10;break;case 7:_context.next=9;return clonedResponse.blob();case 9:_context.t0=_context.sent;case 10:body=_context.t0;return _context.abrupt(\"return\",new Response(body,modifiedResponseInit));case 12:case\"end\":return _context.stop();}}},_callee);}));return _copyResponse.apply(this,arguments);}export{copyResponse};","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/workbox-core/copyResponse.js"],"names":["canConstructResponseFromBodyStream","copyResponse","response","modifier","clonedResponse","clone","responseInit","headers","Headers","status","statusText","modifiedResponseInit","body","blob","Response"],"mappings":"+RAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,OAASA,kCAAT,wDACA,sBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,QACeC,CAAAA,Y,oJAAf,iBAA4BC,QAA5B,CAAsCC,QAAtC,4KACUC,cADV,CAC2BF,QAAQ,CAACG,KAAT,EAD3B,CAEI;AACMC,YAHV,CAGyB,CACjBC,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAYJ,cAAc,CAACG,OAA3B,CADQ,CAEjBE,MAAM,CAAEL,cAAc,CAACK,MAFN,CAGjBC,UAAU,CAAEN,cAAc,CAACM,UAHV,CAHzB,CAQI;AACMC,oBATV,CASiCR,QAAQ,CAAGA,QAAQ,CAACG,YAAD,CAAX,CAA4BA,YATrE,CAUI;AACA;AACA;AAZJ,IAaiBN,kCAAkC,EAbnD,qCAcQI,cAAc,CAACQ,IAdvB,qDAcoCR,CAAAA,cAAc,CAACS,IAAf,EAdpC,0CAaUD,IAbV,6CAeW,GAAIE,CAAAA,QAAJ,CAAaF,IAAb,CAAmBD,oBAAnB,CAfX,yD,+CAiBA,OAASV,YAAT","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n"]},"metadata":{},"sourceType":"module"}