{"ast":null,"code":"import _regeneratorRuntime from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/import{logger}from\"../_private/logger.js\";import{quotaErrorCallbacks}from\"../models/quotaErrorCallbacks.js\";import\"../_version.js\";/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */function executeQuotaErrorCallbacks(){return _executeQuotaErrorCallbacks.apply(this,arguments);}function _executeQuotaErrorCallbacks(){_executeQuotaErrorCallbacks=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _iterator,_step,callback;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(process.env.NODE_ENV!=='production'){logger.log(\"About to run \".concat(quotaErrorCallbacks.size,\" \")+\"callbacks to clean up caches.\");}_iterator=_createForOfIteratorHelper(quotaErrorCallbacks);_context.prev=2;_iterator.s();case 4:if((_step=_iterator.n()).done){_context.next=11;break;}callback=_step.value;_context.next=8;return callback();case 8:if(process.env.NODE_ENV!=='production'){logger.log(callback,'is complete.');}case 9:_context.next=4;break;case 11:_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](2);_iterator.e(_context.t0);case 16:_context.prev=16;_iterator.f();return _context.finish(16);case 19:if(process.env.NODE_ENV!=='production'){logger.log('Finished running callbacks.');}case 20:case\"end\":return _context.stop();}}},_callee,null,[[2,13,16,19]]);}));return _executeQuotaErrorCallbacks.apply(this,arguments);}export{executeQuotaErrorCallbacks};","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js"],"names":["logger","quotaErrorCallbacks","executeQuotaErrorCallbacks","process","env","NODE_ENV","log","size","callback"],"mappings":"wcAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,OAASA,MAAT,6BACA,OAASC,mBAAT,wCACA,uBACA;AACA;AACA;AACA;AACA;AACA;AACA,G,QACeC,CAAAA,0B,wLAAf,gKACI,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvCL,MAAM,CAACM,GAAP,CAAW,uBAAgBL,mBAAmB,CAACM,IAApC,qCAAX,EAEH,CAJL,qCAK2BN,mBAL3B,8FAKeO,QALf,mCAMcA,CAAAA,QAAQ,EANtB,QAOQ,GAAIL,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvCL,MAAM,CAACM,GAAP,CAAWE,QAAX,CAAqB,cAArB,EACH,CATT,yNAWI,GAAIL,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACvCL,MAAM,CAACM,GAAP,CAAW,6BAAX,EACH,CAbL,2E,6DAeA,OAASJ,0BAAT","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n"]},"metadata":{},"sourceType":"module"}