{"ast":null,"code":"import _objectSpread from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _get from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";import _getPrototypeOf from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import{PureComponent}from'react';import{connect}from'react-redux';import{ERROR_TYPE}from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/Notification/Notification.config\";import{updateMeta as _updateMeta}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Meta/Meta.action\";import{showNotification as _showNotification}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";import{LocationType}from\"/home/marketihor/scandipwa/packages/scandipwa/src/type/Router\";import{convertQueryStringToKeyValuePairs}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Url\";import ConfirmAccountPage from\"./ConfirmAccountPage.component\";export var BreadcrumbsDispatcher=import(/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Breadcrumbs/Breadcrumbs.dispatcher\");export var MyAccountDispatcher=import(/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\"/home/marketihor/scandipwa/packages/scandipwa/src/store/MyAccount/MyAccount.dispatcher\");/** @namespace Route/ConfirmAccountPage/Container/mapStateToProps */export var mapStateToProps=middleware(function(){return{};},\"Route/ConfirmAccountPage/Container/mapStateToProps\");/** @namespace Route/ConfirmAccountPage/Container/mapDispatchToProps */export var mapDispatchToProps=middleware(function(dispatch){return{updateBreadcrumbs:function updateBreadcrumbs(breadcrumbs){BreadcrumbsDispatcher.then(function(_ref){var dispatcher=_ref.default;return dispatcher.update(breadcrumbs,dispatch);});},updateMeta:function updateMeta(meta){return dispatch(_updateMeta(meta));},confirmAccount:function confirmAccount(options){return MyAccountDispatcher.then(function(_ref2){var dispatcher=_ref2.default;return dispatcher.confirmAccount(options,dispatch);});},showNotification:function showNotification(type,message){return dispatch(_showNotification(type,message));},signIn:function signIn(options){return MyAccountDispatcher.then(function(_ref3){var dispatcher=_ref3.default;return dispatcher.signIn(options,dispatch);});}};},\"Route/ConfirmAccountPage/Container/mapDispatchToProps\");/** @namespace Route/ConfirmAccountPage/Container */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _ConfirmAccountPageContainer=/*#__PURE__*/function(_Extensible){_inherits(_ConfirmAccountPageContainer,_Extensible);var _super=_createSuper(_ConfirmAccountPageContainer);function _ConfirmAccountPageContainer(){var _this;_classCallCheck(this,_ConfirmAccountPageContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.containerFunctions={onConfirmAttempt:_this.onConfirmAttempt.bind(_assertThisInitialized(_this)),onConfirmSuccess:_this.onConfirmSuccess.bind(_assertThisInitialized(_this)),onFormError:_this.onFormError.bind(_assertThisInitialized(_this))};return _this;}_createClass(_ConfirmAccountPageContainer,[{key:\"__construct\",value:function __construct(props){_get(_getPrototypeOf(_ConfirmAccountPageContainer.prototype),\"__construct\",this).call(this,props);this.state={redirect:false,isLoading:false};}},{key:\"componentDidMount\",value:function componentDidMount(){var updateMeta=this.props.updateMeta;updateMeta({title:__('Confirm account')});this._updateBreadcrumbs();}},{key:\"onConfirmAttempt\",value:function onConfirmAttempt(){this.setState({isLoading:true});}},{key:\"onConfirmSuccess\",value:function onConfirmSuccess(fields){var _this2=this;var _this$props=this.props,search=_this$props.location.search,confirmAccount=_this$props.confirmAccount,signIn=_this$props.signIn;var password=fields.password;var options=convertQueryStringToKeyValuePairs(search);var email=options.email;confirmAccount(_objectSpread(_objectSpread({},options),{},{password:password})).then(/** @namespace Route/ConfirmAccountPage/Container/confirmAccountThen */middleware(function(data){var _ref4=data||{},msgType=_ref4.msgType;if(msgType===ERROR_TYPE){// error message is handled in the dispatcher\n// just abort the chain\nreturn Promise.reject();}return signIn({email:email,password:password});},\"Route/ConfirmAccountPage/Container/confirmAccountThen\")).then(/** @namespace Route/ConfirmAccountPage/Container/confirmAccountThenThen */middleware(function(){return _this2.setState({redirect:true});},\"Route/ConfirmAccountPage/Container/confirmAccountThenThen\")).catch(/** @namespace Route/ConfirmAccountPage/Container/confirmAccountThenThenCatch */middleware(function(){return _this2.setState({isLoading:false});},\"Route/ConfirmAccountPage/Container/confirmAccountThenThenCatch\"));}},{key:\"onFormError\",value:function onFormError(){this.setState({isLoading:false});}},{key:\"_updateBreadcrumbs\",value:function _updateBreadcrumbs(){var updateBreadcrumbs=this.props.updateBreadcrumbs;var breadcrumbs=[{url:'/account/confirmAccount',name:__('Confirm Account')}];updateBreadcrumbs(breadcrumbs);}},{key:\"render\",value:function render(){return/*#__PURE__*/_checkBEM(React,ConfirmAccountPage,Object.assign({},this.props,this.containerFunctions,this.state));}}]);return _ConfirmAccountPageContainer;}(Extensible(PureComponent));Object.defineProperty(_ConfirmAccountPageContainer,'name',{value:'ConfirmAccountPageContainer'});export var ConfirmAccountPageContainer=middleware(_ConfirmAccountPageContainer,\"Route/ConfirmAccountPage/Container\");export default connect(mapStateToProps,mapDispatchToProps)(ConfirmAccountPageContainer);","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/route/ConfirmAccountPage/ConfirmAccountPage.container.js"],"names":["PureComponent","connect","ERROR_TYPE","updateMeta","showNotification","LocationType","convertQueryStringToKeyValuePairs","ConfirmAccountPage","BreadcrumbsDispatcher","MyAccountDispatcher","mapStateToProps","mapDispatchToProps","dispatch","updateBreadcrumbs","breadcrumbs","then","dispatcher","default","update","meta","confirmAccount","options","type","message","signIn","ConfirmAccountPageContainer","containerFunctions","onConfirmAttempt","bind","onConfirmSuccess","onFormError","props","state","redirect","isLoading","title","__","_updateBreadcrumbs","setState","fields","search","location","password","email","data","msgType","Promise","reject","catch","url","name","Object","defineProperty","_ConfirmAccountPageContainer","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { ERROR_TYPE } from 'Component/Notification/Notification.config';\nimport { updateMeta } from 'Store/Meta/Meta.action';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { LocationType } from 'Type/Router';\nimport { convertQueryStringToKeyValuePairs } from 'Util/Url';\n\nimport ConfirmAccountPage from './ConfirmAccountPage.component';\n\nexport const BreadcrumbsDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Breadcrumbs/Breadcrumbs.dispatcher'\n);\nexport const MyAccountDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/MyAccount/MyAccount.dispatcher'\n);\n\n/** @namespace Route/ConfirmAccountPage/Container/mapStateToProps */\nexport const mapStateToProps = () => ({});\n\n/** @namespace Route/ConfirmAccountPage/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    updateBreadcrumbs: (breadcrumbs) => {\n        BreadcrumbsDispatcher.then(\n            ({ default: dispatcher }) => dispatcher.update(breadcrumbs, dispatch)\n        );\n    },\n    updateMeta: (meta) => dispatch(updateMeta(meta)),\n    confirmAccount: (options) => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.confirmAccount(options, dispatch)\n    ),\n    showNotification: (type, message) => dispatch(showNotification(type, message)),\n    signIn: (options) => MyAccountDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.signIn(options, dispatch)\n    )\n});\n\n/** @namespace Route/ConfirmAccountPage/Container */\nexport class ConfirmAccountPageContainer extends PureComponent {\n    static propTypes = {\n        location: LocationType.isRequired,\n        signIn: PropTypes.func.isRequired,\n        updateMeta: PropTypes.func.isRequired,\n        confirmAccount: PropTypes.func.isRequired,\n        showNotification: PropTypes.func.isRequired,\n        updateBreadcrumbs: PropTypes.func.isRequired\n    };\n\n    containerFunctions = {\n        onConfirmAttempt: this.onConfirmAttempt.bind(this),\n        onConfirmSuccess: this.onConfirmSuccess.bind(this),\n        onFormError: this.onFormError.bind(this)\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        this.state = {\n            redirect: false,\n            isLoading: false\n        };\n    }\n\n    componentDidMount() {\n        const { updateMeta } = this.props;\n        updateMeta({ title: __('Confirm account') });\n\n        this._updateBreadcrumbs();\n    }\n\n    onConfirmAttempt() {\n        this.setState({ isLoading: true });\n    }\n\n    onConfirmSuccess(fields) {\n        const {\n            location: { search },\n            confirmAccount,\n            signIn\n        } = this.props;\n\n        const { password } = fields;\n\n        const options = convertQueryStringToKeyValuePairs(search);\n        const { email } = options;\n\n        confirmAccount({ ...options, password })\n            .then(\n                /** @namespace Route/ConfirmAccountPage/Container/confirmAccountThen */\n                (data) => {\n                    const { msgType } = data || {};\n\n                    if (msgType === ERROR_TYPE) {\n                        // error message is handled in the dispatcher\n                        // just abort the chain\n                        return Promise.reject();\n                    }\n\n                    return signIn({ email, password });\n                }\n            )\n            .then(\n                /** @namespace Route/ConfirmAccountPage/Container/confirmAccountThenThen */\n                () => this.setState({ redirect: true })\n            )\n            .catch(\n                /** @namespace Route/ConfirmAccountPage/Container/confirmAccountThenThenCatch */\n                () => this.setState({ isLoading: false })\n            );\n    }\n\n    onFormError() {\n        this.setState({ isLoading: false });\n    }\n\n    _updateBreadcrumbs() {\n        const { updateBreadcrumbs } = this.props;\n        const breadcrumbs = [\n            {\n                url: '/account/confirmAccount',\n                name: __('Confirm Account')\n            }\n        ];\n\n        updateBreadcrumbs(breadcrumbs);\n    }\n\n    render() {\n        return (\n            <ConfirmAccountPage\n              { ...this.props }\n              { ...this.containerFunctions }\n              { ...this.state }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmAccountPageContainer);\n"]},"metadata":{},"sourceType":"module"}