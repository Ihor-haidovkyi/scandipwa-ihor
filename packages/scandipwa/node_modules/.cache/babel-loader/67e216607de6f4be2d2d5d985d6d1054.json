{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport ContactFormQuery from \"/home/marketihor/scandipwa/packages/scandipwa/src/query/ContactForm.query\";\nimport { showNotification } from \"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";\nimport { fetchMutation, getErrorMessage } from \"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request\";\nimport { updateContactForm } from \"./ContactForm.action\";\n/**\n * ContactForm Dispatcher\n * @class ContactFormDispatcher\n * @extends QueryDispatcher\n * @namespace Store/ContactForm/Dispatcher\n */\n\nexport class _ContactFormDispatcher extends Extensible() {\n  prepareRequest(options, dispatch) {\n    const mutation = ContactFormQuery.getSendContactFormMutation(options);\n    dispatch(updateContactForm({\n      isLoading: true\n    }));\n    return fetchMutation(mutation).then(\n    /** @namespace Store/ContactForm/Dispatcher/fetchMutationThen */\n    middleware(function (data) {\n      dispatch(showNotification('success', data.contactForm.message));\n      dispatch(updateContactForm({\n        isLoading: false\n      }));\n    }, \"Store/ContactForm/Dispatcher/fetchMutationThen\"),\n    /** @namespace Store/ContactForm/Dispatcher/fetchMutationError */\n    middleware(function (error) {\n      dispatch(showNotification('error', getErrorMessage(error)));\n      dispatch(updateContactForm({\n        isLoading: false\n      }));\n    }, \"Store/ContactForm/Dispatcher/fetchMutationError\"));\n  }\n\n}\nObject.defineProperty(_ContactFormDispatcher, 'name', {\n  value: 'ContactFormDispatcher'\n});\n\nexport const ContactFormDispatcher = middleware(_ContactFormDispatcher, \"Store/ContactForm/Dispatcher\");\nexport default new ContactFormDispatcher();","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/store/ContactForm/ContactForm.dispatcher.js"],"names":["ContactFormQuery","showNotification","fetchMutation","getErrorMessage","updateContactForm","ContactFormDispatcher","prepareRequest","options","dispatch","mutation","getSendContactFormMutation","isLoading","then","data","contactForm","message","error","Object","defineProperty","_ContactFormDispatcher","value"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,gBAAP;AACA,SAASC,gBAAT;AACA,SAASC,aAAT,EAAwBC,eAAxB;AAEA,SAASC,iBAAT;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,sBAAN,sBAA4B;AAC/BC,EAAAA,cAAc,CAACC,OAAD,EAAUC,QAAV,EAAoB;AAC9B,UAAMC,QAAQ,GAAGT,gBAAgB,CAACU,0BAAjB,CAA4CH,OAA5C,CAAjB;AAEAC,IAAAA,QAAQ,CAACJ,iBAAiB,CAAC;AACvBO,MAAAA,SAAS,EAAE;AADY,KAAD,CAAlB,CAAR;AAIA,WAAOT,aAAa,CAACO,QAAD,CAAb,CACFG,IADE;AAEC;AAFD,eAGC,UAACC,IAAD,EAAU;AACNL,MAAAA,QAAQ,CAACP,gBAAgB,CAAC,SAAD,EAAYY,IAAI,CAACC,WAAL,CAAiBC,OAA7B,CAAjB,CAAR;AACAP,MAAAA,QAAQ,CAACJ,iBAAiB,CAAC;AACvBO,QAAAA,SAAS,EAAE;AADY,OAAD,CAAlB,CAAR;AAGH,KARF;AASC;AATD,eAUC,UAACK,KAAD,EAAW;AACPR,MAAAA,QAAQ,CAACP,gBAAgB,CAAC,OAAD,EAAUE,eAAe,CAACa,KAAD,CAAzB,CAAjB,CAAR;AACAR,MAAAA,QAAQ,CAACJ,iBAAiB,CAAC;AACvBO,QAAAA,SAAS,EAAE;AADY,OAAD,CAAlB,CAAR;AAGH,KAfF,qDAAP;AAiBH;;AAzB8B;AAvBnCM,MAAM,CAACC,cAAP,CAAsBC,sBAAtB,EAA8C,MAA9C,EAAsD;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAtD;;;AAmDA,eAAe,IAAIf,qBAAJ,EAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport ContactFormQuery from 'Query/ContactForm.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { fetchMutation, getErrorMessage } from 'Util/Request';\n\nimport { updateContactForm } from './ContactForm.action';\n\n/**\n * ContactForm Dispatcher\n * @class ContactFormDispatcher\n * @extends QueryDispatcher\n * @namespace Store/ContactForm/Dispatcher\n */\nexport class ContactFormDispatcher {\n    prepareRequest(options, dispatch) {\n        const mutation = ContactFormQuery.getSendContactFormMutation(options);\n\n        dispatch(updateContactForm({\n            isLoading: true\n        }));\n\n        return fetchMutation(mutation)\n            .then(\n                /** @namespace Store/ContactForm/Dispatcher/fetchMutationThen */\n                (data) => {\n                    dispatch(showNotification('success', data.contactForm.message));\n                    dispatch(updateContactForm({\n                        isLoading: false\n                    }));\n                },\n                /** @namespace Store/ContactForm/Dispatcher/fetchMutationError */\n                (error) => {\n                    dispatch(showNotification('error', getErrorMessage(error)));\n                    dispatch(updateContactForm({\n                        isLoading: false\n                    }));\n                }\n            );\n    }\n}\n\nexport default new ContactFormDispatcher();\n"]},"metadata":{},"sourceType":"module"}