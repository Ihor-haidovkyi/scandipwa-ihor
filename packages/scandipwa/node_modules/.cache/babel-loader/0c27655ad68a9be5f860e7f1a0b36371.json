{"ast":null,"code":"var CASE_SENSITIVE_TAG_NAMES=require(\"./constants\").CASE_SENSITIVE_TAG_NAMES;var caseSensitiveTagNamesMap={};var tagName;for(var i=0,len=CASE_SENSITIVE_TAG_NAMES.length;i<len;i++){tagName=CASE_SENSITIVE_TAG_NAMES[i];caseSensitiveTagNamesMap[tagName.toLowerCase()]=tagName;}/**\n * Gets case-sensitive tag name.\n *\n * @param  {String}           tagName - The lowercase tag name.\n * @return {String|undefined}\n */function getCaseSensitiveTagName(tagName){return caseSensitiveTagNamesMap[tagName];}/**\n * Formats DOM attributes to a hash map.\n *\n * @param  {NamedNodeMap} attributes - The list of attributes.\n * @return {Object}                  - A map of attribute name to value.\n */function formatAttributes(attributes){var result={};var attribute;// `NamedNodeMap` is array-like\nfor(var i=0,len=attributes.length;i<len;i++){attribute=attributes[i];result[attribute.name]=attribute.value;}return result;}/**\n * Corrects the tag name if it is case-sensitive (SVG).\n * Otherwise, returns the lowercase tag name (HTML).\n *\n * @param  {String} tagName - The lowercase tag name.\n * @return {String}         - The formatted tag name.\n */function formatTagName(tagName){tagName=tagName.toLowerCase();var caseSensitiveTagName=getCaseSensitiveTagName(tagName);if(caseSensitiveTagName){return caseSensitiveTagName;}return tagName;}/**\n * Formats the browser DOM nodes to mimic the output of `htmlparser2.parseDOM()`.\n *\n * @param  {NodeList} nodes        - The DOM nodes.\n * @param  {Object}   [parentObj]  - The formatted parent node.\n * @param  {String}   [directive]  - The directive.\n * @return {Object[]}              - The formatted DOM object.\n */function formatDOM(nodes,parentObj,directive){parentObj=parentObj||null;var result=[];var node;var prevNode;var nodeObj;// `NodeList` is array-like\nfor(var i=0,len=nodes.length;i<len;i++){node=nodes[i];// reset\nnodeObj={next:null,prev:result[i-1]||null,parent:parentObj};// set the next node for the previous node (if applicable)\nprevNode=result[i-1];if(prevNode){prevNode.next=nodeObj;}// set the node name if it's not \"#text\" or \"#comment\"\n// e.g., \"div\"\nif(node.nodeName[0]!=='#'){nodeObj.name=formatTagName(node.nodeName);// also, nodes of type \"tag\" have \"attribs\"\nnodeObj.attribs={};// default\nif(node.attributes&&node.attributes.length){nodeObj.attribs=formatAttributes(node.attributes);}}// set the node type\n// e.g., \"tag\"\nswitch(node.nodeType){// 1 = element\ncase 1:if(nodeObj.name==='script'||nodeObj.name==='style'){nodeObj.type=nodeObj.name;}else{nodeObj.type='tag';}// recursively format the children\nnodeObj.children=formatDOM(node.childNodes,nodeObj);break;// 2 = attribute\n// 3 = text\ncase 3:nodeObj.type='text';nodeObj.data=node.nodeValue;break;// 8 = comment\ncase 8:nodeObj.type='comment';nodeObj.data=node.nodeValue;break;}result.push(nodeObj);}if(directive){result.unshift({name:directive.substring(0,directive.indexOf(' ')).toLowerCase(),data:directive,type:'directive',next:result[0]?result[0]:null,prev:null,parent:parentObj});if(result[1]){result[1].prev=result[0];}}return result;}/**\n * Detects IE with or without version.\n *\n * @param  {Number}  [version] - The IE version to detect.\n * @return {Boolean}           - Whether IE or the version has been detected.\n */function isIE(version){if(version){return document.documentMode===version;}return /(MSIE |Trident\\/|Edge\\/)/.test(navigator.userAgent);}module.exports={formatAttributes:formatAttributes,formatDOM:formatDOM,isIE:isIE};","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/html-dom-parser/lib/utilities.js"],"names":["CASE_SENSITIVE_TAG_NAMES","require","caseSensitiveTagNamesMap","tagName","i","len","length","toLowerCase","getCaseSensitiveTagName","formatAttributes","attributes","result","attribute","name","value","formatTagName","caseSensitiveTagName","formatDOM","nodes","parentObj","directive","node","prevNode","nodeObj","next","prev","parent","nodeName","attribs","nodeType","type","children","childNodes","data","nodeValue","push","unshift","substring","indexOf","isIE","version","document","documentMode","test","navigator","userAgent","module","exports"],"mappings":"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","sourcesContent":["var CASE_SENSITIVE_TAG_NAMES = require('./constants').CASE_SENSITIVE_TAG_NAMES;\n\nvar caseSensitiveTagNamesMap = {};\nvar tagName;\nfor (var i = 0, len = CASE_SENSITIVE_TAG_NAMES.length; i < len; i++) {\n  tagName = CASE_SENSITIVE_TAG_NAMES[i];\n  caseSensitiveTagNamesMap[tagName.toLowerCase()] = tagName;\n}\n\n/**\n * Gets case-sensitive tag name.\n *\n * @param  {String}           tagName - The lowercase tag name.\n * @return {String|undefined}\n */\nfunction getCaseSensitiveTagName(tagName) {\n  return caseSensitiveTagNamesMap[tagName];\n}\n\n/**\n * Formats DOM attributes to a hash map.\n *\n * @param  {NamedNodeMap} attributes - The list of attributes.\n * @return {Object}                  - A map of attribute name to value.\n */\nfunction formatAttributes(attributes) {\n  var result = {};\n  var attribute;\n  // `NamedNodeMap` is array-like\n  for (var i = 0, len = attributes.length; i < len; i++) {\n    attribute = attributes[i];\n    result[attribute.name] = attribute.value;\n  }\n  return result;\n}\n\n/**\n * Corrects the tag name if it is case-sensitive (SVG).\n * Otherwise, returns the lowercase tag name (HTML).\n *\n * @param  {String} tagName - The lowercase tag name.\n * @return {String}         - The formatted tag name.\n */\nfunction formatTagName(tagName) {\n  tagName = tagName.toLowerCase();\n  var caseSensitiveTagName = getCaseSensitiveTagName(tagName);\n  if (caseSensitiveTagName) {\n    return caseSensitiveTagName;\n  }\n  return tagName;\n}\n\n/**\n * Formats the browser DOM nodes to mimic the output of `htmlparser2.parseDOM()`.\n *\n * @param  {NodeList} nodes        - The DOM nodes.\n * @param  {Object}   [parentObj]  - The formatted parent node.\n * @param  {String}   [directive]  - The directive.\n * @return {Object[]}              - The formatted DOM object.\n */\nfunction formatDOM(nodes, parentObj, directive) {\n  parentObj = parentObj || null;\n\n  var result = [];\n  var node;\n  var prevNode;\n  var nodeObj;\n\n  // `NodeList` is array-like\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    node = nodes[i];\n    // reset\n    nodeObj = {\n      next: null,\n      prev: result[i - 1] || null,\n      parent: parentObj\n    };\n\n    // set the next node for the previous node (if applicable)\n    prevNode = result[i - 1];\n    if (prevNode) {\n      prevNode.next = nodeObj;\n    }\n\n    // set the node name if it's not \"#text\" or \"#comment\"\n    // e.g., \"div\"\n    if (node.nodeName[0] !== '#') {\n      nodeObj.name = formatTagName(node.nodeName);\n      // also, nodes of type \"tag\" have \"attribs\"\n      nodeObj.attribs = {}; // default\n      if (node.attributes && node.attributes.length) {\n        nodeObj.attribs = formatAttributes(node.attributes);\n      }\n    }\n\n    // set the node type\n    // e.g., \"tag\"\n    switch (node.nodeType) {\n      // 1 = element\n      case 1:\n        if (nodeObj.name === 'script' || nodeObj.name === 'style') {\n          nodeObj.type = nodeObj.name;\n        } else {\n          nodeObj.type = 'tag';\n        }\n        // recursively format the children\n        nodeObj.children = formatDOM(node.childNodes, nodeObj);\n        break;\n      // 2 = attribute\n      // 3 = text\n      case 3:\n        nodeObj.type = 'text';\n        nodeObj.data = node.nodeValue;\n        break;\n      // 8 = comment\n      case 8:\n        nodeObj.type = 'comment';\n        nodeObj.data = node.nodeValue;\n        break;\n    }\n\n    result.push(nodeObj);\n  }\n\n  if (directive) {\n    result.unshift({\n      name: directive.substring(0, directive.indexOf(' ')).toLowerCase(),\n      data: directive,\n      type: 'directive',\n      next: result[0] ? result[0] : null,\n      prev: null,\n      parent: parentObj\n    });\n\n    if (result[1]) {\n      result[1].prev = result[0];\n    }\n  }\n\n  return result;\n}\n\n/**\n * Detects IE with or without version.\n *\n * @param  {Number}  [version] - The IE version to detect.\n * @return {Boolean}           - Whether IE or the version has been detected.\n */\nfunction isIE(version) {\n  if (version) {\n    return document.documentMode === version;\n  }\n  return /(MSIE |Trident\\/|Edge\\/)/.test(navigator.userAgent);\n}\n\nmodule.exports = {\n  formatAttributes: formatAttributes,\n  formatDOM: formatDOM,\n  isIE: isIE\n};\n"]},"metadata":{},"sourceType":"module"}