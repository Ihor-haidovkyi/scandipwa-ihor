{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import PropTypes from'prop-types';import{connect}from'react-redux';import SliderQuery from\"/home/marketihor/scandipwa/packages/scandipwa/src/query/Slider.query\";import{showNotification as _showNotification}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";import DataContainer from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request/DataContainer\";import SliderWidget from\"./SliderWidget.component\";/** @namespace Component/SliderWidget/Container/mapStateToProps */export var mapStateToProps=middleware(function(state){return{device:state.ConfigReducer.device};},\"Component/SliderWidget/Container/mapStateToProps\");/** @namespace Component/SliderWidget/Container/mapDispatchToProps */export var mapDispatchToProps=middleware(function(dispatch){return{showNotification:function showNotification(type,title,error){return dispatch(_showNotification(type,title,error));}};},\"Component/SliderWidget/Container/mapDispatchToProps\");/** @namespace Component/SliderWidget/Container */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _SliderWidgetContainer=/*#__PURE__*/function(_Extensible){_inherits(_SliderWidgetContainer,_Extensible);var _super=_createSuper(_SliderWidgetContainer);function _SliderWidgetContainer(){var _this;_classCallCheck(this,_SliderWidgetContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={slider:{slideSpeed:0,slides:[{image:'',slide_text:'',isPlaceholder:true}]}};return _this;}_createClass(_SliderWidgetContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.requestSlider();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var sliderId=this.props.sliderId;var pSliderId=prevProps.sliderId;if(sliderId!==pSliderId){this.requestSlider();}}},{key:\"requestSlider\",value:function requestSlider(){var _this2=this;var _this$props=this.props,sliderId=_this$props.sliderId,showNotification=_this$props.showNotification;this.fetchData([SliderQuery.getQuery({sliderId:sliderId})],function(_ref){var slider=_ref.slider;return _this2.setState({slider:slider});},function(e){return showNotification('error',__('Error fetching Slider!'),e);});}},{key:\"_getGalleryPictures\",value:function _getGalleryPictures(){var gallery=this.state.gallery;return gallery;}},{key:\"render\",value:function render(){return/*#__PURE__*/_checkBEM(React,SliderWidget,Object.assign({},this.props,this.state));}}]);return _SliderWidgetContainer;}(Extensible(DataContainer));_SliderWidgetContainer.propTypes={sliderId:PropTypes.number.isRequired,showNotification:PropTypes.func.isRequired};Object.defineProperty(_SliderWidgetContainer,'name',{value:'SliderWidgetContainer'});export var SliderWidgetContainer=middleware(_SliderWidgetContainer,\"Component/SliderWidget/Container\");export default connect(mapStateToProps,mapDispatchToProps)(SliderWidgetContainer);","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/SliderWidget/SliderWidget.container.js"],"names":["PropTypes","connect","SliderQuery","showNotification","DataContainer","SliderWidget","mapStateToProps","state","device","ConfigReducer","mapDispatchToProps","dispatch","type","title","error","SliderWidgetContainer","slider","slideSpeed","slides","image","slide_text","isPlaceholder","requestSlider","prevProps","sliderId","props","pSliderId","fetchData","getQuery","setState","e","__","gallery","propTypes","number","isRequired","func","Object","defineProperty","_SliderWidgetContainer","value"],"mappings":"ojBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAOA,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,WAAP,4EACA,OAASC,gBAAgB,GAAhBA,CAAAA,iBAAT,gGACA,MAAOC,CAAAA,aAAP,oFAEA,MAAOC,CAAAA,YAAP,gCAEA,kEACA,MAAO,IAAMC,CAAAA,eAAe,YAAG,SAACC,KAAD,QAAY,CACvCC,MAAM,CAAED,KAAK,CAACE,aAAN,CAAoBD,MADW,CAAZ,EAAH,oDAArB,CAIP,qEACA,MAAO,IAAME,CAAAA,kBAAkB,YAAG,SAACC,QAAD,QAAe,CAC7CR,gBAAgB,CAAE,0BAACS,IAAD,CAAOC,KAAP,CAAcC,KAAd,QAAwBH,CAAAA,QAAQ,CAACR,iBAAgB,CAACS,IAAD,CAAOC,KAAP,CAAcC,KAAd,CAAjB,CAAhC,EAD2B,CAAf,EAAH,uDAAxB,CAIP,kD,wEACA,UAAaC,CAAAA,sBAAb,6XAMIR,KANJ,CAMY,CACJS,MAAM,CAAE,CACJC,UAAU,CAAE,CADR,CAEJC,MAAM,CAAE,CAAC,CAAEC,KAAK,CAAE,EAAT,CAAaC,UAAU,CAAE,EAAzB,CAA6BC,aAAa,CAAE,IAA5C,CAAD,CAFJ,CADJ,CANZ,mFAaI,4BAAoB,CAChB,KAAKC,aAAL,GACH,CAfL,kCAiBI,4BAAmBC,SAAnB,CAA8B,IAClBC,CAAAA,QADkB,CACL,KAAKC,KADA,CAClBD,QADkB,IAERE,CAAAA,SAFQ,CAEMH,SAFN,CAElBC,QAFkB,CAI1B,GAAIA,QAAQ,GAAKE,SAAjB,CAA4B,CACxB,KAAKJ,aAAL,GACH,CACJ,CAxBL,6BA0BI,wBAAgB,iCAC2B,KAAKG,KADhC,CACJD,QADI,aACJA,QADI,CACMrB,gBADN,aACMA,gBADN,CAGZ,KAAKwB,SAAL,CACI,CAACzB,WAAW,CAAC0B,QAAZ,CAAqB,CAAEJ,QAAQ,CAARA,QAAF,CAArB,CAAD,CADJ,CAEI,kBAAGR,CAAAA,MAAH,MAAGA,MAAH,OAAgB,CAAA,MAAI,CAACa,QAAL,CAAc,CAAEb,MAAM,CAANA,MAAF,CAAd,CAAhB,EAFJ,CAGI,SAACc,CAAD,QAAO3B,CAAAA,gBAAgB,CAAC,OAAD,CAAU4B,EAAE,CAAC,wBAAD,CAAZ,CAAwCD,CAAxC,CAAvB,EAHJ,EAKH,CAlCL,mCAoCI,8BAAsB,IACVE,CAAAA,OADU,CACE,KAAKzB,KADP,CACVyB,OADU,CAElB,MAAOA,CAAAA,OAAP,CACH,CAvCL,sBAyCI,iBAAS,CACL,mCACK,YADL,kBAEW,KAAKP,KAFhB,CAGW,KAAKlB,KAHhB,GAMH,CAhDL,+DAAaQ,sB,CACFkB,S,CAAY,CACfT,QAAQ,CAAExB,SAAS,CAACkC,MAAV,CAAiBC,UADZ,CAEfhC,gBAAgB,CAAEH,SAAS,CAACoC,IAAV,CAAeD,UAFlB,C,CAhCvBE,MAAM,CAACC,cAAP,CAAsBC,sBAAtB,CAA8C,MAA9C,CAAsD,CAAEC,KAAK,CAAE,uBAAT,CAAtD,E,uGAkFA,cAAevC,CAAAA,OAAO,CAACK,eAAD,CAAkBI,kBAAlB,CAAP,CAA6CK,qBAA7C,CAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport SliderQuery from 'Query/Slider.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport DataContainer from 'Util/Request/DataContainer';\n\nimport SliderWidget from './SliderWidget.component';\n\n/** @namespace Component/SliderWidget/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    device: state.ConfigReducer.device\n});\n\n/** @namespace Component/SliderWidget/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showNotification: (type, title, error) => dispatch(showNotification(type, title, error))\n});\n\n/** @namespace Component/SliderWidget/Container */\nexport class SliderWidgetContainer extends DataContainer {\n    static propTypes = {\n        sliderId: PropTypes.number.isRequired,\n        showNotification: PropTypes.func.isRequired\n    };\n\n    state = {\n        slider: {\n            slideSpeed: 0,\n            slides: [{ image: '', slide_text: '', isPlaceholder: true }]\n        }\n    };\n\n    componentDidMount() {\n        this.requestSlider();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { sliderId } = this.props;\n        const { sliderId: pSliderId } = prevProps;\n\n        if (sliderId !== pSliderId) {\n            this.requestSlider();\n        }\n    }\n\n    requestSlider() {\n        const { sliderId, showNotification } = this.props;\n\n        this.fetchData(\n            [SliderQuery.getQuery({ sliderId })],\n            ({ slider }) => this.setState({ slider }),\n            (e) => showNotification('error', __('Error fetching Slider!'), e)\n        );\n    }\n\n    _getGalleryPictures() {\n        const { gallery } = this.state;\n        return gallery;\n    }\n\n    render() {\n        return (\n            <SliderWidget\n              { ...this.props }\n              { ...this.state }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SliderWidgetContainer);\n"]},"metadata":{},"sourceType":"module"}