{"ast":null,"code":"import _objectSpread from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectWithoutProperties from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _get from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";import _getPrototypeOf from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import PropTypes from'prop-types';import FieldForm from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/FieldForm\";import{addressType}from\"/home/marketihor/scandipwa/packages/scandipwa/src/type/Account\";import{countriesType}from\"/home/marketihor/scandipwa/packages/scandipwa/src/type/Config\";import{getCityAndRegionFromZipcode,setAddressesInFormObject}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Address\";/** @namespace Component/MyAccountAddressForm/Component */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _MyAccountAddressForm=/*#__PURE__*/function(_Extensible){_inherits(_MyAccountAddressForm,_Extensible);var _super=_createSuper(_MyAccountAddressForm);function _MyAccountAddressForm(){var _this;_classCallCheck(this,_MyAccountAddressForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onFormSuccess=function(fields){var _this$props=_this.props,onSave=_this$props.onSave,addressLinesQty=_this$props.addressLinesQty;var _ref=addressLinesQty>1?setAddressesInFormObject(fields,addressLinesQty):fields,_ref$region_id=_ref.region_id,region_id=_ref$region_id===void 0?0:_ref$region_id,region=_ref.region_string,newAddress=_objectWithoutProperties(_ref,[\"region_id\",\"region_string\"]);newAddress.region={region_id:region_id,region:region};onSave(newAddress);};_this.onCountryChange=function(countryId){var countries=_this.props.countries;var country=countries.find(function(_ref2){var id=_ref2.id;return id===countryId;});var available_regions=country.available_regions,is_state_required=country.is_state_required;_this.setState({countryId:countryId,isStateRequired:is_state_required,availableRegions:available_regions||[]});};_this.onZipcodeChange=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var value,_this$state,countryId,availableRegions,_yield$getCityAndRegi,_yield$getCityAndRegi2,city,regionCode,_availableRegions$fin,regionId;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:value=e.currentTarget.value;_this$state=_this.state,countryId=_this$state.countryId,availableRegions=_this$state.availableRegions;_context.next=4;return getCityAndRegionFromZipcode(countryId,value);case 4:_yield$getCityAndRegi=_context.sent;_yield$getCityAndRegi2=_slicedToArray(_yield$getCityAndRegi,2);city=_yield$getCityAndRegi2[0];regionCode=_yield$getCityAndRegi2[1];if(city){_this.setState({city:city});}if(availableRegions.length>0&&regionCode){_availableRegions$fin=availableRegions.find(function(r){return r.code.toUpperCase()===regionCode.toUpperCase();}),regionId=_availableRegions$fin.id;if(regionId){_this.setState({regionId:regionId});}}case 10:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref3.apply(this,arguments);};}();return _this;}_createClass(_MyAccountAddressForm,[{key:\"__construct\",value:function __construct(props){_get(_getPrototypeOf(_MyAccountAddressForm.prototype),\"__construct\",this).call(this,props);var countries=props.countries,default_country=props.default_country,_props$address=props.address,country_id=_props$address.country_id,_props$address$region=_props$address.region;_props$address$region=_props$address$region===void 0?{}:_props$address$region;var region_id=_props$address$region.region_id,_props$address$city=_props$address.city,city=_props$address$city===void 0?'':_props$address$city;var countryId=country_id||default_country;var country=countries.find(function(_ref4){var id=_ref4.id;return id===countryId;})||{};var isStateRequired=country.is_state_required;var availableRegions=country.available_regions;var regions=availableRegions||[{}];var regionId=region_id||regions[0].id;this.state={countryId:countryId,availableRegions:availableRegions,regionId:regionId,isStateRequired:isStateRequired,city:city};}},{key:\"getRegionFields\",value:function getRegionFields(){var _this2=this;var _this$props2=this.props,_this$props2$address$=_this$props2.address.region;_this$props2$address$=_this$props2$address$===void 0?{}:_this$props2$address$;var region=_this$props2$address$.region,regionDisplayAll=_this$props2.regionDisplayAll;var _this$state2=this.state,availableRegions=_this$state2.availableRegions,regionId=_this$state2.regionId,isStateRequired=_this$state2.isStateRequired;if(!regionDisplayAll&&!isStateRequired){return null;}if(!availableRegions||!availableRegions.length){return{region_string:{label:__('State/Province'),value:region,validation:isStateRequired?['notEmpty']:[]}};}return{region_id:{label:__('State/Province'),type:'select',selectOptions:availableRegions.map(function(_ref5){var id=_ref5.id,name=_ref5.name;return{id:id,label:name,value:id};}),onChange:function onChange(regionId){return _this2.setState({regionId:regionId});},value:regionId,validation:isStateRequired?['notEmpty']:[]}};}},{key:\"getStreetFields\",value:function getStreetFields(label,index){var _this$props3=this.props,_this$props3$address$=_this$props3.address.street,street=_this$props3$address$===void 0?[]:_this$props3$address$,isSubmitted=_this$props3.isSubmitted;return{label:label,value:street[index],validation:index===0?['notEmpty']:[],validateSeparately:index===0,isSubmitted:isSubmitted};}// returns the address fields in quantity equal to BE\n},{key:\"getAddressFields\",value:function getAddressFields(){var addressLinesQty=this.props.addressLinesQty;if(addressLinesQty===1){return{street:this.getStreetFields(__('Street address'),0)};}var streets={};// eslint-disable-next-line fp/no-loops, fp/no-let\nfor(var i=0;i<addressLinesQty;i++){streets[\"street\".concat(i)]=this.getStreetFields(__('Street address line %s',i+1),i);}return streets;}},{key:\"getVatField\",value:function getVatField(){var showVatNumber=this.props.showVatNumber;if(!showVatNumber){return{};}return{vat_id:{label:__('VAT Number')}};}},{key:\"fieldMap\",get:function get(){var _this$state3=this.state,countryId=_this$state3.countryId,city=_this$state3.city;var _this$props4=this.props,countries=_this$props4.countries,address=_this$props4.address,isSubmitted=_this$props4.isSubmitted;var default_billing=address.default_billing,default_shipping=address.default_shipping;return _objectSpread(_objectSpread(_objectSpread({default_billing:{type:'checkbox',label:__('This is default Billing Address'),value:'default_billing',checked:default_billing},default_shipping:{type:'checkbox',label:__('This is default Shipping Address'),value:'default_shipping',checked:default_shipping},firstname:{label:__('First name'),validation:['notEmpty'],validateSeparately:true,isSubmitted:isSubmitted},lastname:{label:__('Last name'),validation:['notEmpty'],validateSeparately:true,isSubmitted:isSubmitted},telephone:{label:__('Phone number'),validation:['notEmpty','telephone'],validateSeparately:true,isSubmitted:isSubmitted},city:{label:__('City'),validation:['notEmpty'],validateSeparately:true,isSubmitted:isSubmitted,value:city},country_id:{type:'select',label:__('Country'),validation:['notEmpty'],validateSeparately:true,isSubmitted:isSubmitted,value:countryId,selectOptions:countries.map(function(_ref6){var id=_ref6.id,label=_ref6.label;return{id:id,label:label,value:id};}),onChange:this.onCountryChange}},this.getRegionFields()),{},{postcode:{label:__('Zip/Postal code'),validation:['notEmpty'],validateSeparately:true,isSubmitted:isSubmitted,onBlur:this.onZipcodeChange}},this.getAddressFields()),this.getVatField());}},{key:\"getDefaultValues\",value:function getDefaultValues(fieldEntry){var _fieldEntry=_slicedToArray(fieldEntry,2),key=_fieldEntry[0],value=_fieldEntry[1].value;var addressValue=this.props.address[key];return _objectSpread(_objectSpread({},_get(_getPrototypeOf(_MyAccountAddressForm.prototype),\"getDefaultValues\",this).call(this,fieldEntry)),{},{value:value!==undefined?value:addressValue});}},{key:\"renderActions\",value:function renderActions(){return/*#__PURE__*/_checkBEM(React,\"button\",{type:\"submit\",block:\"Button\",mix:{block:'MyAccount',elem:'Button'}},__('Save address'));}}]);return _MyAccountAddressForm;}(Extensible(FieldForm));_MyAccountAddressForm.propTypes={isSubmitted:PropTypes.bool,address:addressType.isRequired,countries:countriesType.isRequired,default_country:PropTypes.string,onSave:PropTypes.func,addressLinesQty:PropTypes.number.isRequired,showVatNumber:PropTypes.bool.isRequired,regionDisplayAll:PropTypes.bool.isRequired};_MyAccountAddressForm.defaultProps={default_country:'US',isSubmitted:false,onSave:function onSave(){}};Object.defineProperty(_MyAccountAddressForm,'name',{value:'MyAccountAddressForm'});export var MyAccountAddressForm=middleware(_MyAccountAddressForm,\"Component/MyAccountAddressForm/Component\");export default MyAccountAddressForm;","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountAddressForm/MyAccountAddressForm.component.js"],"names":["PropTypes","FieldForm","addressType","countriesType","getCityAndRegionFromZipcode","setAddressesInFormObject","MyAccountAddressForm","onFormSuccess","fields","props","onSave","addressLinesQty","region_id","region","region_string","newAddress","onCountryChange","countryId","countries","country","find","id","available_regions","is_state_required","setState","isStateRequired","availableRegions","onZipcodeChange","e","value","currentTarget","state","city","regionCode","length","r","code","toUpperCase","regionId","default_country","address","country_id","regions","regionDisplayAll","label","__","validation","type","selectOptions","map","name","onChange","index","street","isSubmitted","validateSeparately","getStreetFields","streets","i","showVatNumber","vat_id","default_billing","default_shipping","checked","firstname","lastname","telephone","getRegionFields","postcode","onBlur","getAddressFields","getVatField","fieldEntry","key","addressValue","undefined","block","elem","propTypes","bool","isRequired","string","func","number","defaultProps","Object","defineProperty","_MyAccountAddressForm"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nimport FieldForm from 'Component/FieldForm';\nimport { addressType } from 'Type/Account';\nimport { countriesType } from 'Type/Config';\nimport { getCityAndRegionFromZipcode, setAddressesInFormObject } from 'Util/Address';\n\n/** @namespace Component/MyAccountAddressForm/Component */\nexport class MyAccountAddressForm extends FieldForm {\n    static propTypes = {\n        isSubmitted: PropTypes.bool,\n        address: addressType.isRequired,\n        countries: countriesType.isRequired,\n        default_country: PropTypes.string,\n        onSave: PropTypes.func,\n        addressLinesQty: PropTypes.number.isRequired,\n        showVatNumber: PropTypes.bool.isRequired,\n        regionDisplayAll: PropTypes.bool.isRequired\n    };\n\n    static defaultProps = {\n        default_country: 'US',\n        isSubmitted: false,\n        onSave: () => {}\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        const {\n            countries,\n            default_country,\n            address: {\n                country_id,\n                region: { region_id } = {},\n                city = ''\n            }\n        } = props;\n\n        const countryId = country_id || default_country;\n        const country = countries.find(({ id }) => id === countryId) || {};\n        const isStateRequired = country.is_state_required;\n        const { available_regions: availableRegions } = country;\n        const regions = availableRegions || [{}];\n        const regionId = region_id || regions[0].id;\n\n        this.state = {\n            countryId,\n            availableRegions,\n            regionId,\n            isStateRequired,\n            city\n        };\n    }\n\n    onFormSuccess = (fields) => {\n        const { onSave, addressLinesQty } = this.props;\n        const { region_id = 0, region_string: region, ...newAddress } = addressLinesQty > 1\n            ? setAddressesInFormObject(fields, addressLinesQty)\n            : fields;\n\n        newAddress.region = { region_id, region };\n        onSave(newAddress);\n    };\n\n    getRegionFields() {\n        const { address: { region: { region } = {} }, regionDisplayAll } = this.props;\n        const { availableRegions, regionId, isStateRequired } = this.state;\n\n        if (!regionDisplayAll && !isStateRequired) {\n            return null;\n        }\n\n        if (!availableRegions || !availableRegions.length) {\n            return {\n                region_string: {\n                    label: __('State/Province'),\n                    value: region,\n                    validation: isStateRequired ? ['notEmpty'] : []\n                }\n            };\n        }\n\n        return {\n            region_id: {\n                label: __('State/Province'),\n                type: 'select',\n                selectOptions: availableRegions.map(({ id, name }) => ({ id, label: name, value: id })),\n                onChange: (regionId) => this.setState({ regionId }),\n                value: regionId,\n                validation: isStateRequired ? ['notEmpty'] : []\n            }\n        };\n    }\n\n    onCountryChange = (countryId) => {\n        const { countries } = this.props;\n        const country = countries.find(({ id }) => id === countryId);\n        const { available_regions, is_state_required } = country;\n\n        this.setState({\n            countryId,\n            isStateRequired: is_state_required,\n            availableRegions: available_regions || []\n        });\n    };\n\n    onZipcodeChange = async (e) => {\n        const { value } = e.currentTarget;\n        const { countryId, availableRegions } = this.state;\n\n        const [city, regionCode] = await getCityAndRegionFromZipcode(countryId, value);\n        if (city) {\n            this.setState({\n                city\n            });\n        }\n\n        if (availableRegions.length > 0 && regionCode) {\n            const { id: regionId } = availableRegions\n                .find((r) => r.code.toUpperCase() === regionCode.toUpperCase());\n\n            if (regionId) {\n                this.setState({ regionId });\n            }\n        }\n    };\n\n    getStreetFields(label, index) {\n        const { address: { street = [] }, isSubmitted } = this.props;\n\n        return {\n            label,\n            value: street[index],\n            validation: index === 0 ? ['notEmpty'] : [],\n            validateSeparately: index === 0,\n            isSubmitted\n        };\n    }\n\n    // returns the address fields in quantity equal to BE\n    getAddressFields() {\n        const { addressLinesQty } = this.props;\n\n        if (addressLinesQty === 1) {\n            return {\n                street: this.getStreetFields(\n                    __('Street address'),\n                    0\n                )\n            };\n        }\n\n        const streets = {};\n\n        // eslint-disable-next-line fp/no-loops, fp/no-let\n        for (let i = 0; i < addressLinesQty; i++) {\n            streets[`street${i}`] = this.getStreetFields(\n                __('Street address line %s', i + 1),\n                i\n            );\n        }\n\n        return streets;\n    }\n\n    getVatField() {\n        const { showVatNumber } = this.props;\n\n        if (!showVatNumber) {\n            return {};\n        }\n\n        return {\n            vat_id: {\n                label: __('VAT Number')\n            }\n        };\n    }\n\n    get fieldMap() {\n        const { countryId, city } = this.state;\n        const { countries, address, isSubmitted } = this.props;\n        const { default_billing, default_shipping } = address;\n\n        return {\n            default_billing: {\n                type: 'checkbox',\n                label: __('This is default Billing Address'),\n                value: 'default_billing',\n                checked: default_billing\n            },\n            default_shipping: {\n                type: 'checkbox',\n                label: __('This is default Shipping Address'),\n                value: 'default_shipping',\n                checked: default_shipping\n            },\n            firstname: {\n                label: __('First name'),\n                validation: ['notEmpty'],\n                validateSeparately: true,\n                isSubmitted\n            },\n            lastname: {\n                label: __('Last name'),\n                validation: ['notEmpty'],\n                validateSeparately: true,\n                isSubmitted\n            },\n            telephone: {\n                label: __('Phone number'),\n                validation: ['notEmpty', 'telephone'],\n                validateSeparately: true,\n                isSubmitted\n            },\n            city: {\n                label: __('City'),\n                validation: ['notEmpty'],\n                validateSeparately: true,\n                isSubmitted,\n                value: city\n            },\n            country_id: {\n                type: 'select',\n                label: __('Country'),\n                validation: ['notEmpty'],\n                validateSeparately: true,\n                isSubmitted,\n                value: countryId,\n                selectOptions: countries.map(({ id, label }) => ({ id, label, value: id })),\n                onChange: this.onCountryChange\n            },\n            ...this.getRegionFields(),\n            postcode: {\n                label: __('Zip/Postal code'),\n                validation: ['notEmpty'],\n                validateSeparately: true,\n                isSubmitted,\n                onBlur: this.onZipcodeChange\n            },\n            ...this.getAddressFields(),\n            ...this.getVatField()\n            // Will be back with B2B update\n            // company: {\n            //     label: __('Company')\n            // }\n        };\n    }\n\n    getDefaultValues(fieldEntry) {\n        const [key, { value }] = fieldEntry;\n        const { address: { [key]: addressValue } } = this.props;\n\n        return {\n            ...super.getDefaultValues(fieldEntry),\n            value: value !== undefined ? value : addressValue\n        };\n    }\n\n    renderActions() {\n        return (\n            <button\n              type=\"submit\"\n              block=\"Button\"\n              mix={ { block: 'MyAccount', elem: 'Button' } }\n            >\n                { __('Save address') }\n            </button>\n        );\n    }\n}\n\nexport default MyAccountAddressForm;\n"]},"metadata":{},"sourceType":"module"}