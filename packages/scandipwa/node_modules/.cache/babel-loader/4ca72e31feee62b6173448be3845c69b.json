{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component\\\\ProductConfigurableAttributes\\\\ProductConfigurableAttributes.component.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport ExpandableContent from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component/ExpandableContent\";\nimport ProductAttributeValue from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component/ProductAttributeValue\";\nimport ProductConfigurableAttributeDropdown from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component/ProductConfigurableAttributeDropdown\";\nimport { MixType } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\type/Common\";\nimport { AttributeType } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\type/ProductList\";\nimport \"./ProductConfigurableAttributes.style\";\n/** @namespace Component/ProductConfigurableAttributes/Component */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _ProductConfigurableAttributes extends Extensible(PureComponent) {\n  renderConfigurableAttributeValue(attribute) {\n    const {\n      getIsConfigurableAttributeAvailable,\n      handleOptionClick,\n      getLink,\n      isSelected\n    } = this.props;\n    const {\n      attribute_value\n    } = attribute;\n    return /*#__PURE__*/_checkBEM(React, ProductAttributeValue, {\n      key: attribute_value,\n      attribute: attribute,\n      isSelected: isSelected(attribute),\n      isAvailable: getIsConfigurableAttributeAvailable(attribute),\n      onClick: handleOptionClick,\n      getLink: getLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderSwatch(option) {\n    var _this = this;\n\n    const {\n      attribute_values\n    } = option;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ProductConfigurableAttributes\",\n      elem: \"SwatchList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, attribute_values.map(function (attribute_value) {\n      return _this.renderConfigurableAttributeValue({ ...option,\n        attribute_value\n      });\n    }));\n  }\n\n  renderDropdown(option) {\n    const {\n      updateConfigurableVariant,\n      getIsConfigurableAttributeAvailable,\n      parameters\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, ProductConfigurableAttributeDropdown, {\n      option: option,\n      updateConfigurableVariant: updateConfigurableVariant,\n      getIsConfigurableAttributeAvailable: getIsConfigurableAttributeAvailable,\n      parameters: parameters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderPlaceholders() {\n    var _this2 = this;\n\n    const {\n      numberOfPlaceholders,\n      isContentExpanded\n    } = this.props;\n    return numberOfPlaceholders.map(function (length, i) {\n      return /*#__PURE__*/_checkBEM(React, ExpandableContent // eslint-disable-next-line react/no-array-index-key\n      , {\n        key: i,\n        mix: {\n          block: 'ProductConfigurableAttributes',\n          elem: 'Expandable'\n        },\n        isContentExpanded: isContentExpanded,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/_checkBEM(React, \"div\", {\n        // eslint-disable-next-line react/no-array-index-key\n        key: i,\n        block: \"ProductConfigurableAttributes\",\n        elem: \"SwatchList\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, Array.from({\n        length\n      }, function (_, i) {\n        return /*#__PURE__*/_checkBEM(React, \"div\", {\n          // eslint-disable-next-line react/no-array-index-key\n          key: i,\n          block: \"ProductConfigurableAttributes\",\n          elem: \"Placeholder\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }\n        });\n      })));\n    });\n  }\n\n  renderConfigurableAttributes() {\n    var _this3 = this;\n\n    const {\n      configurable_options,\n      isContentExpanded,\n      getSubHeading\n    } = this.props;\n    return Object.values(configurable_options).map(function (option) {\n      const {\n        attribute_label,\n        attribute_code,\n        attribute_options\n      } = option;\n      const [{\n        swatch_data\n      }] = attribute_options ? Object.values(attribute_options) : [{}];\n      const isSwatch = !!swatch_data;\n      return /*#__PURE__*/_checkBEM(React, ExpandableContent, {\n        key: attribute_code,\n        heading: attribute_label,\n        subHeading: getSubHeading(option),\n        mix: {\n          block: 'ProductConfigurableAttributes',\n          elem: 'Expandable'\n        },\n        isContentExpanded: isContentExpanded,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, isSwatch ? _this3.renderSwatch(option) : _this3.renderDropdown(option));\n    });\n  }\n\n  render() {\n    const {\n      isReady,\n      mix\n    } = this.props;\n    return /*#__PURE__*/_checkBEM(React, \"div\", {\n      block: \"ProductConfigurableAttributes\",\n      mods: {\n        isLoading: !isReady\n      },\n      mix: mix,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, isReady ? this.renderConfigurableAttributes() : this.renderPlaceholders());\n  }\n\n}\n_ProductConfigurableAttributes.propTypes = {\n  isContentExpanded: PropTypes.bool,\n  numberOfPlaceholders: PropTypes.arrayOf(PropTypes.number),\n  configurable_options: PropTypes.objectOf(AttributeType).isRequired,\n  parameters: PropTypes.shape({}).isRequired,\n  updateConfigurableVariant: PropTypes.func.isRequired,\n  isReady: PropTypes.bool,\n  mix: MixType,\n  getIsConfigurableAttributeAvailable: PropTypes.func,\n  handleOptionClick: PropTypes.func.isRequired,\n  getSubHeading: PropTypes.func.isRequired,\n  isSelected: PropTypes.func.isRequired,\n  getLink: PropTypes.func.isRequired\n};\n_ProductConfigurableAttributes.defaultProps = {\n  isReady: true,\n  mix: {},\n  // eslint-disable-next-line no-magic-numbers\n  numberOfPlaceholders: [6, 10, 7],\n  isContentExpanded: false,\n  getIsConfigurableAttributeAvailable: function () {\n    return true;\n  }\n};\nObject.defineProperty(_ProductConfigurableAttributes, 'name', {\n  value: 'ProductConfigurableAttributes'\n});\n\nexport const ProductConfigurableAttributes = middleware(_ProductConfigurableAttributes, \"Component/ProductConfigurableAttributes/Component\");\nexport default ProductConfigurableAttributes;","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/packages/scandipwa/src/component/ProductConfigurableAttributes/ProductConfigurableAttributes.component.js"],"names":["PropTypes","PureComponent","ExpandableContent","ProductAttributeValue","ProductConfigurableAttributeDropdown","MixType","AttributeType","ProductConfigurableAttributes","renderConfigurableAttributeValue","attribute","getIsConfigurableAttributeAvailable","handleOptionClick","getLink","isSelected","props","attribute_value","renderSwatch","option","attribute_values","map","renderDropdown","updateConfigurableVariant","parameters","renderPlaceholders","numberOfPlaceholders","isContentExpanded","length","i","block","elem","Array","from","_","renderConfigurableAttributes","configurable_options","getSubHeading","Object","values","attribute_label","attribute_code","attribute_options","swatch_data","isSwatch","render","isReady","mix","isLoading","propTypes","bool","arrayOf","number","objectOf","isRequired","shape","func","defaultProps","defineProperty","_ProductConfigurableAttributes","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport ExpandableContent from 'Component/ExpandableContent';\nimport ProductAttributeValue from 'Component/ProductAttributeValue';\nimport ProductConfigurableAttributeDropdown from 'Component/ProductConfigurableAttributeDropdown';\nimport { MixType } from 'Type/Common';\nimport { AttributeType } from 'Type/ProductList';\n\nimport './ProductConfigurableAttributes.style';\n\n/** @namespace Component/ProductConfigurableAttributes/Component */\nexport class ProductConfigurableAttributes extends PureComponent {\n    static propTypes = {\n        isContentExpanded: PropTypes.bool,\n        numberOfPlaceholders: PropTypes.arrayOf(PropTypes.number),\n        configurable_options: PropTypes.objectOf(AttributeType).isRequired,\n        parameters: PropTypes.shape({}).isRequired,\n        updateConfigurableVariant: PropTypes.func.isRequired,\n        isReady: PropTypes.bool,\n        mix: MixType,\n        getIsConfigurableAttributeAvailable: PropTypes.func,\n        handleOptionClick: PropTypes.func.isRequired,\n        getSubHeading: PropTypes.func.isRequired,\n        isSelected: PropTypes.func.isRequired,\n        getLink: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        isReady: true,\n        mix: {},\n        // eslint-disable-next-line no-magic-numbers\n        numberOfPlaceholders: [6, 10, 7],\n        isContentExpanded: false,\n        getIsConfigurableAttributeAvailable: () => true\n    };\n\n    renderConfigurableAttributeValue(attribute) {\n        const {\n            getIsConfigurableAttributeAvailable,\n            handleOptionClick,\n            getLink,\n            isSelected\n        } = this.props;\n\n        const { attribute_value } = attribute;\n\n        return (\n            <ProductAttributeValue\n              key={ attribute_value }\n              attribute={ attribute }\n              isSelected={ isSelected(attribute) }\n              isAvailable={ getIsConfigurableAttributeAvailable(attribute) }\n              onClick={ handleOptionClick }\n              getLink={ getLink }\n            />\n        );\n    }\n\n    renderSwatch(option) {\n        const { attribute_values } = option;\n\n        return (\n            <div\n              block=\"ProductConfigurableAttributes\"\n              elem=\"SwatchList\"\n            >\n                { attribute_values.map((attribute_value) => (\n                    this.renderConfigurableAttributeValue({ ...option, attribute_value })\n                )) }\n            </div>\n        );\n    }\n\n    renderDropdown(option) {\n        const {\n            updateConfigurableVariant,\n            getIsConfigurableAttributeAvailable,\n            parameters\n        } = this.props;\n\n        return (\n            <ProductConfigurableAttributeDropdown\n              option={ option }\n              updateConfigurableVariant={ updateConfigurableVariant }\n              getIsConfigurableAttributeAvailable={ getIsConfigurableAttributeAvailable }\n              parameters={ parameters }\n            />\n        );\n    }\n\n    renderPlaceholders() {\n        const { numberOfPlaceholders, isContentExpanded } = this.props;\n\n        return numberOfPlaceholders.map((length, i) => (\n            <ExpandableContent\n              // eslint-disable-next-line react/no-array-index-key\n              key={ i }\n              mix={ {\n                  block: 'ProductConfigurableAttributes',\n                  elem: 'Expandable'\n              } }\n              isContentExpanded={ isContentExpanded }\n            >\n                <div\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={ i }\n                  block=\"ProductConfigurableAttributes\"\n                  elem=\"SwatchList\"\n                >\n                    { Array.from({ length }, (_, i) => (\n                        <div\n                          // eslint-disable-next-line react/no-array-index-key\n                          key={ i }\n                          block=\"ProductConfigurableAttributes\"\n                          elem=\"Placeholder\"\n                        />\n                    )) }\n                </div>\n            </ExpandableContent>\n        ));\n    }\n\n    renderConfigurableAttributes() {\n        const {\n            configurable_options,\n            isContentExpanded,\n            getSubHeading\n        } = this.props;\n\n        return Object.values(configurable_options).map((option) => {\n            const {\n                attribute_label,\n                attribute_code,\n                attribute_options\n            } = option;\n\n            const [{ swatch_data }] = attribute_options ? Object.values(attribute_options) : [{}];\n            const isSwatch = !!swatch_data;\n\n            return (\n                <ExpandableContent\n                  key={ attribute_code }\n                  heading={ attribute_label }\n                  subHeading={ getSubHeading(option) }\n                  mix={ {\n                      block: 'ProductConfigurableAttributes',\n                      elem: 'Expandable'\n                  } }\n                  isContentExpanded={ isContentExpanded }\n                >\n                    { isSwatch ? this.renderSwatch(option) : this.renderDropdown(option) }\n                </ExpandableContent>\n            );\n        });\n    }\n\n    render() {\n        const { isReady, mix } = this.props;\n\n        return (\n            <div\n              block=\"ProductConfigurableAttributes\"\n              mods={ { isLoading: !isReady } }\n              mix={ mix }\n            >\n                { isReady ? this.renderConfigurableAttributes() : this.renderPlaceholders() }\n            </div>\n        );\n    }\n}\n\nexport default ProductConfigurableAttributes;\n"]},"metadata":{},"sourceType":"module"}