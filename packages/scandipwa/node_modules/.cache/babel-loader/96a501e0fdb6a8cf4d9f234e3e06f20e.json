{"ast":null,"code":"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */ /* eslint-disable import/prefer-default-export */import currencyMap from\"./Price.config\";/** @namespace Util/Price/formatCurrency */export var formatCurrency=middleware(function(){var currency=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'USD';return currencyMap[currency];},\"Util/Price/formatCurrency\");/** @namespace Util/Price/formatPrice */export var formatPrice=middleware(function(price){var currency=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'USD';var language=navigator.languages?navigator.languages[0]:navigator.language;return new Intl.NumberFormat(language,{style:'currency',currency:currency}).format(price);},\"Util/Price/formatPrice\");/**\n * Calculate final price\n * @param {Number} discount discount percentage\n * @param {Number} min minimum price\n * @param {Number} reg regular price\n * @return {Number} final price\n * @namespace Util/Price/calculateFinalPrice\n */export var calculateFinalPrice=middleware(function(discount,min,reg){return discount?min:reg;},\"Util/Price/calculateFinalPrice\\n\");/**\n * Calculate final price\n * @param {Number} price\n * @return {Number} price rounded to 2 digits\n * @namespace Util/Price/roundPrice\n */export var roundPrice=middleware(function(price){return parseFloat(price).toFixed(2);},\"Util/Price/roundPrice\\n\");","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/util/Price/Price.js"],"names":["currencyMap","formatCurrency","currency","formatPrice","price","language","navigator","languages","Intl","NumberFormat","style","format","calculateFinalPrice","discount","min","reg","roundPrice","parseFloat","toFixed"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,CAEA,iDACA,MAAOA,CAAAA,WAAP,sBAEA,2CACA,MAAO,IAAMC,CAAAA,cAAc,YAAG,cAACC,CAAAA,QAAD,2DAAY,KAAZ,OAAsBF,CAAAA,WAAW,CAACE,QAAD,CAAjC,EAAH,6BAApB,CAEP,wCACA,MAAO,IAAMC,CAAAA,WAAW,YAAG,SAACC,KAAD,CAA6B,IAArBF,CAAAA,QAAqB,2DAAV,KAAU,CACpD,GAAMG,CAAAA,QAAQ,CAAGC,SAAS,CAACC,SAAV,CAAsBD,SAAS,CAACC,SAAV,CAAoB,CAApB,CAAtB,CAA+CD,SAAS,CAACD,QAA1E,CACA,MAAO,IAAIG,CAAAA,IAAI,CAACC,YAAT,CAAsBJ,QAAtB,CAAgC,CAAEK,KAAK,CAAE,UAAT,CAAqBR,QAAQ,CAARA,QAArB,CAAhC,EAAiES,MAAjE,CAAwEP,KAAxE,CAAP,CACH,CAHuB,0BAAjB,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMQ,CAAAA,mBAAmB,YAAG,SAACC,QAAD,CAAWC,GAAX,CAAgBC,GAAhB,QAAyBF,CAAAA,QAAQ,CAAGC,GAAH,CAASC,GAA1C,EAAH,oCAAzB,CAEP;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,CAAAA,UAAU,YAAG,SAACZ,KAAD,QAAWa,CAAAA,UAAU,CAACb,KAAD,CAAV,CAAkBc,OAAlB,CAA0B,CAA1B,CAAX,EAAH,2BAAhB","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n/* eslint-disable import/prefer-default-export */\nimport currencyMap from './Price.config';\n\n/** @namespace Util/Price/formatCurrency */\nexport const formatCurrency = (currency = 'USD') => currencyMap[currency];\n\n/** @namespace Util/Price/formatPrice */\nexport const formatPrice = (price, currency = 'USD') => {\n    const language = navigator.languages ? navigator.languages[0] : navigator.language;\n    return new Intl.NumberFormat(language, { style: 'currency', currency }).format(price);\n};\n\n/**\n * Calculate final price\n * @param {Number} discount discount percentage\n * @param {Number} min minimum price\n * @param {Number} reg regular price\n * @return {Number} final price\n * @namespace Util/Price/calculateFinalPrice\n */\nexport const calculateFinalPrice = (discount, min, reg) => (discount ? min : reg);\n\n/**\n * Calculate final price\n * @param {Number} price\n * @return {Number} price rounded to 2 digits\n * @namespace Util/Price/roundPrice\n */\nexport const roundPrice = (price) => parseFloat(price).toFixed(2);\n"]},"metadata":{},"sourceType":"module"}