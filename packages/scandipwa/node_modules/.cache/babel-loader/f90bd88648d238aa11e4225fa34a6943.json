{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component\\\\Meta\\\\Meta.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Meta from \"./Meta.component\";\n/** @namespace Component/Meta/Container/mapStateToProps */\n\nexport const mapStateToProps = middleware(function (state) {\n  return {\n    default_description: state.MetaReducer.default_description,\n    default_keywords: state.MetaReducer.default_keywords,\n    default_title: state.MetaReducer.default_title,\n    canonical_url: state.MetaReducer.canonical_url,\n    title_prefix: state.MetaReducer.title_prefix,\n    title_suffix: state.MetaReducer.title_suffix,\n    description: state.MetaReducer.description,\n    keywords: state.MetaReducer.keywords,\n    title: state.MetaReducer.title,\n    robots: state.MetaReducer.robots,\n    status_code: state.MetaReducer.status_code\n  };\n}, \"Component/Meta/Container/mapStateToProps\");\n/** @namespace Component/Meta/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _MetaContainer extends Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.containerProps = function () {\n      return {\n        metadata: _this._getMetadata()\n      };\n    };\n  }\n\n  _generateMetaFromMetadata(metadata, param = 'name') {\n    return Object.entries(metadata).reduce(function (acc, [key, value]) {\n      return value ? [...acc, {\n        [param]: key,\n        content: `${value}`\n      }] : acc;\n    }, []);\n  }\n\n  _getTitle() {\n    const {\n      title,\n      default_title\n    } = this.props;\n    return title || default_title;\n  }\n\n  _getDescription() {\n    const {\n      description,\n      default_description\n    } = this.props;\n    return description || default_description;\n  }\n\n  _getKeywords() {\n    const {\n      keywords,\n      default_keywords\n    } = this.props;\n    return keywords || default_keywords;\n  }\n\n  _getRobots() {\n    const {\n      robots\n    } = this.props;\n    return robots;\n  }\n\n  _getStatusCode() {\n    const {\n      status_code\n    } = this.props;\n    return status_code;\n  }\n\n  _getMetadata() {\n    const meta = {\n      title: this._getTitle(),\n      description: this._getDescription(),\n      keywords: this._getKeywords(),\n      robots: this._getRobots(),\n      'render:status_code': this._getStatusCode()\n    };\n    return this._generateMetaFromMetadata(meta);\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, Meta, Object.assign({}, this.props, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n/** @namespace Component/Meta/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\n\n_MetaContainer.propTypes = {\n  default_description: PropTypes.string,\n  default_keywords: PropTypes.string,\n  default_title: PropTypes.string,\n  canonical_url: PropTypes.string,\n  title_prefix: PropTypes.string,\n  title_suffix: PropTypes.string,\n  description: PropTypes.string,\n  keywords: PropTypes.string,\n  title: PropTypes.string,\n  robots: PropTypes.string,\n  status_code: PropTypes.string\n};\n_MetaContainer.defaultProps = {\n  default_description: '',\n  default_keywords: '',\n  default_title: '',\n  canonical_url: '',\n  title_prefix: '',\n  title_suffix: '',\n  description: '',\n  keywords: '',\n  title: '',\n  robots: '',\n  status_code: ''\n};\nObject.defineProperty(_MetaContainer, 'name', {\n  value: 'MetaContainer'\n});\n\nexport const MetaContainer = middleware(_MetaContainer, \"Component/Meta/Container\");\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {};\n}, \"Component/Meta/Container/mapDispatchToProps\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MetaContainer);","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/packages/scandipwa/src/component/Meta/Meta.container.js"],"names":["PropTypes","PureComponent","connect","Meta","mapStateToProps","state","default_description","MetaReducer","default_keywords","default_title","canonical_url","title_prefix","title_suffix","description","keywords","title","robots","status_code","MetaContainer","containerProps","metadata","_getMetadata","_generateMetaFromMetadata","param","Object","entries","reduce","acc","key","value","content","_getTitle","props","_getDescription","_getKeywords","_getRobots","_getStatusCode","meta","render","propTypes","string","defaultProps","defineProperty","_MetaContainer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport Meta from './Meta.component';\n\n/** @namespace Component/Meta/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    default_description: state.MetaReducer.default_description,\n    default_keywords: state.MetaReducer.default_keywords,\n    default_title: state.MetaReducer.default_title,\n    canonical_url: state.MetaReducer.canonical_url,\n    title_prefix: state.MetaReducer.title_prefix,\n    title_suffix: state.MetaReducer.title_suffix,\n    description: state.MetaReducer.description,\n    keywords: state.MetaReducer.keywords,\n    title: state.MetaReducer.title,\n    robots: state.MetaReducer.robots,\n    status_code: state.MetaReducer.status_code\n});\n\n/** @namespace Component/Meta/Container */\nexport class MetaContainer extends PureComponent {\n    static propTypes = {\n        default_description: PropTypes.string,\n        default_keywords: PropTypes.string,\n        default_title: PropTypes.string,\n        canonical_url: PropTypes.string,\n        title_prefix: PropTypes.string,\n        title_suffix: PropTypes.string,\n        description: PropTypes.string,\n        keywords: PropTypes.string,\n        title: PropTypes.string,\n        robots: PropTypes.string,\n        status_code: PropTypes.string\n    };\n\n    static defaultProps = {\n        default_description: '',\n        default_keywords: '',\n        default_title: '',\n        canonical_url: '',\n        title_prefix: '',\n        title_suffix: '',\n        description: '',\n        keywords: '',\n        title: '',\n        robots: '',\n        status_code: ''\n    };\n\n    containerProps = () => ({\n        metadata: this._getMetadata()\n    });\n\n    _generateMetaFromMetadata(metadata, param = 'name') {\n        return Object.entries(metadata).reduce((acc, [key, value]) => (\n            value\n                ? [...acc, { [param]: key, content: `${value}` }]\n                : acc\n        ), []);\n    }\n\n    _getTitle() {\n        const { title, default_title } = this.props;\n\n        return title || default_title;\n    }\n\n    _getDescription() {\n        const { description, default_description } = this.props;\n\n        return description || default_description;\n    }\n\n    _getKeywords() {\n        const { keywords, default_keywords } = this.props;\n\n        return keywords || default_keywords;\n    }\n\n    _getRobots() {\n        const { robots } = this.props;\n\n        return robots;\n    }\n\n    _getStatusCode() {\n        const { status_code } = this.props;\n\n        return status_code;\n    }\n\n    _getMetadata() {\n        const meta = {\n            title: this._getTitle(),\n            description: this._getDescription(),\n            keywords: this._getKeywords(),\n            robots: this._getRobots(),\n            'render:status_code': this._getStatusCode()\n        };\n\n        return this._generateMetaFromMetadata(meta);\n    }\n\n    render() {\n        return (\n            <Meta\n              { ...this.props }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\n/** @namespace Component/Meta/Container/mapDispatchToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MetaContainer);\n"]},"metadata":{},"sourceType":"module"}