{"ast":null,"code":"import _asyncToGenerator from \"D:/task/magento2/ScandiPWA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component\\\\ProductCompareItem\\\\ProductCompareItem.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { showNotification } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Notification/Notification.action\";\nimport { DeviceType } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\type/Device\";\nimport { ProductType } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\type/ProductList\";\nimport { BUNDLE, CONFIGURABLE } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Product\";\nimport ProductCompareItem from \"./ProductCompareItem.component\";\nexport const ProductCompareDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/ProductCompare/ProductCompare.dispatcher\");\n/** @namespace Component/ProductCompareItem/Container/mapStateToProps */\n\nexport const mapStateToProps = middleware(function (state) {\n  return {\n    device: state.ConfigReducer.device\n  };\n}, \"Component/ProductCompareItem/Container/mapStateToProps\");\n/** @namespace Component/ProductCompareItem/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {\n    removeComparedProduct: function (productId) {\n      return ProductCompareDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.removeComparedProduct(productId, dispatch);\n      });\n    },\n    showNotification: function (type, message) {\n      return dispatch(showNotification(type, message));\n    }\n  };\n}, \"Component/ProductCompareItem/Container/mapDispatchToProps\");\n/** @namespace Component/ProductCompareItem/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _ProductCompareItemContainer extends Extensible(PureComponent) {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false\n    };\n    this.containerFunctions = {\n      removeComparedProduct: this.removeComparedProduct.bind(this),\n      getGroupedProductQuantity: this.getGroupedProductQuantity.bind(this),\n      getProductOptionsData: this.getProductOptionsData.bind(this),\n      overriddenAddToCartBtnHandler: this.overriddenAddToCartBtnHandler.bind(this)\n    };\n    this.containerProps = {\n      imgUrl: this.getProductImage(),\n      overrideAddToCartBtnBehavior: this.getOverrideAddToCartBtnBehavior(),\n      linkTo: this.getLinkTo()\n    };\n  }\n\n  removeComparedProduct() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        product: {\n          id\n        } = {},\n        removeComparedProduct\n      } = _this.props;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      yield removeComparedProduct(id);\n    })();\n  }\n\n  getGroupedProductQuantity() {\n    const {\n      product: {\n        items\n      } = {}\n    } = this.props;\n\n    if (!items) {\n      return {};\n    }\n\n    return items.reduce(function (result, item) {\n      const {\n        product: {\n          id\n        } = {}\n      } = item;\n      Object.assign(result, {\n        [id]: 1\n      });\n      return result;\n    }, {});\n  }\n\n  getProductOptionsData() {\n    const {\n      product: {\n        options\n      }\n    } = this.props;\n\n    if (!options) {\n      return {\n        requiredOptions: []\n      };\n    }\n\n    return {\n      requiredOptions: options.map(function ({\n        option_id,\n        required\n      }) {\n        return required ? option_id : null;\n      }).filter(function (item) {\n        return !!item;\n      })\n    };\n  }\n\n  getProductImage() {\n    const {\n      product: {\n        thumbnail,\n        small_image\n      } = {},\n      device: {\n        isMobile\n      } = {}\n    } = this.props;\n\n    if (isMobile) {\n      return small_image.url;\n    }\n\n    return thumbnail.url;\n  }\n\n  getLinkTo() {\n    const {\n      product: {\n        url\n      },\n      product\n    } = this.props;\n    return {\n      pathname: url,\n      state: {\n        product\n      }\n    };\n  }\n\n  getOverrideAddToCartBtnBehavior() {\n    const {\n      product: {\n        type_id,\n        options\n      }\n    } = this.props;\n    const types = [BUNDLE, CONFIGURABLE];\n    return !!(types.indexOf(type_id) !== -1 || (options === null || options === void 0 ? void 0 : options.length));\n  }\n\n  overriddenAddToCartBtnHandler() {\n    const {\n      showNotification\n    } = this.props;\n    showNotification('info', __('Please select required option!'));\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, ProductCompareItem, Object.assign({}, this.props, this.state, this.containerProps, this.containerFunctions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n_ProductCompareItemContainer.propTypes = {\n  product: ProductType.isRequired,\n  removeComparedProduct: PropTypes.func.isRequired,\n  device: DeviceType.isRequired,\n  showNotification: PropTypes.func.isRequired\n};\nObject.defineProperty(_ProductCompareItemContainer, 'name', {\n  value: 'ProductCompareItemContainer'\n});\n\nexport const ProductCompareItemContainer = middleware(_ProductCompareItemContainer, \"Component/ProductCompareItem/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCompareItemContainer);","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/packages/scandipwa/src/component/ProductCompareItem/ProductCompareItem.container.js"],"names":["PropTypes","PureComponent","connect","showNotification","DeviceType","ProductType","BUNDLE","CONFIGURABLE","ProductCompareItem","ProductCompareDispatcher","mapStateToProps","state","device","ConfigReducer","mapDispatchToProps","dispatch","removeComparedProduct","productId","then","default","dispatcher","type","message","ProductCompareItemContainer","isLoading","containerFunctions","bind","getGroupedProductQuantity","getProductOptionsData","overriddenAddToCartBtnHandler","containerProps","imgUrl","getProductImage","overrideAddToCartBtnBehavior","getOverrideAddToCartBtnBehavior","linkTo","getLinkTo","product","id","props","setState","items","reduce","result","item","Object","assign","options","requiredOptions","map","option_id","required","filter","thumbnail","small_image","isMobile","url","pathname","type_id","types","indexOf","length","__","render","propTypes","isRequired","func","defineProperty","_ProductCompareItemContainer","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { DeviceType } from 'Type/Device';\nimport { ProductType } from 'Type/ProductList';\nimport { BUNDLE, CONFIGURABLE } from 'Util/Product';\n\nimport ProductCompareItem from './ProductCompareItem.component';\n\nexport const ProductCompareDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/ProductCompare/ProductCompare.dispatcher'\n);\n\n/** @namespace Component/ProductCompareItem/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    device: state.ConfigReducer.device\n});\n\n/** @namespace Component/ProductCompareItem/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    removeComparedProduct: (productId) => ProductCompareDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.removeComparedProduct(productId, dispatch)\n    ),\n    showNotification: (type, message) => dispatch(showNotification(type, message))\n});\n\n/** @namespace Component/ProductCompareItem/Container */\nexport class ProductCompareItemContainer extends PureComponent {\n    static propTypes = {\n        product: ProductType.isRequired,\n        removeComparedProduct: PropTypes.func.isRequired,\n        device: DeviceType.isRequired,\n        showNotification: PropTypes.func.isRequired\n    };\n\n    state = {\n        isLoading: false\n    };\n\n    containerFunctions = {\n        removeComparedProduct: this.removeComparedProduct.bind(this),\n        getGroupedProductQuantity: this.getGroupedProductQuantity.bind(this),\n        getProductOptionsData: this.getProductOptionsData.bind(this),\n        overriddenAddToCartBtnHandler: this.overriddenAddToCartBtnHandler.bind(this)\n    };\n\n    containerProps = {\n        imgUrl: this.getProductImage(),\n        overrideAddToCartBtnBehavior: this.getOverrideAddToCartBtnBehavior(),\n        linkTo: this.getLinkTo()\n    };\n\n    async removeComparedProduct() {\n        const {\n            product: { id } = {},\n            removeComparedProduct\n        } = this.props;\n\n        this.setState({ isLoading: true });\n        await removeComparedProduct(id);\n    }\n\n    getGroupedProductQuantity() {\n        const { product: { items } = {} } = this.props;\n\n        if (!items) {\n            return {};\n        }\n\n        return items.reduce((result, item) => {\n            const { product: { id } = {} } = item;\n            Object.assign(result, { [id]: 1 });\n            return result;\n        }, {});\n    }\n\n    getProductOptionsData() {\n        const { product: { options } } = this.props;\n\n        if (!options) {\n            return { requiredOptions: [] };\n        }\n\n        return {\n            requiredOptions: options\n                .map(({ option_id, required }) => (required ? option_id : null))\n                .filter((item) => !!item)\n        };\n    }\n\n    getProductImage() {\n        const {\n            product: {\n                thumbnail,\n                small_image\n            } = {},\n            device: {\n                isMobile\n            } = {}\n        } = this.props;\n\n        if (isMobile) {\n            return small_image.url;\n        }\n\n        return thumbnail.url;\n    }\n\n    getLinkTo() {\n        const { product: { url }, product } = this.props;\n\n        return {\n            pathname: url,\n            state: { product }\n        };\n    }\n\n    getOverrideAddToCartBtnBehavior() {\n        const { product: { type_id, options } } = this.props;\n        const types = [BUNDLE, CONFIGURABLE];\n\n        return !!(types.indexOf(type_id) !== -1 || options?.length);\n    }\n\n    overriddenAddToCartBtnHandler() {\n        const { showNotification } = this.props;\n        showNotification('info', __('Please select required option!'));\n    }\n\n    render() {\n        return (\n            <ProductCompareItem\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerProps }\n              { ...this.containerFunctions }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCompareItemContainer);\n"]},"metadata":{},"sourceType":"module"}