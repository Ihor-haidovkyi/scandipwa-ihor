{"ast":null,"code":"/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */(function(){'use strict';// Exit early if we're not running in a browser.\nif(typeof window!=='object'){return;}// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif('IntersectionObserver'in window&&'IntersectionObserverEntry'in window&&'intersectionRatio'in window.IntersectionObserverEntry.prototype){// Minimal polyfill for Edge 15's lack of `isIntersecting`\n// See: https://github.com/w3c/IntersectionObserver/issues/211\nif(!('isIntersecting'in window.IntersectionObserverEntry.prototype)){Object.defineProperty(window.IntersectionObserverEntry.prototype,'isIntersecting',{get:function get(){return this.intersectionRatio>0;}});}return;}/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */function getFrameElement(doc){try{return doc.defaultView&&doc.defaultView.frameElement||null;}catch(e){// Ignore the error.\nreturn null;}}/**\n * A local reference to the root document.\n */var document=function(startDoc){var doc=startDoc;var frame=getFrameElement(doc);while(frame){doc=frame.ownerDocument;frame=getFrameElement(doc);}return doc;}(window.document);/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */var registry=[];/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */var crossOriginUpdater=null;/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */var crossOriginRect=null;/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */function IntersectionObserverEntry(entry){this.time=entry.time;this.target=entry.target;this.rootBounds=ensureDOMRect(entry.rootBounds);this.boundingClientRect=ensureDOMRect(entry.boundingClientRect);this.intersectionRect=ensureDOMRect(entry.intersectionRect||getEmptyRect());this.isIntersecting=!!entry.intersectionRect;// Calculates the intersection ratio.\nvar targetRect=this.boundingClientRect;var targetArea=targetRect.width*targetRect.height;var intersectionRect=this.intersectionRect;var intersectionArea=intersectionRect.width*intersectionRect.height;// Sets intersection ratio.\nif(targetArea){// Round the intersection ratio to avoid floating point math issues:\n// https://github.com/w3c/IntersectionObserver/issues/324\nthis.intersectionRatio=Number((intersectionArea/targetArea).toFixed(4));}else{// If area is zero and is intersecting, sets to 1, otherwise to 0\nthis.intersectionRatio=this.isIntersecting?1:0;}}/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */function IntersectionObserver(callback,opt_options){var options=opt_options||{};if(typeof callback!='function'){throw new Error('callback must be a function');}if(options.root&&options.root.nodeType!=1&&options.root.nodeType!=9){throw new Error('root must be a Document or Element');}// Binds and throttles `this._checkForIntersections`.\nthis._checkForIntersections=throttle(this._checkForIntersections.bind(this),this.THROTTLE_TIMEOUT);// Private properties.\nthis._callback=callback;this._observationTargets=[];this._queuedEntries=[];this._rootMarginValues=this._parseRootMargin(options.rootMargin);// Public properties.\nthis.thresholds=this._initThresholds(options.threshold);this.root=options.root||null;this.rootMargin=this._rootMarginValues.map(function(margin){return margin.value+margin.unit;}).join(' ');/** @private @const {!Array<!Document>} */this._monitoringDocuments=[];/** @private @const {!Array<function()>} */this._monitoringUnsubscribes=[];}/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */IntersectionObserver.prototype.THROTTLE_TIMEOUT=100;/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */IntersectionObserver.prototype.POLL_INTERVAL=null;/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */IntersectionObserver.prototype.USE_MUTATION_OBSERVER=true;/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */IntersectionObserver._setupCrossOriginUpdater=function(){if(!crossOriginUpdater){/**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */crossOriginUpdater=function crossOriginUpdater(boundingClientRect,intersectionRect){if(!boundingClientRect||!intersectionRect){crossOriginRect=getEmptyRect();}else{crossOriginRect=convertFromParentRect(boundingClientRect,intersectionRect);}registry.forEach(function(observer){observer._checkForIntersections();});};}return crossOriginUpdater;};/**\n * Resets the cross-origin mode.\n */IntersectionObserver._resetCrossOriginUpdater=function(){crossOriginUpdater=null;crossOriginRect=null;};/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */IntersectionObserver.prototype.observe=function(target){var isTargetAlreadyObserved=this._observationTargets.some(function(item){return item.element==target;});if(isTargetAlreadyObserved){return;}if(!(target&&target.nodeType==1)){throw new Error('target must be an Element');}this._registerInstance();this._observationTargets.push({element:target,entry:null});this._monitorIntersections(target.ownerDocument);this._checkForIntersections();};/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */IntersectionObserver.prototype.unobserve=function(target){this._observationTargets=this._observationTargets.filter(function(item){return item.element!=target;});this._unmonitorIntersections(target.ownerDocument);if(this._observationTargets.length==0){this._unregisterInstance();}};/**\n * Stops observing all target elements for intersection changes.\n */IntersectionObserver.prototype.disconnect=function(){this._observationTargets=[];this._unmonitorAllIntersections();this._unregisterInstance();};/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */IntersectionObserver.prototype.takeRecords=function(){var records=this._queuedEntries.slice();this._queuedEntries=[];return records;};/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */IntersectionObserver.prototype._initThresholds=function(opt_threshold){var threshold=opt_threshold||[0];if(!Array.isArray(threshold))threshold=[threshold];return threshold.sort().filter(function(t,i,a){if(typeof t!='number'||isNaN(t)||t<0||t>1){throw new Error('threshold must be a number between 0 and 1 inclusively');}return t!==a[i-1];});};/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */IntersectionObserver.prototype._parseRootMargin=function(opt_rootMargin){var marginString=opt_rootMargin||'0px';var margins=marginString.split(/\\s+/).map(function(margin){var parts=/^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);if(!parts){throw new Error('rootMargin must be specified in pixels or percent');}return{value:parseFloat(parts[1]),unit:parts[2]};});// Handles shorthand.\nmargins[1]=margins[1]||margins[0];margins[2]=margins[2]||margins[0];margins[3]=margins[3]||margins[1];return margins;};/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */IntersectionObserver.prototype._monitorIntersections=function(doc){var win=doc.defaultView;if(!win){// Already destroyed.\nreturn;}if(this._monitoringDocuments.indexOf(doc)!=-1){// Already monitoring.\nreturn;}// Private state for monitoring.\nvar callback=this._checkForIntersections;var monitoringInterval=null;var domObserver=null;// If a poll interval is set, use polling instead of listening to\n// resize and scroll events or DOM mutations.\nif(this.POLL_INTERVAL){monitoringInterval=win.setInterval(callback,this.POLL_INTERVAL);}else{addEvent(win,'resize',callback,true);addEvent(doc,'scroll',callback,true);if(this.USE_MUTATION_OBSERVER&&'MutationObserver'in win){domObserver=new win.MutationObserver(callback);domObserver.observe(doc,{attributes:true,childList:true,characterData:true,subtree:true});}}this._monitoringDocuments.push(doc);this._monitoringUnsubscribes.push(function(){// Get the window object again. When a friendly iframe is destroyed, it\n// will be null.\nvar win=doc.defaultView;if(win){if(monitoringInterval){win.clearInterval(monitoringInterval);}removeEvent(win,'resize',callback,true);}removeEvent(doc,'scroll',callback,true);if(domObserver){domObserver.disconnect();}});// Also monitor the parent.\nvar rootDoc=this.root&&(this.root.ownerDocument||this.root)||document;if(doc!=rootDoc){var frame=getFrameElement(doc);if(frame){this._monitorIntersections(frame.ownerDocument);}}};/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */IntersectionObserver.prototype._unmonitorIntersections=function(doc){var index=this._monitoringDocuments.indexOf(doc);if(index==-1){return;}var rootDoc=this.root&&(this.root.ownerDocument||this.root)||document;// Check if any dependent targets are still remaining.\nvar hasDependentTargets=this._observationTargets.some(function(item){var itemDoc=item.element.ownerDocument;// Target is in this context.\nif(itemDoc==doc){return true;}// Target is nested in this context.\nwhile(itemDoc&&itemDoc!=rootDoc){var frame=getFrameElement(itemDoc);itemDoc=frame&&frame.ownerDocument;if(itemDoc==doc){return true;}}return false;});if(hasDependentTargets){return;}// Unsubscribe.\nvar unsubscribe=this._monitoringUnsubscribes[index];this._monitoringDocuments.splice(index,1);this._monitoringUnsubscribes.splice(index,1);unsubscribe();// Also unmonitor the parent.\nif(doc!=rootDoc){var frame=getFrameElement(doc);if(frame){this._unmonitorIntersections(frame.ownerDocument);}}};/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */IntersectionObserver.prototype._unmonitorAllIntersections=function(){var unsubscribes=this._monitoringUnsubscribes.slice(0);this._monitoringDocuments.length=0;this._monitoringUnsubscribes.length=0;for(var i=0;i<unsubscribes.length;i++){unsubscribes[i]();}};/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */IntersectionObserver.prototype._checkForIntersections=function(){if(!this.root&&crossOriginUpdater&&!crossOriginRect){// Cross origin monitoring, but no initial data available yet.\nreturn;}var rootIsInDom=this._rootIsInDom();var rootRect=rootIsInDom?this._getRootRect():getEmptyRect();this._observationTargets.forEach(function(item){var target=item.element;var targetRect=getBoundingClientRect(target);var rootContainsTarget=this._rootContainsTarget(target);var oldEntry=item.entry;var intersectionRect=rootIsInDom&&rootContainsTarget&&this._computeTargetAndRootIntersection(target,targetRect,rootRect);var rootBounds=null;if(!this._rootContainsTarget(target)){rootBounds=getEmptyRect();}else if(!crossOriginUpdater||this.root){rootBounds=rootRect;}var newEntry=item.entry=new IntersectionObserverEntry({time:now(),target:target,boundingClientRect:targetRect,rootBounds:rootBounds,intersectionRect:intersectionRect});if(!oldEntry){this._queuedEntries.push(newEntry);}else if(rootIsInDom&&rootContainsTarget){// If the new entry intersection ratio has crossed any of the\n// thresholds, add a new entry.\nif(this._hasCrossedThreshold(oldEntry,newEntry)){this._queuedEntries.push(newEntry);}}else{// If the root is not in the DOM or target is not contained within\n// root but the previous entry for this target had an intersection,\n// add a new record indicating removal.\nif(oldEntry&&oldEntry.isIntersecting){this._queuedEntries.push(newEntry);}}},this);if(this._queuedEntries.length){this._callback(this.takeRecords(),this);}};/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */IntersectionObserver.prototype._computeTargetAndRootIntersection=function(target,targetRect,rootRect){// If the element isn't displayed, an intersection can't happen.\nif(window.getComputedStyle(target).display=='none')return;var intersectionRect=targetRect;var parent=getParentNode(target);var atRoot=false;while(!atRoot&&parent){var parentRect=null;var parentComputedStyle=parent.nodeType==1?window.getComputedStyle(parent):{};// If the parent isn't displayed, an intersection can't happen.\nif(parentComputedStyle.display=='none')return null;if(parent==this.root||parent.nodeType==/* DOCUMENT */9){atRoot=true;if(parent==this.root||parent==document){if(crossOriginUpdater&&!this.root){if(!crossOriginRect||crossOriginRect.width==0&&crossOriginRect.height==0){// A 0-size cross-origin intersection means no-intersection.\nparent=null;parentRect=null;intersectionRect=null;}else{parentRect=crossOriginRect;}}else{parentRect=rootRect;}}else{// Check if there's a frame that can be navigated to.\nvar frame=getParentNode(parent);var frameRect=frame&&getBoundingClientRect(frame);var frameIntersect=frame&&this._computeTargetAndRootIntersection(frame,frameRect,rootRect);if(frameRect&&frameIntersect){parent=frame;parentRect=convertFromParentRect(frameRect,frameIntersect);}else{parent=null;intersectionRect=null;}}}else{// If the element has a non-visible overflow, and it's not the <body>\n// or <html> element, update the intersection rect.\n// Note: <body> and <html> cannot be clipped to a rect that's not also\n// the document rect, so no need to compute a new intersection.\nvar doc=parent.ownerDocument;if(parent!=doc.body&&parent!=doc.documentElement&&parentComputedStyle.overflow!='visible'){parentRect=getBoundingClientRect(parent);}}// If either of the above conditionals set a new parentRect,\n// calculate new intersection data.\nif(parentRect){intersectionRect=computeRectIntersection(parentRect,intersectionRect);}if(!intersectionRect)break;parent=parent&&getParentNode(parent);}return intersectionRect;};/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */IntersectionObserver.prototype._getRootRect=function(){var rootRect;if(this.root&&!isDoc(this.root)){rootRect=getBoundingClientRect(this.root);}else{// Use <html>/<body> instead of window since scroll bars affect size.\nvar doc=isDoc(this.root)?this.root:document;var html=doc.documentElement;var body=doc.body;rootRect={top:0,left:0,right:html.clientWidth||body.clientWidth,width:html.clientWidth||body.clientWidth,bottom:html.clientHeight||body.clientHeight,height:html.clientHeight||body.clientHeight};}return this._expandRectByRootMargin(rootRect);};/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */IntersectionObserver.prototype._expandRectByRootMargin=function(rect){var margins=this._rootMarginValues.map(function(margin,i){return margin.unit=='px'?margin.value:margin.value*(i%2?rect.width:rect.height)/100;});var newRect={top:rect.top-margins[0],right:rect.right+margins[1],bottom:rect.bottom+margins[2],left:rect.left-margins[3]};newRect.width=newRect.right-newRect.left;newRect.height=newRect.bottom-newRect.top;return newRect;};/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */IntersectionObserver.prototype._hasCrossedThreshold=function(oldEntry,newEntry){// To make comparing easier, an entry that has a ratio of 0\n// but does not actually intersect is given a value of -1\nvar oldRatio=oldEntry&&oldEntry.isIntersecting?oldEntry.intersectionRatio||0:-1;var newRatio=newEntry.isIntersecting?newEntry.intersectionRatio||0:-1;// Ignore unchanged ratios\nif(oldRatio===newRatio)return;for(var i=0;i<this.thresholds.length;i++){var threshold=this.thresholds[i];// Return true if an entry matches a threshold or if the new ratio\n// and the old ratio are on the opposite sides of a threshold.\nif(threshold==oldRatio||threshold==newRatio||threshold<oldRatio!==threshold<newRatio){return true;}}};/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */IntersectionObserver.prototype._rootIsInDom=function(){return!this.root||containsDeep(document,this.root);};/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */IntersectionObserver.prototype._rootContainsTarget=function(target){var rootDoc=this.root&&(this.root.ownerDocument||this.root)||document;return containsDeep(rootDoc,target)&&(!this.root||rootDoc==target.ownerDocument);};/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */IntersectionObserver.prototype._registerInstance=function(){if(registry.indexOf(this)<0){registry.push(this);}};/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */IntersectionObserver.prototype._unregisterInstance=function(){var index=registry.indexOf(this);if(index!=-1)registry.splice(index,1);};/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */function now(){return window.performance&&performance.now&&performance.now();}/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */function throttle(fn,timeout){var timer=null;return function(){if(!timer){timer=setTimeout(function(){fn();timer=null;},timeout);}};}/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */function addEvent(node,event,fn,opt_useCapture){if(typeof node.addEventListener=='function'){node.addEventListener(event,fn,opt_useCapture||false);}else if(typeof node.attachEvent=='function'){node.attachEvent('on'+event,fn);}}/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */function removeEvent(node,event,fn,opt_useCapture){if(typeof node.removeEventListener=='function'){node.removeEventListener(event,fn,opt_useCapture||false);}else if(typeof node.detatchEvent=='function'){node.detatchEvent('on'+event,fn);}}/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */function computeRectIntersection(rect1,rect2){var top=Math.max(rect1.top,rect2.top);var bottom=Math.min(rect1.bottom,rect2.bottom);var left=Math.max(rect1.left,rect2.left);var right=Math.min(rect1.right,rect2.right);var width=right-left;var height=bottom-top;return width>=0&&height>=0&&{top:top,bottom:bottom,left:left,right:right,width:width,height:height}||null;}/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */function getBoundingClientRect(el){var rect;try{rect=el.getBoundingClientRect();}catch(err){// Ignore Windows 7 IE11 \"Unspecified error\"\n// https://github.com/w3c/IntersectionObserver/pull/205\n}if(!rect)return getEmptyRect();// Older IE\nif(!(rect.width&&rect.height)){rect={top:rect.top,right:rect.right,bottom:rect.bottom,left:rect.left,width:rect.right-rect.left,height:rect.bottom-rect.top};}return rect;}/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */function getEmptyRect(){return{top:0,bottom:0,left:0,right:0,width:0,height:0};}/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */function ensureDOMRect(rect){// A `DOMRect` object has `x` and `y` fields.\nif(!rect||'x'in rect){return rect;}// A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n// for internally calculated Rect objects. For the purposes of\n// `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n// for these fields.\nreturn{top:rect.top,y:rect.top,bottom:rect.bottom,left:rect.left,x:rect.left,right:rect.right,width:rect.width,height:rect.height};}/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */function convertFromParentRect(parentBoundingRect,parentIntersectionRect){var top=parentIntersectionRect.top-parentBoundingRect.top;var left=parentIntersectionRect.left-parentBoundingRect.left;return{top:top,left:left,height:parentIntersectionRect.height,width:parentIntersectionRect.width,bottom:top+parentIntersectionRect.height,right:left+parentIntersectionRect.width};}/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */function containsDeep(parent,child){var node=child;while(node){if(node==parent)return true;node=getParentNode(node);}return false;}/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */function getParentNode(node){var parent=node.parentNode;if(node.nodeType==/* DOCUMENT */9&&node!=document){// If this node is a document node, look for the embedding frame.\nreturn getFrameElement(node);}// If the parent has element that is assigned through shadow root slot\nif(parent&&parent.assignedSlot){parent=parent.assignedSlot.parentNode;}if(parent&&parent.nodeType==11&&parent.host){// If the parent is a shadow root, return the host element.\nreturn parent.host;}return parent;}/**\n * Returns true if `node` is a Document.\n * @param {!Node} node\n * @returns {boolean}\n */function isDoc(node){return node&&node.nodeType===9;}// Exposes the constructors globally.\nwindow.IntersectionObserver=IntersectionObserver;window.IntersectionObserverEntry=IntersectionObserverEntry;})();","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/intersection-observer/intersection-observer.js"],"names":["window","IntersectionObserverEntry","prototype","Object","defineProperty","get","intersectionRatio","getFrameElement","doc","defaultView","frameElement","e","document","startDoc","frame","ownerDocument","registry","crossOriginUpdater","crossOriginRect","entry","time","target","rootBounds","ensureDOMRect","boundingClientRect","intersectionRect","getEmptyRect","isIntersecting","targetRect","targetArea","width","height","intersectionArea","Number","toFixed","IntersectionObserver","callback","opt_options","options","Error","root","nodeType","_checkForIntersections","throttle","bind","THROTTLE_TIMEOUT","_callback","_observationTargets","_queuedEntries","_rootMarginValues","_parseRootMargin","rootMargin","thresholds","_initThresholds","threshold","map","margin","value","unit","join","_monitoringDocuments","_monitoringUnsubscribes","POLL_INTERVAL","USE_MUTATION_OBSERVER","_setupCrossOriginUpdater","convertFromParentRect","forEach","observer","_resetCrossOriginUpdater","observe","isTargetAlreadyObserved","some","item","element","_registerInstance","push","_monitorIntersections","unobserve","filter","_unmonitorIntersections","length","_unregisterInstance","disconnect","_unmonitorAllIntersections","takeRecords","records","slice","opt_threshold","Array","isArray","sort","t","i","a","isNaN","opt_rootMargin","marginString","margins","split","parts","exec","parseFloat","win","indexOf","monitoringInterval","domObserver","setInterval","addEvent","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","rootDoc","index","hasDependentTargets","itemDoc","unsubscribe","splice","unsubscribes","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","_computeTargetAndRootIntersection","newEntry","now","_hasCrossedThreshold","getComputedStyle","display","parent","getParentNode","atRoot","parentRect","parentComputedStyle","frameRect","frameIntersect","body","documentElement","overflow","computeRectIntersection","isDoc","html","top","left","right","clientWidth","bottom","clientHeight","_expandRectByRootMargin","rect","newRect","oldRatio","newRatio","containsDeep","performance","fn","timeout","timer","setTimeout","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","rect1","rect2","Math","max","min","el","err","y","x","parentBoundingRect","parentIntersectionRect","child","parentNode","assignedSlot","host"],"mappings":"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","sourcesContent":["/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (\n    options.root &&\n    options.root.nodeType != 1 &&\n    options.root.nodeType != 9\n  ) {\n    throw new Error('root must be a Document or Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var rootBounds = null;\n    if (!this._rootContainsTarget(target)) {\n      rootBounds = getEmptyRect();\n    } else if (!crossOriginUpdater || this.root) {\n      rootBounds = rootRect;\n    }\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootBounds,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root && !isDoc(this.root)) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var doc = isDoc(this.root) ? this.root : document;\n    var html = doc.documentElement;\n    var body = doc.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  return (\n    containsDeep(rootDoc, target) &&\n    (!this.root || rootDoc == target.ownerDocument)\n  );\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  // If the parent has element that is assigned through shadow root slot\n  if (parent && parent.assignedSlot) {\n    parent = parent.assignedSlot.parentNode\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  return parent;\n}\n\n/**\n * Returns true if `node` is a Document.\n * @param {!Node} node\n * @returns {boolean}\n */\nfunction isDoc(node) {\n  return node && node.nodeType === 9;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n"]},"metadata":{},"sourceType":"module"}