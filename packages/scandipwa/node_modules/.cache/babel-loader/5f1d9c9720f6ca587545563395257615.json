{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component\\\\ProductCustomizableOption\\\\ProductCustomizableOption.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { ONE_HUNDRED_PERCENT } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\component/ProductActions/ProductActions.config\";\nimport { showNotification } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/Notification/Notification.action\";\nimport { PriceType } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\type/ProductList\";\nimport { formatPrice } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\util/Price\";\nimport ProductCustomizableOption from \"./ProductCustomizableOption.component\";\n/** @namespace Component/ProductCustomizableOption/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {\n    showNotification: function (type, message) {\n      return dispatch(showNotification(type, message));\n    }\n  };\n}, \"Component/ProductCustomizableOption/Container/mapDispatchToProps\");\n/** @namespace Component/ProductCustomizableOption/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\n\nexport const mapStateToProps = middleware(function () {\n  return {};\n}, \"Component/ProductCustomizableOption/Container/mapStateToProps\");\n/** @namespace Component/ProductCustomizableOption/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _ProductCustomizableOptionContainer extends Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      textValue: '',\n      selectedDropdownValue: 0,\n      textFieldValid: null\n    };\n    this.containerFunctions = {\n      getDropdownOptions: this.getDropdownOptions.bind(this),\n      getSelectedCheckboxValue: this.getSelectedCheckboxValue.bind(this),\n      updateTextFieldValue: this.updateTextFieldValue.bind(this),\n      setDropdownValue: this.setDropdownValue.bind(this),\n      processFileUpload: this.processFileUpload.bind(this),\n      renderOptionLabel: this.renderOptionLabel.bind(this)\n    };\n\n    this.containerProps = function () {\n      return {\n        optionType: _this.getOptionType(),\n        requiredSelected: _this.getIsRequiredSelected()\n      };\n    };\n  }\n\n  getOptionType() {\n    const {\n      option\n    } = this.props;\n    const {\n      type\n    } = option;\n    return type;\n  }\n\n  getIsRequiredSelected() {\n    const {\n      productOptionsData,\n      productOptionsData: {\n        requiredOptions,\n        productOptions,\n        productOptionsMulti\n      },\n      option: {\n        option_id\n      }\n    } = this.props;\n\n    if (Object.keys(productOptionsData).length < 1 || !requiredOptions) {\n      return true;\n    }\n\n    const selectedItems = [...(productOptions || []), ...(productOptionsMulti || [])];\n    const isRequired = requiredOptions.reduce(function (acc, item) {\n      if (item === option_id) {\n        acc.push(item);\n      }\n\n      return acc;\n    }, []);\n\n    if (!isRequired.length) {\n      return true;\n    }\n\n    const isRequiredSelected = selectedItems.reduce(function (acc, {\n      option_id\n    }) {\n      if (isRequired[0] === option_id) {\n        acc.push(option_id);\n      }\n\n      return acc;\n    }, []);\n    return !!isRequiredSelected.length;\n  }\n\n  renderOptionLabel(priceType, price, currency) {\n    const {\n      price_range: {\n        minimum_price: {\n          default_final_price_excl_tax: {\n            value = 0\n          } = {}\n        } = {}\n      } = {}\n    } = this.props;\n    const finalPriceSource = price === 0 ? value : price;\n    const finalPrice = formatPrice(finalPriceSource, currency);\n\n    switch (priceType) {\n      case 'PERCENT':\n        const percentPrice = formatPrice(finalPriceSource / ONE_HUNDRED_PERCENT * value, currency);\n        return `${percentPrice} (${price}%)`;\n\n      default:\n        return finalPrice;\n    }\n  }\n\n  getSelectedCheckboxValue(value) {\n    const {\n      option,\n      setSelectedCheckboxValues\n    } = this.props;\n    const {\n      option_id\n    } = option;\n    setSelectedCheckboxValues(option_id, value);\n  }\n\n  updateTextFieldValue(value) {\n    const {\n      option,\n      setCustomizableOptionTextFieldValue\n    } = this.props;\n    const {\n      option_id,\n      required\n    } = option;\n    setCustomizableOptionTextFieldValue(option_id, value);\n    this.setState({\n      fieldValue: value,\n      textFieldValid: required ? value.length > 0 : true\n    });\n  }\n\n  setDropdownValue(value) {\n    const {\n      setSelectedDropdownValue,\n      option\n    } = this.props;\n    const {\n      selectedDropdownValue\n    } = this.state;\n\n    if (selectedDropdownValue === value) {\n      setSelectedDropdownValue(null, option);\n      this.setState({\n        selectedDropdownValue: 0\n      });\n    } else {\n      setSelectedDropdownValue(value, option);\n      this.setState({\n        selectedDropdownValue: parseInt(value, 10)\n      });\n    }\n  }\n\n  getDropdownOptions(values) {\n    var _this2 = this;\n\n    return values.reduce(function (acc, {\n      option_type_id,\n      title,\n      price,\n      price_type,\n      currency\n    }) {\n      acc.push({\n        id: option_type_id,\n        name: title,\n        value: option_type_id,\n        label: `${title} + ${_this2.renderOptionLabel(price_type, price, currency)}`\n      });\n      return acc;\n    }, []);\n  }\n\n  processFileUpload(values) {\n    const {\n      option,\n      option: {\n        data: {\n          file_extension = ''\n        }\n      },\n      setCustomizableOptionFileFieldValue,\n      showNotification\n    } = this.props;\n    const {\n      type = '',\n      name\n    } = values;\n\n    if (file_extension && !file_extension.split(', ').some(function (fileType) {\n      return type.includes(fileType);\n    })) {\n      showNotification('error', __('File type is incorrect'));\n      return false;\n    }\n\n    const reader = new FileReader(); // eslint-disable-next-line func-names\n\n    reader.onloadend = function () {\n      setCustomizableOptionFileFieldValue(reader.result, option, name);\n    };\n\n    reader.readAsDataURL(values);\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, ProductCustomizableOption, Object.assign({}, this.props, this.state, this.containerFunctions, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n_ProductCustomizableOptionContainer.propTypes = {\n  option: PropTypes.object.isRequired,\n  productOptionsData: PropTypes.object.isRequired,\n  setSelectedCheckboxValues: PropTypes.func.isRequired,\n  setCustomizableOptionTextFieldValue: PropTypes.func.isRequired,\n  setCustomizableOptionFileFieldValue: PropTypes.func.isRequired,\n  setSelectedDropdownValue: PropTypes.func.isRequired,\n  showNotification: PropTypes.func.isRequired,\n  price_range: PriceType.isRequired,\n  type_id: PropTypes.string.isRequired\n};\nObject.defineProperty(_ProductCustomizableOptionContainer, 'name', {\n  value: 'ProductCustomizableOptionContainer'\n});\n\nexport const ProductCustomizableOptionContainer = middleware(_ProductCustomizableOptionContainer, \"Component/ProductCustomizableOption/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCustomizableOptionContainer);","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/packages/scandipwa/src/component/ProductCustomizableOption/ProductCustomizableOption.container.js"],"names":["PropTypes","PureComponent","connect","ONE_HUNDRED_PERCENT","showNotification","PriceType","formatPrice","ProductCustomizableOption","mapDispatchToProps","dispatch","type","message","mapStateToProps","ProductCustomizableOptionContainer","state","textValue","selectedDropdownValue","textFieldValid","containerFunctions","getDropdownOptions","bind","getSelectedCheckboxValue","updateTextFieldValue","setDropdownValue","processFileUpload","renderOptionLabel","containerProps","optionType","getOptionType","requiredSelected","getIsRequiredSelected","option","props","productOptionsData","requiredOptions","productOptions","productOptionsMulti","option_id","Object","keys","length","selectedItems","isRequired","reduce","acc","item","push","isRequiredSelected","priceType","price","currency","price_range","minimum_price","default_final_price_excl_tax","value","finalPriceSource","finalPrice","percentPrice","setSelectedCheckboxValues","setCustomizableOptionTextFieldValue","required","setState","fieldValue","setSelectedDropdownValue","parseInt","values","option_type_id","title","price_type","id","name","label","data","file_extension","setCustomizableOptionFileFieldValue","split","some","fileType","includes","__","reader","FileReader","onloadend","result","readAsDataURL","render","propTypes","object","func","type_id","string","defineProperty","_ProductCustomizableOptionContainer"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { ONE_HUNDRED_PERCENT } from 'Component/ProductActions/ProductActions.config';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { PriceType } from 'Type/ProductList';\nimport { formatPrice } from 'Util/Price';\n\nimport ProductCustomizableOption from './ProductCustomizableOption.component';\n\n/** @namespace Component/ProductCustomizableOption/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showNotification: (type, message) => dispatch(showNotification(type, message))\n});\n\n/** @namespace Component/ProductCustomizableOption/Container/mapStateToProps */\n// eslint-disable-next-line no-unused-vars\nexport const mapStateToProps = () => ({});\n\n/** @namespace Component/ProductCustomizableOption/Container */\nexport class ProductCustomizableOptionContainer extends PureComponent {\n    static propTypes = {\n        option: PropTypes.object.isRequired,\n        productOptionsData: PropTypes.object.isRequired,\n        setSelectedCheckboxValues: PropTypes.func.isRequired,\n        setCustomizableOptionTextFieldValue: PropTypes.func.isRequired,\n        setCustomizableOptionFileFieldValue: PropTypes.func.isRequired,\n        setSelectedDropdownValue: PropTypes.func.isRequired,\n        showNotification: PropTypes.func.isRequired,\n        price_range: PriceType.isRequired,\n        type_id: PropTypes.string.isRequired\n    };\n\n    state = {\n        textValue: '',\n        selectedDropdownValue: 0,\n        textFieldValid: null\n    };\n\n    containerFunctions = {\n        getDropdownOptions: this.getDropdownOptions.bind(this),\n        getSelectedCheckboxValue: this.getSelectedCheckboxValue.bind(this),\n        updateTextFieldValue: this.updateTextFieldValue.bind(this),\n        setDropdownValue: this.setDropdownValue.bind(this),\n        processFileUpload: this.processFileUpload.bind(this),\n        renderOptionLabel: this.renderOptionLabel.bind(this)\n    };\n\n    containerProps = () => ({\n        optionType: this.getOptionType(),\n        requiredSelected: this.getIsRequiredSelected()\n    });\n\n    getOptionType() {\n        const { option } = this.props;\n        const { type } = option;\n\n        return type;\n    }\n\n    getIsRequiredSelected() {\n        const {\n            productOptionsData,\n            productOptionsData: {\n                requiredOptions,\n                productOptions,\n                productOptionsMulti\n            },\n            option: {\n                option_id\n            }\n        } = this.props;\n\n        if (Object.keys(productOptionsData).length < 1 || !requiredOptions) {\n            return true;\n        }\n\n        const selectedItems = [...productOptions || [], ...productOptionsMulti || []];\n        const isRequired = requiredOptions.reduce((acc, item) => {\n            if (item === option_id) {\n                acc.push(item);\n            }\n\n            return acc;\n        }, []);\n\n        if (!isRequired.length) {\n            return true;\n        }\n\n        const isRequiredSelected = selectedItems.reduce((acc, { option_id }) => {\n            if (isRequired[0] === option_id) {\n                acc.push(option_id);\n            }\n\n            return acc;\n        }, []);\n\n        return !!isRequiredSelected.length;\n    }\n\n    renderOptionLabel(priceType, price, currency) {\n        const {\n            price_range: {\n                minimum_price: {\n                    default_final_price_excl_tax: {\n                        value = 0\n                    } = {}\n                } = {}\n            } = {}\n        } = this.props;\n\n        const finalPriceSource = price === 0 ? value : price;\n        const finalPrice = formatPrice(finalPriceSource, currency);\n\n        switch (priceType) {\n        case 'PERCENT':\n            const percentPrice = formatPrice((finalPriceSource / ONE_HUNDRED_PERCENT) * value, currency);\n            return `${percentPrice} (${ price }%)`;\n        default:\n            return finalPrice;\n        }\n    }\n\n    getSelectedCheckboxValue(value) {\n        const { option, setSelectedCheckboxValues } = this.props;\n        const { option_id } = option;\n\n        setSelectedCheckboxValues(option_id, value);\n    }\n\n    updateTextFieldValue(value) {\n        const { option, setCustomizableOptionTextFieldValue } = this.props;\n        const { option_id, required } = option;\n\n        setCustomizableOptionTextFieldValue(option_id, value);\n        this.setState({\n            fieldValue: value,\n            textFieldValid: required ? value.length > 0 : true\n        });\n    }\n\n    setDropdownValue(value) {\n        const { setSelectedDropdownValue, option } = this.props;\n        const { selectedDropdownValue } = this.state;\n\n        if (selectedDropdownValue === value) {\n            setSelectedDropdownValue(null, option);\n            this.setState({ selectedDropdownValue: 0 });\n        } else {\n            setSelectedDropdownValue(value, option);\n            this.setState({ selectedDropdownValue: parseInt(value, 10) });\n        }\n    }\n\n    getDropdownOptions(values) {\n        return values.reduce((acc, {\n            option_type_id, title, price, price_type, currency\n        }) => {\n            acc.push({\n                id: option_type_id,\n                name: title,\n                value: option_type_id,\n                label: `${title} + ${this.renderOptionLabel(price_type, price, currency)}`\n            });\n\n            return acc;\n        }, []);\n    }\n\n    processFileUpload(values) {\n        const {\n            option,\n            option: { data: { file_extension = '' } },\n            setCustomizableOptionFileFieldValue,\n            showNotification\n        } = this.props;\n        const { type = '', name } = values;\n\n        if (file_extension && !file_extension.split(', ').some((fileType) => type.includes(fileType))) {\n            showNotification('error', __('File type is incorrect'));\n\n            return false;\n        }\n\n        const reader = new FileReader();\n        // eslint-disable-next-line func-names\n        reader.onloadend = function () {\n            setCustomizableOptionFileFieldValue(reader.result, option, name);\n        };\n\n        reader.readAsDataURL(values);\n\n        return true;\n    }\n\n    render() {\n        return (\n            <ProductCustomizableOption\n              { ...this.props }\n              { ...this.state }\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCustomizableOptionContainer);\n"]},"metadata":{},"sourceType":"module"}