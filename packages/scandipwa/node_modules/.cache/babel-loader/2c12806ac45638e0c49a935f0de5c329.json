{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import PropTypes from'prop-types';import FieldForm from\"/home/marketihor/scandipwa/packages/scandipwa/src/component/FieldForm\";/** @namespace Component/MyAccountPasswordForm/Component */var _checkBEM=require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;export var _MyAccountPasswordForm=/*#__PURE__*/function(_Extensible){_inherits(_MyAccountPasswordForm,_Extensible);var _super=_createSuper(_MyAccountPasswordForm);function _MyAccountPasswordForm(){var _this;_classCallCheck(this,_MyAccountPasswordForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onFormSuccess=function(fields){var onPasswordChange=_this.props.onPasswordChange;onPasswordChange(fields);};return _this;}_createClass(_MyAccountPasswordForm,[{key:\"fieldMap\",get:function get(){return{currentPassword:{type:'password',label:__('Current Password'),validation:['notEmpty']},newPassword:{type:'password',label:__('New password'),validation:['notEmpty']}};}},{key:\"renderActions\",value:function renderActions(){return/*#__PURE__*/_checkBEM(React,\"button\",{block:\"Button\",mix:{block:'MyAccount',elem:'Button'}},__('Change password'));}}]);return _MyAccountPasswordForm;}(Extensible(FieldForm));_MyAccountPasswordForm.propTypes={onPasswordChange:PropTypes.func.isRequired};Object.defineProperty(_MyAccountPasswordForm,'name',{value:'MyAccountPasswordForm'});export var MyAccountPasswordForm=middleware(_MyAccountPasswordForm,\"Component/MyAccountPasswordForm/Component\");export default MyAccountPasswordForm;","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountPasswordForm/MyAccountPasswordForm.component.js"],"names":["PropTypes","FieldForm","MyAccountPasswordForm","onFormSuccess","fields","onPasswordChange","props","currentPassword","type","label","__","validation","newPassword","block","elem","propTypes","func","isRequired","Object","defineProperty","_MyAccountPasswordForm","value"],"mappings":"ojBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAOA,CAAAA,SAAP,KAAsB,YAAtB,CAEA,MAAOC,CAAAA,SAAP,6EAEA,2D,wEACA,UAAaC,CAAAA,sBAAb,6XAKIC,aALJ,CAKoB,SAACC,MAAD,CAAY,IAChBC,CAAAA,gBADgB,CACK,MAAKC,KADV,CAChBD,gBADgB,CAExBA,gBAAgB,CAACD,MAAD,CAAhB,CACH,CARL,wEAUI,cAAe,CACX,MAAO,CACHG,eAAe,CAAE,CACbC,IAAI,CAAE,UADO,CAEbC,KAAK,CAAEC,EAAE,CAAC,kBAAD,CAFI,CAGbC,UAAU,CAAE,CAAC,UAAD,CAHC,CADd,CAMHC,WAAW,CAAE,CACTJ,IAAI,CAAE,UADG,CAETC,KAAK,CAAEC,EAAE,CAAC,cAAD,CAFA,CAGTC,UAAU,CAAE,CAAC,UAAD,CAHH,CANV,CAAP,CAYH,CAvBL,6BAyBI,wBAAgB,CACZ,6CACY,KAAK,CAAC,QADlB,CAC2B,GAAG,CAAG,CAAEE,KAAK,CAAE,WAAT,CAAsBC,IAAI,CAAE,QAA5B,CADjC,EAEUJ,EAAE,CAAC,iBAAD,CAFZ,EAKH,CA/BL,2DAAaR,sB,CACFa,S,CAAY,CACfV,gBAAgB,CAAEL,SAAS,CAACgB,IAAV,CAAeC,UADlB,C,CAjBvBC,MAAM,CAACC,cAAP,CAAsBC,sBAAtB,CAA8C,MAA9C,CAAsD,CAAEC,KAAK,CAAE,uBAAT,CAAtD,E,gHAkDA,cAAenB,CAAAA,qBAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\n\nimport FieldForm from 'Component/FieldForm';\n\n/** @namespace Component/MyAccountPasswordForm/Component */\nexport class MyAccountPasswordForm extends FieldForm {\n    static propTypes = {\n        onPasswordChange: PropTypes.func.isRequired\n    };\n\n    onFormSuccess = (fields) => {\n        const { onPasswordChange } = this.props;\n        onPasswordChange(fields);\n    };\n\n    get fieldMap() {\n        return {\n            currentPassword: {\n                type: 'password',\n                label: __('Current Password'),\n                validation: ['notEmpty']\n            },\n            newPassword: {\n                type: 'password',\n                label: __('New password'),\n                validation: ['notEmpty']\n            }\n        };\n    }\n\n    renderActions() {\n        return (\n            <button block=\"Button\" mix={ { block: 'MyAccount', elem: 'Button' } }>\n                { __('Change password') }\n            </button>\n        );\n    }\n}\n\nexport default MyAccountPasswordForm;\n"]},"metadata":{},"sourceType":"module"}