{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\route\\\\UrlRewrites\\\\UrlRewrites.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { HistoryType, LocationType, MatchType } from \"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\type/Common\";\nimport UrlRewrites from \"./UrlRewrites.component\";\nimport { TYPE_CATEGORY, TYPE_CMS_PAGE, TYPE_NOTFOUND, TYPE_PRODUCT } from \"./UrlRewrites.config\";\nexport const UrlRewritesDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/UrlRewrites/UrlRewrites.dispatcher\");\nexport const NoMatchDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"D:\\\\task\\\\magento2\\\\ScandiPWA\\\\packages\\\\scandipwa\\\\src\\\\store/NoMatch/NoMatch.dispatcher\");\n/** @namespace Route/UrlRewrites/Container/mapStateToProps */\n\nexport const mapStateToProps = middleware(function (state) {\n  return {\n    urlRewrite: state.UrlRewritesReducer.urlRewrite,\n    isLoading: state.UrlRewritesReducer.isLoading,\n    requestedUrl: state.UrlRewritesReducer.requestedUrl\n  };\n}, \"Route/UrlRewrites/Container/mapStateToProps\");\n/** @namespace Route/UrlRewrites/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {\n    requestUrlRewrite: function (urlParam) {\n      UrlRewritesDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.handleData(dispatch, {\n          urlParam\n        });\n      });\n    }\n  };\n}, \"Route/UrlRewrites/Container/mapDispatchToProps\");\n/** @namespace Route/UrlRewrites/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _UrlRewritesContainer extends Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.containerProps = function () {\n      return {\n        type: _this.getType(),\n        props: _this.getProps()\n      };\n    };\n  }\n\n  __construct(props) {\n    super.__construct(props);\n\n    this.requestUrlRewrite();\n  }\n\n  componentDidMount() {\n    this.initialUrl = location.pathname;\n  }\n\n  componentDidUpdate() {\n    const {\n      isLoading\n    } = this.props;\n    /**\n     * If the latest requested URL rewrite is not related\n     * to the current location, and the URL rewrites are not loading\n     * request new URL rewrite.\n     */\n\n    if (this.getIsLoading() && !isLoading) {\n      this.requestUrlRewrite();\n    }\n    /**\n     * Make sure that PDP & PLP url don't have \"/\" in the end\n     */\n\n\n    this.redirectToCorrectUrl();\n  }\n\n  redirectToCorrectUrl() {\n    const {\n      location,\n      history\n    } = this.props;\n    const type = this.getType();\n\n    if ([TYPE_CATEGORY, TYPE_PRODUCT].includes(type)) {\n      if (location.pathname.endsWith('/')) {\n        history.replace(location.pathname.slice(0, -1), history.state);\n      }\n    }\n  }\n\n  getTypeSpecificProps() {\n    const {\n      urlRewrite: {\n        id,\n        sku\n      }\n    } = this.props;\n    const isLoading = this.getIsLoading();\n\n    switch (this.getType()) {\n      case TYPE_PRODUCT:\n        /**\n         * In case we are not yet sure what product ID it is:\n         * - check if there is a hint in browser history\n         * - fallback to none\n         */\n        if (isLoading) {\n          var _history, _history$state, _history$state$state;\n\n          const product = (_history = history) === null || _history === void 0 ? void 0 : (_history$state = _history.state) === null || _history$state === void 0 ? void 0 : (_history$state$state = _history$state.state) === null || _history$state$state === void 0 ? void 0 : _history$state$state.product;\n\n          if (product) {\n            const {\n              sku: historySKU,\n              id\n            } = product;\n            return {\n              productSKU: historySKU,\n              id\n            };\n          }\n\n          return {};\n        }\n\n        return {\n          productSKU: sku,\n          id\n        };\n\n      case TYPE_CMS_PAGE:\n        if (isLoading) {\n          return {\n            isOnlyPlaceholder: true\n          };\n        }\n\n        return {\n          pageIds: id\n        };\n\n      case TYPE_CATEGORY:\n        /**\n         * In case we are not yet sure what category ID it is:\n         * - check if there is a hint in browser history\n         * - fallback to none\n         */\n        if (isLoading) {\n          var _history2, _history2$state, _history2$state$state;\n\n          const category = (_history2 = history) === null || _history2 === void 0 ? void 0 : (_history2$state = _history2.state) === null || _history2$state === void 0 ? void 0 : (_history2$state$state = _history2$state.state) === null || _history2$state$state === void 0 ? void 0 : _history2$state$state.category;\n\n          if (category && category !== true) {\n            return {\n              categoryIds: category\n            };\n          }\n\n          return {};\n        }\n\n        return {\n          categoryIds: id\n        };\n\n      case TYPE_NOTFOUND:\n      default:\n        return {};\n    }\n  }\n\n  getIsLoading() {\n    const {\n      requestedUrl\n    } = this.props;\n    return location.pathname !== requestedUrl;\n  }\n\n  getProps() {\n    const {\n      location,\n      match,\n      history\n    } = this.props;\n    return {\n      location,\n      match,\n      history,\n      ...this.getTypeSpecificProps()\n    };\n  }\n\n  getFallbackType() {\n    const {\n      actionName: {\n        type: initialType = ''\n      } = {}\n    } = window;\n\n    if (this.initialUrl === location.pathname) {\n      return initialType;\n    }\n\n    return '';\n  }\n\n  getType() {\n    const {\n      urlRewrite: {\n        type,\n        notFound\n      }\n    } = this.props;\n    /**\n     * If the URL rewrite is loading, prefer state-defined URL type,\n     * else fallback to one defined in HTML document by PHP controller\n     * (which is only valid for 1st load).\n     */\n\n    if (this.getIsLoading()) {\n      var _history3, _history3$state;\n\n      const state = ((_history3 = history) === null || _history3 === void 0 ? void 0 : (_history3$state = _history3.state) === null || _history3$state === void 0 ? void 0 : _history3$state.state) || {};\n      const typeKey = Object.keys(state).find(function (key) {\n        return UrlRewritesContainer.stateMapping[key];\n      });\n\n      if (typeKey) {\n        return UrlRewritesContainer.stateMapping[typeKey];\n      }\n      /**\n       * Otherwise fallback to other guessed types - from window i.e.\n       */\n\n\n      return this.getFallbackType();\n    }\n\n    if (notFound) {\n      return TYPE_NOTFOUND;\n    }\n\n    if (type) {\n      return type;\n    }\n\n    return '';\n  }\n\n  requestUrlRewrite() {\n    const {\n      requestUrlRewrite\n    } = this.props;\n    return requestUrlRewrite(location.pathname);\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, UrlRewrites, Object.assign({}, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n_UrlRewritesContainer.propTypes = {\n  location: LocationType.isRequired,\n  match: MatchType.isRequired,\n  history: HistoryType.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  requestedUrl: PropTypes.string,\n  requestUrlRewrite: PropTypes.func.isRequired,\n  urlRewrite: PropTypes.shape({\n    id: PropTypes.number,\n    type: PropTypes.string,\n    sku: PropTypes.string,\n    notFound: PropTypes.bool\n  }).isRequired\n};\n_UrlRewritesContainer.defaultProps = {\n  requestedUrl: ''\n};\n_UrlRewritesContainer.stateMapping = {\n  category: TYPE_CATEGORY,\n  product: TYPE_PRODUCT,\n  page: TYPE_CMS_PAGE\n};\nObject.defineProperty(_UrlRewritesContainer, 'name', {\n  value: 'UrlRewritesContainer'\n});\n\nexport const UrlRewritesContainer = middleware(_UrlRewritesContainer, \"Route/UrlRewrites/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(UrlRewritesContainer);","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/packages/scandipwa/src/route/UrlRewrites/UrlRewrites.container.js"],"names":["PropTypes","PureComponent","connect","HistoryType","LocationType","MatchType","UrlRewrites","TYPE_CATEGORY","TYPE_CMS_PAGE","TYPE_NOTFOUND","TYPE_PRODUCT","UrlRewritesDispatcher","NoMatchDispatcher","mapStateToProps","state","urlRewrite","UrlRewritesReducer","isLoading","requestedUrl","mapDispatchToProps","dispatch","requestUrlRewrite","urlParam","then","default","dispatcher","handleData","UrlRewritesContainer","containerProps","type","getType","props","getProps","__construct","componentDidMount","initialUrl","location","pathname","componentDidUpdate","getIsLoading","redirectToCorrectUrl","history","includes","endsWith","replace","slice","getTypeSpecificProps","id","sku","product","historySKU","productSKU","isOnlyPlaceholder","pageIds","category","categoryIds","match","getFallbackType","actionName","initialType","window","notFound","typeKey","Object","keys","find","key","stateMapping","render","propTypes","isRequired","bool","string","func","shape","number","defaultProps","page","defineProperty","_UrlRewritesContainer","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport { HistoryType, LocationType, MatchType } from 'Type/Common';\n\nimport UrlRewrites from './UrlRewrites.component';\nimport {\n    TYPE_CATEGORY,\n    TYPE_CMS_PAGE,\n    TYPE_NOTFOUND,\n    TYPE_PRODUCT\n} from './UrlRewrites.config';\n\nexport const UrlRewritesDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/UrlRewrites/UrlRewrites.dispatcher'\n);\n\nexport const NoMatchDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/NoMatch/NoMatch.dispatcher'\n);\n\n/** @namespace Route/UrlRewrites/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    urlRewrite: state.UrlRewritesReducer.urlRewrite,\n    isLoading: state.UrlRewritesReducer.isLoading,\n    requestedUrl: state.UrlRewritesReducer.requestedUrl\n});\n\n/** @namespace Route/UrlRewrites/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    requestUrlRewrite: (urlParam) => {\n        UrlRewritesDispatcher.then(\n            ({ default: dispatcher }) => dispatcher.handleData(dispatch, { urlParam })\n        );\n    }\n});\n\n/** @namespace Route/UrlRewrites/Container */\nexport class UrlRewritesContainer extends PureComponent {\n    static propTypes = {\n        location: LocationType.isRequired,\n        match: MatchType.isRequired,\n        history: HistoryType.isRequired,\n        isLoading: PropTypes.bool.isRequired,\n        requestedUrl: PropTypes.string,\n        requestUrlRewrite: PropTypes.func.isRequired,\n        urlRewrite: PropTypes.shape({\n            id: PropTypes.number,\n            type: PropTypes.string,\n            sku: PropTypes.string,\n            notFound: PropTypes.bool\n        }).isRequired\n    };\n\n    static defaultProps = {\n        requestedUrl: ''\n    };\n\n    static stateMapping = {\n        category: TYPE_CATEGORY,\n        product: TYPE_PRODUCT,\n        page: TYPE_CMS_PAGE\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        this.requestUrlRewrite();\n    }\n\n    componentDidMount() {\n        this.initialUrl = location.pathname;\n    }\n\n    componentDidUpdate() {\n        const { isLoading } = this.props;\n\n        /**\n         * If the latest requested URL rewrite is not related\n         * to the current location, and the URL rewrites are not loading\n         * request new URL rewrite.\n         */\n        if (this.getIsLoading() && !isLoading) {\n            this.requestUrlRewrite();\n        }\n\n        /**\n         * Make sure that PDP & PLP url don't have \"/\" in the end\n         */\n        this.redirectToCorrectUrl();\n    }\n\n    redirectToCorrectUrl() {\n        const { location, history } = this.props;\n\n        const type = this.getType();\n        if ([TYPE_CATEGORY, TYPE_PRODUCT].includes(type)) {\n            if (location.pathname.endsWith('/')) {\n                history.replace(\n                    location.pathname.slice(0, -1),\n                    history.state\n                );\n            }\n        }\n    }\n\n    containerProps = () => ({\n        type: this.getType(),\n        props: this.getProps()\n    });\n\n    getTypeSpecificProps() {\n        const {\n            urlRewrite: {\n                id,\n                sku\n            }\n        } = this.props;\n\n        const isLoading = this.getIsLoading();\n\n        switch (this.getType()) {\n        case TYPE_PRODUCT:\n            /**\n             * In case we are not yet sure what product ID it is:\n             * - check if there is a hint in browser history\n             * - fallback to none\n             */\n            if (isLoading) {\n                const product = history?.state?.state?.product;\n\n                if (product) {\n                    const { sku: historySKU, id } = product;\n                    return { productSKU: historySKU, id };\n                }\n\n                return {};\n            }\n\n            return { productSKU: sku, id };\n        case TYPE_CMS_PAGE:\n            if (isLoading) {\n                return { isOnlyPlaceholder: true };\n            }\n\n            return { pageIds: id };\n        case TYPE_CATEGORY:\n            /**\n             * In case we are not yet sure what category ID it is:\n             * - check if there is a hint in browser history\n             * - fallback to none\n             */\n            if (isLoading) {\n                const category = history?.state?.state?.category;\n\n                if (category && category !== true) {\n                    return { categoryIds: category };\n                }\n\n                return {};\n            }\n\n            return { categoryIds: id };\n        case TYPE_NOTFOUND:\n        default:\n            return {};\n        }\n    }\n\n    getIsLoading() {\n        const { requestedUrl } = this.props;\n        return location.pathname !== requestedUrl;\n    }\n\n    getProps() {\n        const {\n            location,\n            match,\n            history\n        } = this.props;\n\n        return {\n            location,\n            match,\n            history,\n            ...this.getTypeSpecificProps()\n        };\n    }\n\n    getFallbackType() {\n        const {\n            actionName: { type: initialType = '' } = {}\n        } = window;\n\n        if (this.initialUrl === location.pathname) {\n            return initialType;\n        }\n\n        return '';\n    }\n\n    getType() {\n        const { urlRewrite: { type, notFound } } = this.props;\n\n        /**\n         * If the URL rewrite is loading, prefer state-defined URL type,\n         * else fallback to one defined in HTML document by PHP controller\n         * (which is only valid for 1st load).\n         */\n        if (this.getIsLoading()) {\n            const state = history?.state?.state || {};\n            const typeKey = Object.keys(state).find((key) => UrlRewritesContainer.stateMapping[key]);\n\n            if (typeKey) {\n                return UrlRewritesContainer.stateMapping[typeKey];\n            }\n\n            /**\n             * Otherwise fallback to other guessed types - from window i.e.\n             */\n            return this.getFallbackType();\n        }\n\n        if (notFound) {\n            return TYPE_NOTFOUND;\n        }\n\n        if (type) {\n            return type;\n        }\n\n        return '';\n    }\n\n    requestUrlRewrite() {\n        const { requestUrlRewrite } = this.props;\n        return requestUrlRewrite(location.pathname);\n    }\n\n    render() {\n        return (\n            <UrlRewrites\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UrlRewritesContainer);\n"]},"metadata":{},"sourceType":"module"}