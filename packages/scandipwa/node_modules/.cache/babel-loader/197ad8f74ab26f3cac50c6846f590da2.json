{"ast":null,"code":"import getPluginsForMember from \"../helpers/getPluginsForMember\";\nimport generateMiddlewaredFunction from \"../middlewarers/generateMiddlewaredFunction\";\n/**\n * @param {string} targetType class | instance\n * @param {string} namespaces\n */\n\nexport default (function (targetType, namespaces) {\n  return function (target, memberName, proxy) {\n    // Get the original member\n    const origMember = Reflect.get(target, memberName, proxy); // GET handler intercepts static members on classes\n    // And instance members (member-functions) on instances\n\n    const targetSpecifier = targetType === 'class' ? 'static-member' : 'member-function'; // Get the plugins\n\n    const memberPluginsGet = getPluginsForMember(namespaces, targetSpecifier, memberName); // If no plugins - return the original member\n\n    if (!memberPluginsGet.length) {\n      return origMember;\n    } // Generate a function which is original member wrapped into the plugins\n\n\n    const middlewaredFunction = generateMiddlewaredFunction(origMember, memberPluginsGet, proxy); // If original member was an object - return the value from the function call\n\n    if (typeof origMember === 'object') {\n      return middlewaredFunction();\n    } // Return the function wrapped into plugins\n\n\n    return middlewaredFunction;\n  };\n});","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/node_modules/@scandipwa/scandipwa-extensibility/lib/handlers/generateGetHandler.js"],"names":["getPluginsForMember","generateMiddlewaredFunction","targetType","namespaces","target","memberName","proxy","origMember","Reflect","get","targetSpecifier","memberPluginsGet","length","middlewaredFunction"],"mappings":"AAAA,OAAOA,mBAAP;AACA,OAAOC,2BAAP;AAEA;AACA;AACA;AACA;;AACA,gBAAe,UAACC,UAAD,EAAaC,UAAb;AAAA,SAA4B,UAACC,MAAD,EAASC,UAAT,EAAqBC,KAArB,EAA+B;AACtE;AACA,UAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAAoBC,UAApB,EAAgCC,KAAhC,CAAnB,CAFsE,CAItE;AACA;;AACA,UAAMI,eAAe,GAAGR,UAAU,KAAK,OAAf,GAClB,eADkB,GAElB,iBAFN,CANsE,CAUtE;;AACA,UAAMS,gBAAgB,GAAGX,mBAAmB,CAACG,UAAD,EAAaO,eAAb,EAA8BL,UAA9B,CAA5C,CAXsE,CAatE;;AACA,QAAI,CAACM,gBAAgB,CAACC,MAAtB,EAA8B;AAC1B,aAAOL,UAAP;AACH,KAhBqE,CAkBtE;;;AACA,UAAMM,mBAAmB,GAAGZ,2BAA2B,CACnDM,UADmD,EAEnDI,gBAFmD,EAGnDL,KAHmD,CAAvD,CAnBsE,CAyBtE;;AACA,QAAI,OAAOC,UAAP,KAAsB,QAA1B,EAAoC;AAChC,aAAOM,mBAAmB,EAA1B;AACH,KA5BqE,CA8BtE;;;AACA,WAAOA,mBAAP;AACH,GAhCc;AAAA,CAAf","sourcesContent":["import getPluginsForMember from '../helpers/getPluginsForMember';\nimport generateMiddlewaredFunction from '../middlewarers/generateMiddlewaredFunction';\n\n/**\n * @param {string} targetType class | instance\n * @param {string} namespaces\n */\nexport default (targetType, namespaces) => (target, memberName, proxy) => {\n    // Get the original member\n    const origMember = Reflect.get(target, memberName, proxy);\n\n    // GET handler intercepts static members on classes\n    // And instance members (member-functions) on instances\n    const targetSpecifier = targetType === 'class'\n        ? 'static-member'\n        : 'member-function';\n\n    // Get the plugins\n    const memberPluginsGet = getPluginsForMember(namespaces, targetSpecifier, memberName);\n\n    // If no plugins - return the original member\n    if (!memberPluginsGet.length) {\n        return origMember;\n    }\n\n    // Generate a function which is original member wrapped into the plugins\n    const middlewaredFunction = generateMiddlewaredFunction(\n        origMember,\n        memberPluginsGet,\n        proxy\n    );\n\n    // If original member was an object - return the value from the function call\n    if (typeof origMember === 'object') {\n        return middlewaredFunction();\n    }\n\n    // Return the function wrapped into plugins\n    return middlewaredFunction;\n};\n"]},"metadata":{},"sourceType":"module"}