{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/import{WorkboxError}from\"../_private/WorkboxError.js\";import\"../_version.js\";/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */var isArray=function isArray(value,details){if(!Array.isArray(value)){throw new WorkboxError('not-an-array',details);}};var hasMethod=function hasMethod(object,expectedMethod,details){var type=typeof object[expectedMethod];if(type!=='function'){details['expectedMethod']=expectedMethod;throw new WorkboxError('missing-a-method',details);}};var isType=function isType(object,expectedType,details){if(typeof object!==expectedType){details['expectedType']=expectedType;throw new WorkboxError('incorrect-type',details);}};var isInstance=function isInstance(object,expectedClass,details){if(!(object instanceof expectedClass)){details['expectedClass']=expectedClass;throw new WorkboxError('incorrect-class',details);}};var isOneOf=function isOneOf(value,validValues,details){if(!validValues.includes(value)){details['validValueDescription']=\"Valid values are \".concat(JSON.stringify(validValues),\".\");throw new WorkboxError('invalid-value',details);}};var isArrayOfClass=function isArrayOfClass(value,expectedClass,details){var error=new WorkboxError('not-array-of-class',details);if(!Array.isArray(value)){throw error;}var _iterator=_createForOfIteratorHelper(value),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value;if(!(item instanceof expectedClass)){throw error;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}};var finalAssertExports=process.env.NODE_ENV==='production'?null:{hasMethod:hasMethod,isArray:isArray,isInstance:isInstance,isOneOf:isOneOf,isType:isType,isArrayOfClass:isArrayOfClass};export{finalAssertExports as assert};","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/workbox-core/_private/assert.js"],"names":["WorkboxError","isArray","value","details","Array","hasMethod","object","expectedMethod","type","isType","expectedType","isInstance","expectedClass","isOneOf","validValues","includes","JSON","stringify","isArrayOfClass","error","item","finalAssertExports","process","env","NODE_ENV","assert"],"mappings":"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","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n"]},"metadata":{},"sourceType":"module"}