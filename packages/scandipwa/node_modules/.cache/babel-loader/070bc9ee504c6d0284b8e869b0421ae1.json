{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */ /**\n * Builds GraphQL query according to https://graphql.org/learn/queries/ documentation\n * @class Query\n * @extends Field\n * @namespace Util/Query/Field\n */export var _Field=/*#__PURE__*/function(_Extensible){_inherits(_Field,_Extensible);var _super=_createSuper(_Field);function _Field(){var _this;_classCallCheck(this,_Field);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.alias='';_this.children=[];_this.args=[];_this.addField=function(field){if(typeof field==='string'){_this.children.push(new Field(field));}else if(field instanceof Field){_this.children.push(field);}return _assertThisInitialized(_this);};return _this;}_createClass(_Field,[{key:\"__construct\",value:function __construct(name){this.name=name;}},{key:\"setAlias\",value:function setAlias(alias){this.alias=\"\".concat(alias,\":\");return this;}},{key:\"addFieldList\",value:function addFieldList(fieldList){fieldList.forEach(this.addField);return this;}},{key:\"addArgument\",value:function addArgument(name,type,value){this.args.push({name:name,type:type,value:value});return this;}}]);return _Field;}(Extensible());Object.defineProperty(_Field,'name',{value:'Field'});export var Field=middleware(_Field,\"Util/Query/Field\");export default Field;","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/util/Query/Field.js"],"names":["Field","alias","children","args","addField","field","push","name","fieldList","forEach","type","value","Object","defineProperty","_Field"],"mappings":"qtBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,UAAaA,CAAAA,MAAb,6TACIC,KADJ,CACY,EADZ,OAGIC,QAHJ,CAGe,EAHf,OAKIC,IALJ,CAKW,EALX,OAWIC,QAXJ,CAWe,SAACC,KAAD,CAAW,CAClB,GAAI,MAAOA,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC3B,MAAKH,QAAL,CAAcI,IAAd,CAAmB,GAAIN,CAAAA,KAAJ,CAAUK,KAAV,CAAnB,EACH,CAFD,IAEO,IAAIA,KAAK,WAAYL,CAAAA,KAArB,CAA4B,CAC/B,MAAKE,QAAL,CAAcI,IAAd,CAAmBD,KAAnB,EACH,CAED,qCACH,CAnBL,6DAOI,qBAAYE,IAAZ,CAAkB,CACd,KAAKA,IAAL,CAAYA,IAAZ,CACH,CATL,wBAqBI,kBAASN,KAAT,CAAgB,CACZ,KAAKA,KAAL,WAAgBA,KAAhB,MAEA,MAAO,KAAP,CACH,CAzBL,4BA2BI,sBAAaO,SAAb,CAAwB,CACpBA,SAAS,CAACC,OAAV,CAAkB,KAAKL,QAAvB,EAEA,MAAO,KAAP,CACH,CA/BL,2BAiCI,qBAAYG,IAAZ,CAAkBG,IAAlB,CAAwBC,KAAxB,CAA+B,CAC3B,KAAKR,IAAL,CAAUG,IAAV,CAAe,CACXC,IAAI,CAAJA,IADW,CAEXG,IAAI,CAAJA,IAFW,CAGXC,KAAK,CAALA,KAHW,CAAf,EAMA,MAAO,KAAP,CACH,CAzCL,kCAjBAC,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA8B,MAA9B,CAAsC,CAAEH,KAAK,CAAE,OAAT,CAAtC,E,uDA6DA,cAAeX,CAAAA,KAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n/**\n * Builds GraphQL query according to https://graphql.org/learn/queries/ documentation\n * @class Query\n * @extends Field\n * @namespace Util/Query/Field\n */\nexport class Field {\n    alias = '';\n\n    children = [];\n\n    args = [];\n\n    __construct(name) {\n        this.name = name;\n    }\n\n    addField = (field) => {\n        if (typeof field === 'string') {\n            this.children.push(new Field(field));\n        } else if (field instanceof Field) {\n            this.children.push(field);\n        }\n\n        return this;\n    };\n\n    setAlias(alias) {\n        this.alias = `${alias}:`;\n\n        return this;\n    }\n\n    addFieldList(fieldList) {\n        fieldList.forEach(this.addField);\n\n        return this;\n    }\n\n    addArgument(name, type, value) {\n        this.args.push({\n            name,\n            type,\n            value\n        });\n\n        return this;\n    }\n}\n\nexport default Field;\n"]},"metadata":{},"sourceType":"module"}