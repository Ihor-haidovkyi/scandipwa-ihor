{"ast":null,"code":"import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */ // TODO: maybe consider moving to IndexedDB insead of localStorage\n/**\n * Set of helpers related to Browser Database\n * @class CSS\n * @namespace Util/BrowserDatabase\n */export var _BrowserDatabase=/*#__PURE__*/function(_Extensible){_inherits(_BrowserDatabase,_Extensible);var _super=_createSuper(_BrowserDatabase);function _BrowserDatabase(){_classCallCheck(this,_BrowserDatabase);return _super.apply(this,arguments);}_createClass(_BrowserDatabase,[{key:\"getItem\",value:/**\n     * Loads data from browser storage\n     * @param {String} location Name of the local storage\n     * @return {Object} Object stored in a specified path\n     * @memberof BrowserDatabase\n     */function getItem(location){try{var entryObject=JSON.parse(localStorage.getItem(location));var data=entryObject.data,expiration=entryObject.expiration,createdAt=entryObject.createdAt;var MILLISECONDS_TO_SECONDS=1000;if(expiration&&Date.now()-createdAt>expiration*MILLISECONDS_TO_SECONDS){localStorage.removeItem(location);return null;}return data;}catch(_unused){return null;}}/**\n     * Save data to local storage\n     * @param {Any} data The value to save to local storage\n     * @param {String} location Name of the local storage\n     * @param {Number} expiration Time to store entry (in seconds)\n     * @return {Void}\n     * @memberof BrowserDatabase\n     */},{key:\"setItem\",value:function setItem(data,location,expiration){localStorage.setItem(location,JSON.stringify({data:data,expiration:expiration,createdAt:Date.now()}));}/**\n     * Delete item from local storage\n     * @param {String} location\n     * @memberof BrowserDatabase\n     */},{key:\"deleteItem\",value:function deleteItem(location){localStorage.removeItem(location);}}]);return _BrowserDatabase;}(Extensible());Object.defineProperty(_BrowserDatabase,'name',{value:'BrowserDatabase'});export var BrowserDatabase=middleware(_BrowserDatabase,\"Util/BrowserDatabase\");export default new BrowserDatabase();","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/util/BrowserDatabase/BrowserDatabase.js"],"names":["BrowserDatabase","location","entryObject","JSON","parse","localStorage","getItem","data","expiration","createdAt","MILLISECONDS_TO_SECONDS","Date","now","removeItem","setItem","stringify","Object","defineProperty","_BrowserDatabase","value"],"mappings":"ojBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,CAEA;AAEA;AACA;AACA;AACA;AACA,GACA,UAAaA,CAAAA,gBAAb,kRACI;AACJ;AACA;AACA;AACA;AACA,OACI,iBAAQC,QAAR,CAAkB,CACd,GAAI,CACA,GAAMC,CAAAA,WAAW,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBL,QAArB,CAAX,CAApB,CADA,GAEQM,CAAAA,IAFR,CAEwCL,WAFxC,CAEQK,IAFR,CAEcC,UAFd,CAEwCN,WAFxC,CAEcM,UAFd,CAE0BC,SAF1B,CAEwCP,WAFxC,CAE0BO,SAF1B,CAGA,GAAMC,CAAAA,uBAAuB,CAAG,IAAhC,CAEA,GAAIF,UAAU,EAAIG,IAAI,CAACC,GAAL,GAAaH,SAAb,CAAyBD,UAAU,CAAGE,uBAAxD,CAAiF,CAC7EL,YAAY,CAACQ,UAAb,CAAwBZ,QAAxB,EACA,MAAO,KAAP,CACH,CAED,MAAOM,CAAAA,IAAP,CACH,CAAC,cAAM,CACJ,MAAO,KAAP,CACH,CACJ,CAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,OA/BA,uBAgCI,iBAAQA,IAAR,CAAcN,QAAd,CAAwBO,UAAxB,CAAoC,CAChCH,YAAY,CAACS,OAAb,CAAqBb,QAArB,CAA+BE,IAAI,CAACY,SAAL,CAAe,CAC1CR,IAAI,CAAJA,IAD0C,CAE1CC,UAAU,CAAVA,UAF0C,CAG1CC,SAAS,CAAEE,IAAI,CAACC,GAAL,EAH+B,CAAf,CAA/B,EAKH,CAED;AACJ;AACA;AACA;AACA,OA5CA,0BA6CI,oBAAWX,QAAX,CAAqB,CACjBI,YAAY,CAACQ,UAAb,CAAwBZ,QAAxB,EACH,CA/CL,4CAlBAe,MAAM,CAACC,cAAP,CAAsBC,gBAAtB,CAAwC,MAAxC,CAAgD,CAAEC,KAAK,CAAE,iBAAT,CAAhD,E,+EAoEA,cAAe,IAAInB,CAAAA,eAAJ,EAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\n// TODO: maybe consider moving to IndexedDB insead of localStorage\n\n/**\n * Set of helpers related to Browser Database\n * @class CSS\n * @namespace Util/BrowserDatabase\n */\nexport class BrowserDatabase {\n    /**\n     * Loads data from browser storage\n     * @param {String} location Name of the local storage\n     * @return {Object} Object stored in a specified path\n     * @memberof BrowserDatabase\n     */\n    getItem(location) {\n        try {\n            const entryObject = JSON.parse(localStorage.getItem(location));\n            const { data, expiration, createdAt } = entryObject;\n            const MILLISECONDS_TO_SECONDS = 1000;\n\n            if (expiration && Date.now() - createdAt > expiration * MILLISECONDS_TO_SECONDS) {\n                localStorage.removeItem(location);\n                return null;\n            }\n\n            return data;\n        } catch {\n            return null;\n        }\n    }\n\n    /**\n     * Save data to local storage\n     * @param {Any} data The value to save to local storage\n     * @param {String} location Name of the local storage\n     * @param {Number} expiration Time to store entry (in seconds)\n     * @return {Void}\n     * @memberof BrowserDatabase\n     */\n    setItem(data, location, expiration) {\n        localStorage.setItem(location, JSON.stringify({\n            data,\n            expiration,\n            createdAt: Date.now()\n        }));\n    }\n\n    /**\n     * Delete item from local storage\n     * @param {String} location\n     * @memberof BrowserDatabase\n     */\n    deleteItem(location) {\n        localStorage.removeItem(location);\n    }\n}\n\nexport default new BrowserDatabase();\n"]},"metadata":{},"sourceType":"module"}