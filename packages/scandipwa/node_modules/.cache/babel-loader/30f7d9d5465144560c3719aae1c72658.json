{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/import{messages}from\"./messages.js\";import\"../../_version.js\";var fallback=function fallback(code){var msg=code;for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}if(args.length>0){msg+=\" :: \".concat(JSON.stringify(args));}return msg;};var generatorFunction=function generatorFunction(code){var details=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var message=messages[code];if(!message){throw new Error(\"Unable to find message for code '\".concat(code,\"'.\"));}return message(details);};export var messageGenerator=process.env.NODE_ENV==='production'?fallback:generatorFunction;","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/workbox-core/models/messages/messageGenerator.js"],"names":["messages","fallback","code","msg","args","length","JSON","stringify","generatorFunction","details","message","Error","messageGenerator","process","env","NODE_ENV"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,OAASA,QAAT,qBACA,0BACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAmB,CAChC,GAAIC,CAAAA,GAAG,CAAGD,IAAV,CADgC,8BAATE,IAAS,qDAATA,IAAS,0BAEhC,GAAIA,IAAI,CAACC,MAAL,CAAc,CAAlB,CAAqB,CACjBF,GAAG,gBAAWG,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAX,CAAH,CACH,CACD,MAAOD,CAAAA,GAAP,CACH,CAND,CAOA,GAAMK,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACN,IAAD,CAAwB,IAAjBO,CAAAA,OAAiB,2DAAP,EAAO,CAC9C,GAAMC,CAAAA,OAAO,CAAGV,QAAQ,CAACE,IAAD,CAAxB,CACA,GAAI,CAACQ,OAAL,CAAc,CACV,KAAM,IAAIC,CAAAA,KAAJ,4CAA8CT,IAA9C,OAAN,CACH,CACD,MAAOQ,CAAAA,OAAO,CAACD,OAAD,CAAd,CACH,CAND,CAOA,MAAO,IAAMG,CAAAA,gBAAgB,CAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA1B,CAC5Bd,QAD4B,CACjBO,iBADR","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n"]},"metadata":{},"sourceType":"module"}