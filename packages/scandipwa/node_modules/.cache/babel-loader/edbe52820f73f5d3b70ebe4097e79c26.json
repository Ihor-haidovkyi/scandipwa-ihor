{"ast":null,"code":"var _jsxFileName = \"/home/marketihor/scandipwa/packages/scandipwa/src/component/GroupedProductsItem/GroupedProductsItem.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { ProductType } from \"/home/marketihor/scandipwa/packages/scandipwa/src/type/ProductList\";\nimport GroupedProductsItem from \"./GroupedProductsItem.component\";\n/** @namespace Component/GroupedProductsItem/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _GroupedProductsItemContainer extends Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.containerFunctions = {\n      changeCount: this.changeCount.bind(this)\n    };\n\n    this.containerProps = function () {\n      return {\n        itemCount: _this._getCurrentQuantity()\n      };\n    };\n  }\n\n  __construct(props) {\n    super.__construct(props);\n\n    const {\n      defaultQuantity\n    } = this.props;\n    this.changeCount(defaultQuantity);\n  }\n\n  /**\n   * Get the selected quantity of grouped product\n   * @return {Number} product quantity\n   */\n  _getCurrentQuantity() {\n    const {\n      product: {\n        id\n      },\n      groupedProductQuantity\n    } = this.props;\n    return groupedProductQuantity[id] || 0;\n  }\n\n  changeCount(itemCount) {\n    const {\n      setGroupedProductQuantity,\n      product: {\n        id\n      }\n    } = this.props;\n    setGroupedProductQuantity(id, itemCount);\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, GroupedProductsItem, Object.assign({}, this.props, this.containerFunctions, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n_GroupedProductsItemContainer.propTypes = {\n  product: ProductType.isRequired,\n  groupedProductQuantity: PropTypes.objectOf(PropTypes.number).isRequired,\n  setGroupedProductQuantity: PropTypes.func.isRequired,\n  defaultQuantity: PropTypes.number.isRequired\n};\nObject.defineProperty(_GroupedProductsItemContainer, 'name', {\n  value: 'GroupedProductsItemContainer'\n});\n\nexport const GroupedProductsItemContainer = middleware(_GroupedProductsItemContainer, \"Component/GroupedProductsItem/Container\");\nexport default GroupedProductsItemContainer;","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/GroupedProductsItem/GroupedProductsItem.container.js"],"names":["PropTypes","PureComponent","ProductType","GroupedProductsItem","GroupedProductsItemContainer","containerFunctions","changeCount","bind","containerProps","itemCount","_getCurrentQuantity","__construct","props","defaultQuantity","product","id","groupedProductQuantity","setGroupedProductQuantity","render","propTypes","isRequired","objectOf","number","func","Object","defineProperty","_GroupedProductsItemContainer","value"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,OAA9B;AAEA,SAASC,WAAT;AAEA,OAAOC,mBAAP;AAEA;;;;AACA,OAAO,MAAMC,6BAAN,mCAAyD;AAAA;AAAA;;AAAA;AAAA;AAAA,SAQ5DC,kBAR4D,GAQvC;AACjBC,MAAAA,WAAW,EAAE,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB;AADI,KARuC;;AAAA,SAmB5DC,cAnB4D,GAmB3C;AAAA,aAAO;AACpBC,QAAAA,SAAS,EAAE,KAAI,CAACC,mBAAL;AADS,OAAP;AAAA,KAnB2C;AAAA;;AAY5DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMD,WAAN,CAAkBC,KAAlB;;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAsB,KAAKD,KAAjC;AACA,SAAKN,WAAL,CAAiBO,eAAjB;AACH;;AAMD;AACJ;AACA;AACA;AACIH,EAAAA,mBAAmB,GAAG;AAClB,UAAM;AACFI,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF,OADP;AAEFC,MAAAA;AAFE,QAGF,KAAKJ,KAHT;AAKA,WAAOI,sBAAsB,CAACD,EAAD,CAAtB,IAA8B,CAArC;AACH;;AAEDT,EAAAA,WAAW,CAACG,SAAD,EAAY;AACnB,UAAM;AAAEQ,MAAAA,yBAAF;AAA6BH,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF;AAAtC,QAAiD,KAAKH,KAA5D;AACAK,IAAAA,yBAAyB,CAACF,EAAD,EAAKN,SAAL,CAAzB;AACH;;AAEDS,EAAAA,MAAM,GAAG;AACL,yCACK,mBADL,oBAEW,KAAKN,KAFhB,EAGW,KAAKP,kBAHhB,EAIW,KAAKG,cAAL,EAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOH;;AAjD2D;AAAnDJ,6B,CACFe,S,GAAY;AACfL,EAAAA,OAAO,EAAEZ,WAAW,CAACkB,UADN;AAEfJ,EAAAA,sBAAsB,EAAEhB,SAAS,CAACqB,QAAV,CAAmBrB,SAAS,CAACsB,MAA7B,EAAqCF,UAF9C;AAGfH,EAAAA,yBAAyB,EAAEjB,SAAS,CAACuB,IAAV,CAAeH,UAH3B;AAIfP,EAAAA,eAAe,EAAEb,SAAS,CAACsB,MAAV,CAAiBF;AAJnB,C;AApBvBI,MAAM,CAACC,cAAP,CAAsBC,6BAAtB,EAAqD,MAArD,EAA6D;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7D;;;AAuEA,eAAevB,4BAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { ProductType } from 'Type/ProductList';\n\nimport GroupedProductsItem from './GroupedProductsItem.component';\n\n/** @namespace Component/GroupedProductsItem/Container */\nexport class GroupedProductsItemContainer extends PureComponent {\n    static propTypes = {\n        product: ProductType.isRequired,\n        groupedProductQuantity: PropTypes.objectOf(PropTypes.number).isRequired,\n        setGroupedProductQuantity: PropTypes.func.isRequired,\n        defaultQuantity: PropTypes.number.isRequired\n    };\n\n    containerFunctions = {\n        changeCount: this.changeCount.bind(this)\n    };\n\n    __construct(props) {\n        super.__construct(props);\n\n        const { defaultQuantity } = this.props;\n        this.changeCount(defaultQuantity);\n    }\n\n    containerProps = () => ({\n        itemCount: this._getCurrentQuantity()\n    });\n\n    /**\n     * Get the selected quantity of grouped product\n     * @return {Number} product quantity\n     */\n    _getCurrentQuantity() {\n        const {\n            product: { id },\n            groupedProductQuantity\n        } = this.props;\n\n        return groupedProductQuantity[id] || 0;\n    }\n\n    changeCount(itemCount) {\n        const { setGroupedProductQuantity, product: { id } } = this.props;\n        setGroupedProductQuantity(id, itemCount);\n    }\n\n    render() {\n        return (\n            <GroupedProductsItem\n              { ...this.props }\n              { ...this.containerFunctions }\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default GroupedProductsItemContainer;\n"]},"metadata":{},"sourceType":"module"}