{"ast":null,"code":"import getPluginsForClass from \"../helpers/getPluginsForClass\";\nimport getWrapperFromPlugin from \"../helpers/getWrapperFromPlugin\";\n/**\n * Provide an opportunity to wrap proxy with additional functions.\n * @param {Function} origMember\n * @param {Array} sortedPlugins\n * @param Context origContext\n */\n\nexport default (function (proxy) {\n  const {\n    __namespaces__\n  } = proxy.prototype;\n  const namespacePluginsClass = getPluginsForClass(__namespaces__); // Wrap class in its `class` plugins to provide `class` API\n\n  const wrappedClass = namespacePluginsClass.reduce(function (acc, plugin) {\n    return getWrapperFromPlugin(plugin, proxy.name)(acc);\n  }, proxy);\n  return wrappedClass;\n});","map":{"version":3,"sources":["D:/task/magento2/ScandiPWA/node_modules/@scandipwa/scandipwa-extensibility/lib/middlewarers/generateMiddlewaredClass.js"],"names":["getPluginsForClass","getWrapperFromPlugin","proxy","__namespaces__","prototype","namespacePluginsClass","wrappedClass","reduce","acc","plugin","name"],"mappings":"AAAA,OAAOA,kBAAP;AACA,OAAOC,oBAAP;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAe,UAACC,KAAD,EAAW;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAqBD,KAAK,CAACE,SAAjC;AACA,QAAMC,qBAAqB,GAAGL,kBAAkB,CAACG,cAAD,CAAhD,CAFsB,CAItB;;AACA,QAAMG,YAAY,GAAGD,qBAAqB,CAACE,MAAtB,CACjB,UAACC,GAAD,EAAMC,MAAN;AAAA,WAAiBR,oBAAoB,CAACQ,MAAD,EAASP,KAAK,CAACQ,IAAf,CAApB,CAAyCF,GAAzC,CAAjB;AAAA,GADiB,EAEjBN,KAFiB,CAArB;AAKA,SAAOI,YAAP;AACH,CAXD","sourcesContent":["import getPluginsForClass from '../helpers/getPluginsForClass';\nimport getWrapperFromPlugin from '../helpers/getWrapperFromPlugin';\n\n/**\n * Provide an opportunity to wrap proxy with additional functions.\n * @param {Function} origMember\n * @param {Array} sortedPlugins\n * @param Context origContext\n */\nexport default (proxy) => {\n    const { __namespaces__ } = proxy.prototype;\n    const namespacePluginsClass = getPluginsForClass(__namespaces__);\n\n    // Wrap class in its `class` plugins to provide `class` API\n    const wrappedClass = namespacePluginsClass.reduce(\n        (acc, plugin) => getWrapperFromPlugin(plugin, proxy.name)(acc),\n        proxy\n    );\n\n    return wrappedClass;\n};\n"]},"metadata":{},"sourceType":"module"}