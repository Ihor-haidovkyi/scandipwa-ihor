{"ast":null,"code":"import _objectSpread from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import{UPDATE_META}from\"./Meta.action\";export var updateEveryTime=['title','description','keywords','canonical_url','robots','status_code'];/** @namespace Store/Meta/Reducer/filterData */export var filterData=middleware(function(data){var updated=updateEveryTime.reduce(function(acc,key){acc[key]=data[key];return acc;},{});return _objectSpread(_objectSpread({},data),updated);},\"Store/Meta/Reducer/filterData\");/** @namespace Store/Meta/Reducer/getInitialState */export var getInitialState=middleware(function(){return{title:'',title_prefix:'',title_suffix:'',description:'',keywords:'',canonical_url:'',robots:'',status_code:''};},\"Store/Meta/Reducer/getInitialState\");/** @namespace Store/Meta/Reducer */export var MetaReducer=middleware(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:getInitialState();var action=arguments.length>1?arguments[1]:undefined;var _action$payload=action.payload,payload=_action$payload===void 0?{}:_action$payload,type=action.type;switch(type){case UPDATE_META:var filteredData=filterData(payload);return _objectSpread(_objectSpread({},state),filteredData);default:return state;}},\"Store/Meta/Reducer\");export default MetaReducer;","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/store/Meta/Meta.reducer.js"],"names":["UPDATE_META","updateEveryTime","filterData","data","updated","reduce","acc","key","getInitialState","title","title_prefix","title_suffix","description","keywords","canonical_url","robots","status_code","MetaReducer","state","action","payload","type","filteredData"],"mappings":"gJAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,OAASA,WAAT,qBAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,CAC3B,OAD2B,CAE3B,aAF2B,CAG3B,UAH2B,CAI3B,eAJ2B,CAK3B,QAL2B,CAM3B,aAN2B,CAAxB,CASP,+CACA,MAAO,IAAMC,CAAAA,UAAU,YAAG,SAACC,IAAD,CAAU,CAChC,GAAMC,CAAAA,OAAO,CAAGH,eAAe,CAACI,MAAhB,CAAuB,SAACC,GAAD,CAAMC,GAAN,CAAc,CACjDD,GAAG,CAACC,GAAD,CAAH,CAAWJ,IAAI,CAACI,GAAD,CAAf,CACA,MAAOD,CAAAA,GAAP,CACH,CAHe,CAGb,EAHa,CAAhB,CAKA,sCAAYH,IAAZ,EAAqBC,OAArB,EACH,CAPsB,iCAAhB,CASP,oDACA,MAAO,IAAMI,CAAAA,eAAe,YAAG,iBAAO,CAClCC,KAAK,CAAE,EAD2B,CAElCC,YAAY,CAAE,EAFoB,CAGlCC,YAAY,CAAE,EAHoB,CAIlCC,WAAW,CAAE,EAJqB,CAKlCC,QAAQ,CAAE,EALwB,CAMlCC,aAAa,CAAE,EANmB,CAOlCC,MAAM,CAAE,EAP0B,CAQlCC,WAAW,CAAE,EARqB,CAAP,EAAH,sCAArB,CAWP,oCACA,MAAO,IAAMC,CAAAA,WAAW,YAAG,UAGtB,IAFDC,CAAAA,KAEC,2DAFOV,eAAe,EAEtB,IADDW,CAAAA,MACC,+DAC8BA,MAD9B,CACOC,OADP,CACOA,OADP,0BACiB,EADjB,iBACqBC,IADrB,CAC8BF,MAD9B,CACqBE,IADrB,CAGD,OAAQA,IAAR,EACA,IAAKrB,CAAAA,WAAL,CACI,GAAMsB,CAAAA,YAAY,CAAGpB,UAAU,CAACkB,OAAD,CAA/B,CAEA,sCACOF,KADP,EAEOI,YAFP,EAKJ,QACI,MAAOJ,CAAAA,KAAP,CAVJ,CAYH,CAlBuB,sBAAjB,CAoBP,cAAeD,CAAAA,WAAf","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport { UPDATE_META } from './Meta.action';\n\nexport const updateEveryTime = [\n    'title',\n    'description',\n    'keywords',\n    'canonical_url',\n    'robots',\n    'status_code'\n];\n\n/** @namespace Store/Meta/Reducer/filterData */\nexport const filterData = (data) => {\n    const updated = updateEveryTime.reduce((acc, key) => {\n        acc[key] = data[key];\n        return acc;\n    }, {});\n\n    return { ...data, ...updated };\n};\n\n/** @namespace Store/Meta/Reducer/getInitialState */\nexport const getInitialState = () => ({\n    title: '',\n    title_prefix: '',\n    title_suffix: '',\n    description: '',\n    keywords: '',\n    canonical_url: '',\n    robots: '',\n    status_code: ''\n});\n\n/** @namespace Store/Meta/Reducer */\nexport const MetaReducer = (\n    state = getInitialState(),\n    action\n) => {\n    const { payload = {}, type } = action;\n\n    switch (type) {\n    case UPDATE_META:\n        const filteredData = filterData(payload);\n\n        return {\n            ...state,\n            ...filteredData\n        };\n\n    default:\n        return state;\n    }\n};\n\nexport default MetaReducer;\n"]},"metadata":{},"sourceType":"module"}