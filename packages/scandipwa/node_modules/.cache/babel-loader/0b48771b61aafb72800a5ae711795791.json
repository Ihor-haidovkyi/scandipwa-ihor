{"ast":null,"code":"var _jsxFileName = \"/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountDownloadable/MyAccountDownloadable.container.js\";\n\n/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport OrderQuery from \"/home/marketihor/scandipwa/packages/scandipwa/src/query/Order.query\";\nimport { showNotification } from \"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";\nimport { DeviceType } from \"/home/marketihor/scandipwa/packages/scandipwa/src/type/Device\";\nimport { fetchQuery, getErrorMessage } from \"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request\";\nimport MyAccountDownloadable from \"./MyAccountDownloadable.component\";\nexport const OrderDispatcher = import(\n/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Order/Order.dispatcher\");\n/** @namespace Component/MyAccountDownloadable/Container/mapStateToProps */\n\nexport const mapStateToProps = middleware(function (state) {\n  return {\n    orderList: state.OrderReducer.orderList,\n    device: state.ConfigReducer.device\n  };\n}, \"Component/MyAccountDownloadable/Container/mapStateToProps\");\n/** @namespace Component/MyAccountDownloadable/Container/mapDispatchToProps */\n\nexport const mapDispatchToProps = middleware(function (dispatch) {\n  return {\n    showErrorNotification: function (message) {\n      return dispatch(showNotification('error', message));\n    },\n    showSuccessNotification: function (message) {\n      return dispatch(showNotification('success', message));\n    },\n    getOrderList: function () {\n      return OrderDispatcher.then(function ({\n        default: dispatcher\n      }) {\n        return dispatcher.requestOrders(dispatch);\n      });\n    }\n  };\n}, \"Component/MyAccountDownloadable/Container/mapDispatchToProps\");\n/** @namespace Component/MyAccountDownloadable/Container */\n\nvar _checkBEM = require(\"babel-plugin-transform-rebem-jsx\").checkBEMProps;\n\nexport class _MyAccountDownloadableContainer extends Extensible(PureComponent) {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      items: [],\n      isLoading: false\n    };\n\n    this.containerProps = function () {\n      const {\n        device\n      } = _this.props;\n      const {\n        isLoading\n      } = _this.state;\n      return {\n        device,\n        isLoading,\n        items: _this._prepareDownloadableProps()\n      };\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getOrderList\n    } = this.props;\n    getOrderList();\n    this.requestDownloadable();\n  }\n\n  _prepareDownloadableProps() {\n    const {\n      items\n    } = this.state;\n\n    if (!(items === null || items === void 0 ? void 0 : items.length)) {\n      return [];\n    }\n\n    return items.reduce(function (acc, item, index) {\n      acc.push({\n        id: index,\n        order_id: item.order_increment_id,\n        status_label: item.status,\n        created_at: item.date,\n        download_url: item.download_url,\n        downloads: item.remaining_downloads,\n        title: item.title,\n        link_title: item.link_title\n      });\n      return acc;\n    }, []);\n  }\n\n  requestDownloadable() {\n    var _this2 = this;\n\n    const {\n      showErrorNotification\n    } = this.props;\n    this.setState({\n      isLoading: true\n    });\n    fetchQuery(OrderQuery.getDownloadableQuery()).then(\n    /** @namespace Component/MyAccountDownloadable/Container/requestDownloadable/success */\n    middleware(function (data) {\n      const {\n        customerDownloadableProducts: {\n          items = []\n        } = {}\n      } = data;\n\n      _this2.setState({\n        items,\n        isLoading: false\n      });\n    }, \"Component/MyAccountDownloadable/Container/requestDownloadable/success\"),\n    /** @namespace Component/MyAccountDownloadable/Container/requestDownloadable/error */\n    middleware(function (err) {\n      showErrorNotification(getErrorMessage(err));\n\n      _this2.setState({\n        isLoading: false\n      });\n    }, \"Component/MyAccountDownloadable/Container/requestDownloadable/error\"));\n  }\n\n  render() {\n    return /*#__PURE__*/_checkBEM(React, MyAccountDownloadable, Object.assign({}, this.containerProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n_MyAccountDownloadableContainer.propTypes = {\n  device: DeviceType.isRequired,\n  showErrorNotification: PropTypes.func.isRequired,\n  showSuccessNotification: PropTypes.func.isRequired,\n  getOrderList: PropTypes.func.isRequired\n};\nObject.defineProperty(_MyAccountDownloadableContainer, 'name', {\n  value: 'MyAccountDownloadableContainer'\n});\n\nexport const MyAccountDownloadableContainer = middleware(_MyAccountDownloadableContainer, \"Component/MyAccountDownloadable/Container\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountDownloadableContainer);","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/component/MyAccountDownloadable/MyAccountDownloadable.container.js"],"names":["PropTypes","PureComponent","connect","OrderQuery","showNotification","DeviceType","fetchQuery","getErrorMessage","MyAccountDownloadable","OrderDispatcher","mapStateToProps","state","orderList","OrderReducer","device","ConfigReducer","mapDispatchToProps","dispatch","showErrorNotification","message","showSuccessNotification","getOrderList","then","default","dispatcher","requestOrders","MyAccountDownloadableContainer","items","isLoading","containerProps","props","_prepareDownloadableProps","componentDidMount","requestDownloadable","length","reduce","acc","item","index","push","id","order_id","order_increment_id","status_label","status","created_at","date","download_url","downloads","remaining_downloads","title","link_title","setState","getDownloadableQuery","data","customerDownloadableProducts","err","render","propTypes","isRequired","func","Object","defineProperty","_MyAccountDownloadableContainer","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright © Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\n\nimport OrderQuery from 'Query/Order.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport { DeviceType } from 'Type/Device';\nimport { fetchQuery, getErrorMessage } from 'Util/Request';\n\nimport MyAccountDownloadable from './MyAccountDownloadable.component';\n\nexport const OrderDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Order/Order.dispatcher'\n);\n\n/** @namespace Component/MyAccountDownloadable/Container/mapStateToProps */\nexport const mapStateToProps = (state) => ({\n    orderList: state.OrderReducer.orderList,\n    device: state.ConfigReducer.device\n});\n\n/** @namespace Component/MyAccountDownloadable/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showErrorNotification: (message) => dispatch(showNotification('error', message)),\n    showSuccessNotification: (message) => dispatch(showNotification('success', message)),\n    getOrderList: () => OrderDispatcher.then(\n        ({ default: dispatcher }) => dispatcher.requestOrders(dispatch)\n    )\n});\n\n/** @namespace Component/MyAccountDownloadable/Container */\nexport class MyAccountDownloadableContainer extends PureComponent {\n    static propTypes = {\n        device: DeviceType.isRequired,\n        showErrorNotification: PropTypes.func.isRequired,\n        showSuccessNotification: PropTypes.func.isRequired,\n        getOrderList: PropTypes.func.isRequired\n    };\n\n    state = {\n        items: [],\n        isLoading: false\n    };\n\n    componentDidMount() {\n        const { getOrderList } = this.props;\n\n        getOrderList();\n        this.requestDownloadable();\n    }\n\n    containerProps = () => {\n        const { device } = this.props;\n        const { isLoading } = this.state;\n\n        return {\n            device,\n            isLoading,\n            items: this._prepareDownloadableProps()\n        };\n    };\n\n    _prepareDownloadableProps() {\n        const { items } = this.state;\n\n        if (!items?.length) {\n            return [];\n        }\n\n        return items.reduce((acc, item, index) => {\n            acc.push({\n                id: index,\n                order_id: item.order_increment_id,\n                status_label: item.status,\n                created_at: item.date,\n                download_url: item.download_url,\n                downloads: item.remaining_downloads,\n                title: item.title,\n                link_title: item.link_title\n            });\n\n            return acc;\n        }, []);\n    }\n\n    requestDownloadable() {\n        const { showErrorNotification } = this.props;\n\n        this.setState({ isLoading: true });\n\n        fetchQuery(\n            OrderQuery.getDownloadableQuery()\n        ).then(\n            /** @namespace Component/MyAccountDownloadable/Container/requestDownloadable/success */\n            ((data) => {\n                const { customerDownloadableProducts: { items = [] } = {} } = data;\n                this.setState({ items, isLoading: false });\n            }),\n            /** @namespace Component/MyAccountDownloadable/Container/requestDownloadable/error */\n            (err) => {\n                showErrorNotification(getErrorMessage(err));\n                this.setState({ isLoading: false });\n            }\n        );\n    }\n\n    render() {\n        return (\n            <MyAccountDownloadable\n              { ...this.containerProps() }\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAccountDownloadableContainer);\n"]},"metadata":{},"sourceType":"module"}