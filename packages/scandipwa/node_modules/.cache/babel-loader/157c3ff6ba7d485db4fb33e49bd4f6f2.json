{"ast":null,"code":"import _defineProperty from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/marketihor/scandipwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */import WishlistQuery from\"/home/marketihor/scandipwa/packages/scandipwa/src/query/Wishlist.query\";import{showNotification}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Notification/Notification.action\";import{clearWishlist as _clearWishlist,removeItemFromWishlist as _removeItemFromWishlist,updateAllProductsInWishlist,updateIsLoading,updateItemOptions}from\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Wishlist/Wishlist.action\";import{isSignedIn}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Auth\";import{fetchMutation,fetchQuery,getErrorMessage}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Request\";import getStore from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Store\";import{getPriceRange}from\"/home/marketihor/scandipwa/packages/scandipwa/src/util/Wishlist\";export var CartDispatcher=import(/* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\"/home/marketihor/scandipwa/packages/scandipwa/src/store/Cart/Cart.dispatcher\");/**\n * Get wishlist setting.\n * @namespace /Store/Wishlist/Dispatcher/isWishlistEnabled\n */export var isWishlistEnabled=middleware(function(){var state=getStore().getState();var _state$ConfigReducer$=state.ConfigReducer.wishlist_general_active,wishlist_general_active=_state$ConfigReducer$===void 0?false:_state$ConfigReducer$;return wishlist_general_active;},\"/Store/Wishlist/Dispatcher/isWishlistEnabled\\n\");/**\n * Product Wishlist Dispatcher\n * @class WishlistDispatcher\n * @namespace Store/Wishlist/Dispatcher\n */export var _WishlistDispatcher=/*#__PURE__*/function(_Extensible){_inherits(_WishlistDispatcher,_Extensible);var _super=_createSuper(_WishlistDispatcher);function _WishlistDispatcher(){_classCallCheck(this,_WishlistDispatcher);return _super.apply(this,arguments);}_createClass(_WishlistDispatcher,[{key:\"updateInitialWishlistData\",value:function updateInitialWishlistData(dispatch){if(isSignedIn()&&isWishlistEnabled()){this._syncWishlistWithBE(dispatch);}else{dispatch(updateAllProductsInWishlist({}));}}},{key:\"_syncWishlistWithBE\",value:function _syncWishlistWithBE(dispatch){// Need to get current wishlist from BE, update wishlist\nreturn fetchQuery(WishlistQuery.getWishlistQuery()).then(/** @namespace Store/Wishlist/Dispatcher/_syncWishlistWithBEFetchQueryThen */middleware(function(data){if(data&&data.wishlist){var wishlist=data.wishlist;var productsToAdd=wishlist.items.reduce(function(prev,wishlistItem){var id=wishlistItem.id,sku=wishlistItem.sku,product=wishlistItem.product,description=wishlistItem.description,price=wishlistItem.price,price_without_tax=wishlistItem.price_without_tax,buy_request=wishlistItem.buy_request,options=wishlistItem.options,quantity=wishlistItem.qty;var priceRange=getPriceRange(product,price,price_without_tax);return _objectSpread(_objectSpread({},prev),{},_defineProperty({},id,_objectSpread(_objectSpread(_objectSpread({},product),priceRange),{},{quantity:quantity,wishlist:{id:id,sku:sku,quantity:quantity,description:description,buy_request:buy_request,options:options}})));},{});dispatch(updateAllProductsInWishlist(productsToAdd));}else{dispatch(updateIsLoading(false));}},\"Store/Wishlist/Dispatcher/_syncWishlistWithBEFetchQueryThen\"),/** @namespace Store/Wishlist/Dispatcher/_syncWishlistWithBEFetchQueryError */middleware(function(){dispatch(updateIsLoading(false));},\"Store/Wishlist/Dispatcher/_syncWishlistWithBEFetchQueryError\"));}},{key:\"addItemToWishlist\",value:function addItemToWishlist(dispatch,wishlistItem){var _this=this;if(!isSignedIn()){return Promise.reject();}dispatch(updateIsLoading(true));dispatch(showNotification('success',__('Product added to wish-list!')));return fetchMutation(WishlistQuery.getSaveWishlistItemMutation(wishlistItem)).then(/** @namespace Store/Wishlist/Dispatcher/addItemToWishlistFetchMutationThen */middleware(function(){return _this._syncWishlistWithBE(dispatch);},\"Store/Wishlist/Dispatcher/addItemToWishlistFetchMutationThen\"),/** @namespace Store/Wishlist/Dispatcher/addItemToWishlistFetchMutationError */middleware(function(){dispatch(showNotification('error',__('Error updating wish list!')));},\"Store/Wishlist/Dispatcher/addItemToWishlistFetchMutationError\"));}},{key:\"updateWishlistItem\",value:function updateWishlistItem(dispatch,options){if(!isSignedIn()){return Promise.reject();}return fetchMutation(WishlistQuery.getSaveWishlistItemMutation(options)).then(/** @namespace Store/Wishlist/Dispatcher/updateWishlistItemFetchMutationThen */middleware(function(){return dispatch(updateItemOptions(options));},\"Store/Wishlist/Dispatcher/updateWishlistItemFetchMutationThen\"));}},{key:\"clearWishlist\",value:function clearWishlist(dispatch){if(!isSignedIn()){return Promise.reject();}return fetchMutation(WishlistQuery.getClearWishlist()).then(/** @namespace Store/Wishlist/Dispatcher/clearWishlistFetchMutationThen */middleware(function(){return dispatch(_clearWishlist());},\"Store/Wishlist/Dispatcher/clearWishlistFetchMutationThen\")).catch(/** @namespace Store/Wishlist/Dispatcher/clearWishlistFetchMutationThenCatch */middleware(function(){return dispatch(showNotification('error',__('Error clearing wish list!')));},\"Store/Wishlist/Dispatcher/clearWishlistFetchMutationThenCatch\"));}},{key:\"moveWishlistToCart\",value:function moveWishlistToCart(dispatch,sharingCode){var _this2=this;if(!isSignedIn()){return Promise.reject();}return fetchMutation(WishlistQuery.getMoveWishlistToCart(sharingCode)).then(/** @namespace Store/Wishlist/Dispatcher/moveWishlistToCartFetchMutationThen */middleware(function(){_this2._syncWishlistWithBE(dispatch);CartDispatcher.then(function(_ref){var dispatcher=_ref.default;return dispatcher.updateInitialCartData(dispatch);});},\"Store/Wishlist/Dispatcher/moveWishlistToCartFetchMutationThen\"));}},{key:\"removeItemFromWishlist\",value:function removeItemFromWishlist(dispatch,_ref2){var item_id=_ref2.item_id,noMessages=_ref2.noMessages;if(!item_id||!isSignedIn()){return Promise.reject();}dispatch(updateIsLoading(true));if(noMessages){return fetchMutation(WishlistQuery.getRemoveProductFromWishlistMutation(item_id)).then(/** @namespace Store/Wishlist/Dispatcher/removeItemFromWishlistNoMessagesFetchMutationThen */middleware(function(){return dispatch(_removeItemFromWishlist(item_id));},\"Store/Wishlist/Dispatcher/removeItemFromWishlistNoMessagesFetchMutationThen\"));}dispatch(showNotification('info',__('Product has been removed from your Wish List!')));return fetchMutation(WishlistQuery.getRemoveProductFromWishlistMutation(item_id)).then(/** @namespace Store/Wishlist/Dispatcher/removeItemFromWishlistFetchMutationThen */middleware(function(){return dispatch(_removeItemFromWishlist(item_id));},\"Store/Wishlist/Dispatcher/removeItemFromWishlistFetchMutationThen\"),/** @namespace Store/Wishlist/Dispatcher/removeItemFromWishlistFetchMutationError */middleware(function(){dispatch(showNotification('error',__('Error updating wish list!')));},\"Store/Wishlist/Dispatcher/removeItemFromWishlistFetchMutationError\"));}// TODO: Need to make it in one request\n},{key:\"removeItemsFromWishlist\",value:function removeItemsFromWishlist(dispatch,itemIdMap){if(!itemIdMap.length||!isSignedIn()){return Promise.reject();}return itemIdMap.map(function(id){return fetchMutation(WishlistQuery.getRemoveProductFromWishlistMutation(id)).then(/** @namespace Store/Wishlist/Dispatcher/removeItemsFromWishlistNoMessagesFetchMutationThen */middleware(function(){dispatch(_removeItemFromWishlist(id));dispatch(showNotification('info',__('Product has been removed from your Wish List!')));},\"Store/Wishlist/Dispatcher/removeItemsFromWishlistNoMessagesFetchMutationThen\"),/** @namespace Store/Wishlist/Dispatcher/removeItemsFromWishlistFetchMutationError */middleware(function(error){dispatch(showNotification('error',getErrorMessage(error,__('Error updating wishlist!'))));},\"Store/Wishlist/Dispatcher/removeItemsFromWishlistFetchMutationError\"));});}},{key:\"resetWishlist\",value:function resetWishlist(dispatch){dispatch(_clearWishlist());}}]);return _WishlistDispatcher;}(Extensible());Object.defineProperty(_WishlistDispatcher,'name',{value:'WishlistDispatcher'});export var WishlistDispatcher=middleware(_WishlistDispatcher,\"Store/Wishlist/Dispatcher\");export default new WishlistDispatcher();","map":{"version":3,"sources":["/home/marketihor/scandipwa/packages/scandipwa/src/store/Wishlist/Wishlist.dispatcher.js"],"names":["WishlistQuery","showNotification","clearWishlist","removeItemFromWishlist","updateAllProductsInWishlist","updateIsLoading","updateItemOptions","isSignedIn","fetchMutation","fetchQuery","getErrorMessage","getStore","getPriceRange","CartDispatcher","isWishlistEnabled","state","getState","ConfigReducer","wishlist_general_active","WishlistDispatcher","dispatch","_syncWishlistWithBE","getWishlistQuery","then","data","wishlist","productsToAdd","items","reduce","prev","wishlistItem","id","sku","product","description","price","price_without_tax","buy_request","options","quantity","qty","priceRange","Promise","reject","__","getSaveWishlistItemMutation","getClearWishlist","catch","sharingCode","getMoveWishlistToCart","dispatcher","default","updateInitialCartData","item_id","noMessages","getRemoveProductFromWishlistMutation","itemIdMap","length","map","error","Object","defineProperty","_WishlistDispatcher","value"],"mappings":"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","sourcesContent":["/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport WishlistQuery from 'Query/Wishlist.query';\nimport { showNotification } from 'Store/Notification/Notification.action';\nimport {\n    clearWishlist,\n    removeItemFromWishlist,\n    updateAllProductsInWishlist,\n    updateIsLoading,\n    updateItemOptions\n} from 'Store/Wishlist/Wishlist.action';\nimport { isSignedIn } from 'Util/Auth';\nimport { fetchMutation, fetchQuery, getErrorMessage } from 'Util/Request';\nimport getStore from 'Util/Store';\nimport { getPriceRange } from 'Util/Wishlist';\n\nexport const CartDispatcher = import(\n    /* webpackMode: \"lazy\", webpackChunkName: \"dispatchers\" */\n    'Store/Cart/Cart.dispatcher'\n);\n\n/**\n * Get wishlist setting.\n * @namespace /Store/Wishlist/Dispatcher/isWishlistEnabled\n */\nexport const isWishlistEnabled = () => {\n    const state = getStore().getState();\n    const {\n        wishlist_general_active = false\n    } = state.ConfigReducer;\n\n    return wishlist_general_active;\n};\n\n/**\n * Product Wishlist Dispatcher\n * @class WishlistDispatcher\n * @namespace Store/Wishlist/Dispatcher\n */\nexport class WishlistDispatcher {\n    updateInitialWishlistData(dispatch) {\n        if (isSignedIn() && isWishlistEnabled()) {\n            this._syncWishlistWithBE(dispatch);\n        } else {\n            dispatch(updateAllProductsInWishlist({}));\n        }\n    }\n\n    _syncWishlistWithBE(dispatch) {\n        // Need to get current wishlist from BE, update wishlist\n        return fetchQuery(WishlistQuery.getWishlistQuery()).then(\n            /** @namespace Store/Wishlist/Dispatcher/_syncWishlistWithBEFetchQueryThen */\n            (data) => {\n                if (data && data.wishlist) {\n                    const { wishlist } = data;\n                    const productsToAdd = wishlist.items.reduce((prev, wishlistItem) => {\n                        const {\n                            id,\n                            sku,\n                            product,\n                            description,\n                            price,\n                            price_without_tax,\n                            buy_request,\n                            options,\n                            qty: quantity\n                        } = wishlistItem;\n\n                        const priceRange = getPriceRange(product, price, price_without_tax);\n\n                        return {\n                            ...prev,\n                            [id]: {\n                                ...product,\n                                ...priceRange,\n                                quantity,\n                                wishlist: {\n                                    id,\n                                    sku,\n                                    quantity,\n                                    description,\n                                    buy_request,\n                                    options\n                                }\n                            }\n                        };\n                    }, {});\n\n                    dispatch(updateAllProductsInWishlist(productsToAdd));\n                } else {\n                    dispatch(updateIsLoading(false));\n                }\n            },\n            /** @namespace Store/Wishlist/Dispatcher/_syncWishlistWithBEFetchQueryError */\n            () => {\n                dispatch(updateIsLoading(false));\n            }\n        );\n    }\n\n    addItemToWishlist(dispatch, wishlistItem) {\n        if (!isSignedIn()) {\n            return Promise.reject();\n        }\n\n        dispatch(updateIsLoading(true));\n        dispatch(showNotification('success', __('Product added to wish-list!')));\n\n        return fetchMutation(WishlistQuery.getSaveWishlistItemMutation(wishlistItem)).then(\n            /** @namespace Store/Wishlist/Dispatcher/addItemToWishlistFetchMutationThen */\n            () => this._syncWishlistWithBE(dispatch),\n            /** @namespace Store/Wishlist/Dispatcher/addItemToWishlistFetchMutationError */\n            () => {\n                dispatch(showNotification('error', __('Error updating wish list!')));\n            }\n        );\n    }\n\n    updateWishlistItem(dispatch, options) {\n        if (!isSignedIn()) {\n            return Promise.reject();\n        }\n\n        return fetchMutation(WishlistQuery.getSaveWishlistItemMutation(options)).then(\n            /** @namespace Store/Wishlist/Dispatcher/updateWishlistItemFetchMutationThen */\n            () => dispatch(updateItemOptions(options))\n        );\n    }\n\n    clearWishlist(dispatch) {\n        if (!isSignedIn()) {\n            return Promise.reject();\n        }\n\n        return fetchMutation(WishlistQuery.getClearWishlist())\n            .then(\n                /** @namespace Store/Wishlist/Dispatcher/clearWishlistFetchMutationThen */\n                () => dispatch(clearWishlist())\n            )\n            .catch(\n                /** @namespace Store/Wishlist/Dispatcher/clearWishlistFetchMutationThenCatch */\n                () => dispatch(showNotification('error', __('Error clearing wish list!')))\n            );\n    }\n\n    moveWishlistToCart(dispatch, sharingCode) {\n        if (!isSignedIn()) {\n            return Promise.reject();\n        }\n\n        return fetchMutation(WishlistQuery.getMoveWishlistToCart(sharingCode))\n            .then(\n                /** @namespace Store/Wishlist/Dispatcher/moveWishlistToCartFetchMutationThen */\n                () => {\n                    this._syncWishlistWithBE(dispatch);\n                    CartDispatcher.then(\n                        ({ default: dispatcher }) => dispatcher.updateInitialCartData(dispatch)\n                    );\n                }\n            );\n    }\n\n    removeItemFromWishlist(dispatch, { item_id, noMessages }) {\n        if (!item_id || !isSignedIn()) {\n            return Promise.reject();\n        }\n        dispatch(updateIsLoading(true));\n\n        if (noMessages) {\n            return fetchMutation(WishlistQuery.getRemoveProductFromWishlistMutation(item_id)).then(\n                /** @namespace Store/Wishlist/Dispatcher/removeItemFromWishlistNoMessagesFetchMutationThen */\n                () => dispatch(removeItemFromWishlist(item_id))\n            );\n        }\n\n        dispatch(showNotification('info', __('Product has been removed from your Wish List!')));\n\n        return fetchMutation(WishlistQuery.getRemoveProductFromWishlistMutation(item_id)).then(\n            /** @namespace Store/Wishlist/Dispatcher/removeItemFromWishlistFetchMutationThen */\n            () => dispatch(removeItemFromWishlist(item_id)),\n            /** @namespace Store/Wishlist/Dispatcher/removeItemFromWishlistFetchMutationError */\n            () => {\n                dispatch(showNotification('error', __('Error updating wish list!')));\n            }\n        );\n    }\n\n    // TODO: Need to make it in one request\n    removeItemsFromWishlist(dispatch, itemIdMap) {\n        if (!itemIdMap.length || !isSignedIn()) {\n            return Promise.reject();\n        }\n\n        return itemIdMap.map((id) => (\n            fetchMutation(WishlistQuery.getRemoveProductFromWishlistMutation(id)).then(\n                /** @namespace Store/Wishlist/Dispatcher/removeItemsFromWishlistNoMessagesFetchMutationThen */\n                () => {\n                    dispatch(removeItemFromWishlist(id));\n                    dispatch(showNotification('info', __('Product has been removed from your Wish List!')));\n                },\n                /** @namespace Store/Wishlist/Dispatcher/removeItemsFromWishlistFetchMutationError */\n                (error) => {\n                    dispatch(showNotification('error', getErrorMessage(error, __('Error updating wishlist!'))));\n                }\n            )\n        ));\n    }\n\n    resetWishlist(dispatch) {\n        dispatch(clearWishlist());\n    }\n}\n\nexport default new WishlistDispatcher();\n"]},"metadata":{},"sourceType":"module"}