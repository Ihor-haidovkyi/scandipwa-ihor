{"ast":null,"code":"/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */exports=module.exports=createDebug.debug=createDebug['default']=createDebug;exports.coerce=coerce;exports.disable=disable;exports.enable=enable;exports.enabled=enabled;exports.humanize=require('ms');/**\n * The currently active debug mode names, and names to skip.\n */exports.names=[];exports.skips=[];/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */exports.formatters={};/**\n * Previous log timestamp.\n */var prevTime;/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */function selectColor(namespace){var hash=0,i;for(i in namespace){hash=(hash<<5)-hash+namespace.charCodeAt(i);hash|=0;// Convert to 32bit integer\n}return exports.colors[Math.abs(hash)%exports.colors.length];}/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */function createDebug(namespace){function debug(){// disabled?\nif(!debug.enabled)return;var self=debug;// set `diff` timestamp\nvar curr=+new Date();var ms=curr-(prevTime||curr);self.diff=ms;self.prev=prevTime;self.curr=curr;prevTime=curr;// turn the `arguments` into a proper Array\nvar args=new Array(arguments.length);for(var i=0;i<args.length;i++){args[i]=arguments[i];}args[0]=exports.coerce(args[0]);if('string'!==typeof args[0]){// anything else let's inspect with %O\nargs.unshift('%O');}// apply any `formatters` transformations\nvar index=0;args[0]=args[0].replace(/%([a-zA-Z%])/g,function(match,format){// if we encounter an escaped % then don't increase the array index\nif(match==='%%')return match;index++;var formatter=exports.formatters[format];if('function'===typeof formatter){var val=args[index];match=formatter.call(self,val);// now we need to remove `args[index]` since it's inlined in the `format`\nargs.splice(index,1);index--;}return match;});// apply env-specific formatting (colors, etc.)\nexports.formatArgs.call(self,args);var logFn=debug.log||exports.log||console.log.bind(console);logFn.apply(self,args);}debug.namespace=namespace;debug.enabled=exports.enabled(namespace);debug.useColors=exports.useColors();debug.color=selectColor(namespace);// env-specific initialization logic for debug instances\nif('function'===typeof exports.init){exports.init(debug);}return debug;}/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */function enable(namespaces){exports.save(namespaces);exports.names=[];exports.skips=[];var split=(typeof namespaces==='string'?namespaces:'').split(/[\\s,]+/);var len=split.length;for(var i=0;i<len;i++){if(!split[i])continue;// ignore empty strings\nnamespaces=split[i].replace(/\\*/g,'.*?');if(namespaces[0]==='-'){exports.skips.push(new RegExp('^'+namespaces.substr(1)+'$'));}else{exports.names.push(new RegExp('^'+namespaces+'$'));}}}/**\n * Disable debug output.\n *\n * @api public\n */function disable(){exports.enable('');}/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */function enabled(name){var i,len;for(i=0,len=exports.skips.length;i<len;i++){if(exports.skips[i].test(name)){return false;}}for(i=0,len=exports.names.length;i<len;i++){if(exports.names[i].test(name)){return true;}}return false;}/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */function coerce(val){if(val instanceof Error)return val.stack||val.message;return val;}","map":{"version":3,"sources":["/home/marketihor/scandipwa/node_modules/debug/src/debug.js"],"names":["exports","module","createDebug","debug","coerce","disable","enable","enabled","humanize","require","names","skips","formatters","prevTime","selectColor","namespace","hash","i","charCodeAt","colors","Math","abs","length","self","curr","Date","ms","diff","prev","args","Array","arguments","unshift","index","replace","match","format","formatter","val","call","splice","formatArgs","logFn","log","console","bind","apply","useColors","color","init","namespaces","save","split","len","push","RegExp","substr","name","test","Error","stack","message"],"mappings":"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","sourcesContent":["\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n"]},"metadata":{},"sourceType":"module"}